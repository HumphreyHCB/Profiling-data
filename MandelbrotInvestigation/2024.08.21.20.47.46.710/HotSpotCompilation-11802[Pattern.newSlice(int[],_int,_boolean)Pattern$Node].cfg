begin_compilation
  name " HotSpotCompilation-11802[java.util.regex.Pattern.newSlice(int[], int, boolean)]"
  method "HotSpotCompilation-11802[java.util.regex.Pattern.newSlice(int[], int, boolean)]"
  date 1724269768631
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j350 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j412 
=== Usages ===
v555 v556 
=== Predecessor ===
v430 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j412 v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
=== Succesors ===
next: j413 
=== Usages ===
j357 v557 v558 v559 a384 v560 v564 v561 v562 v563 
=== Predecessor ===
j350 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - #next: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
lastLocationAccess: - 
=== Succesors ===
next: v361 
=== Usages ===
v358 
=== Predecessor ===
j412 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v556 lastLocationAccess: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v419 i130 v141 i246 v68 j144 v530 i318 v217 v245 a385 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j354 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 6]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 j354 i275 v137 v141 i246 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j144 
y: i7 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j144 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j394 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j354 
y: j394 
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j354 y: j394  <|@  <|@
f <@~|@floating>@ <|@
tid j355 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j395 
y: j355 
=== Succesors ===
=== Usages ===
j357 v373 j397 v561 v562 v563 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j395 y: j355  <|@  <|@
f <@~|@floating>@ <|@
tid j357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64
=== Inputs ===
x: j356 
y: j412 
=== Succesors ===
=== Usages ===
v358 v414 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j356 y: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j413 
y: j357 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j413 y: j357  <|@  <|@
f <@~|@floating>@ <|@
tid j341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v469 j337 v420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j362 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v415 v464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v537 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# int[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v551 v553 v538 v539 v541 v545 v547 v549 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v32 ?66 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern.newSlice(int[], int, boolean)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3691
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v534 v338 a385 i519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v359 
=== Usages ===
=== Predecessor ===
j413 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v360 #falseSuccessor: v359  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a385 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a385  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a385 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v349 i3 
=== Succesors ===
next: v534 
=== Usages ===
v534 a410 
=== Predecessor ===
v360 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v349 i3 #next: v534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-109169|0xfffffffffffe558f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a385 
=== Succesors ===
next: v389 
=== Usages ===
=== Predecessor ===
a385 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a385 #next: v389  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
value: j357 
stateAfter: - 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - value: j357 stateAfter: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j356 
index: j412 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
address: v561 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v561 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j356 
index: j412 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
address: v562 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v562 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j356 
index: j412 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
address: v563 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v563 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
value: j362 
stateAfter: - 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - value: j362 stateAfter: - #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
value: v481 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - value: v481 stateAfter: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - value: i3 stateAfter: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid j396 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j356 
y: j396 
=== Succesors ===
=== Usages ===
v365 v369 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j356 y: j396  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j397 
y: j399 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j397 y: j399  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v365 
=== Succesors ===
trueSuccessor: v367 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v365 #trueSuccessor: v367 #falseSuccessor: v366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid j398 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j74 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 1]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
v367 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v371 
values: j74 j381 
=== Succesors ===
=== Usages ===
v373 v559 j381 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v371 values: j74 j381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v370 
=== Succesors ===
next: v379 
=== Usages ===
j372 v378 v382 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v370 #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j372 
y: j356 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j372 y: j356  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v373 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v378 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v373 #trueSuccessor: v374 #falseSuccessor: v378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: j372 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: j372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: j341 
stateAfter: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: j341 stateAfter: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid j381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64
=== Inputs ===
x: j372 
y: j398 
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j372 y: j398  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v371 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v371  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v371 
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v371 #next: v377  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
length: j397 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - length: j397 #next: v375  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v375 v377 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v375 v377 #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a384 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j412 
=== Succesors ===
next: v387 
=== Usages ===
a410 
=== Predecessor ===
v383 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j412 #next: v387  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
a384 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v388 
values: a384 a385 
=== Succesors ===
=== Usages ===
v552 v554 v540 a183 ?66 v542 v546 v548 v550 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v388 values: a384 a385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v387 v389 
=== Succesors ===
next: i518 
=== Usages ===
a410 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v387 v389 #next: i518  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i518 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.flags0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 1]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
lastLocationAccess: - 
=== Succesors ===
next: v172 
=== Usages ===
v12 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v537 lastLocationAccess: - #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
stamp: void
=== Inputs ===
x: i518 
y: i7 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i518 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v171 
=== Usages ===
=== Predecessor ===
i518 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v170 #falseSuccessor: v171  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 v83 v468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i30 i67 v68 i194 i221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i13 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
profileData: PROFILED designatedSuccessorProbability: 0.1428571428571428
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v53 #falseSuccessor: v54  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
v95 
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid j344 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: 1304
stableDimension: 0
stamp: i64 [1304]
stampKind: i64
value: long[1304|0x518]
=== Inputs ===
=== Succesors ===
=== Usages ===
j337 j337 j337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i129 
=== Succesors ===
=== Usages ===
v530 v529 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i7 
=== Succesors ===
=== Usages ===
v490 v506 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v502 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v502 #falseSuccessor: v505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i3 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i130 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v513 #falseSuccessor: v510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v513 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v500 v501 
=== Succesors ===
next: i519 
=== Usages ===
v151 v238 v309 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v500 v501 #next: i519  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-19979|0xffffffffffffb1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v538 
lastLocationAccess: - 
=== Succesors ===
next: v490 
=== Usages ===
v83 v137 v529 
=== Predecessor ===
v499 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v538 lastLocationAccess: - #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
i519 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v486 #falseSuccessor: v489  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
v486 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i519 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i130 y: i519  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: -25115
stableDimension: 0
stamp: i32 [-25115]
stampKind: i32
value: int[-25115|0xffffffffffff9de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i336 i336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v529 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v494 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v529 #trueSuccessor: v497 #falseSuccessor: v494  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i519 
y: i7 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i519 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v137 
=== Succesors ===
trueSuccessor: v495 
falseSuccessor: v487 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v137 #trueSuccessor: v495 #falseSuccessor: v487  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v495 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
v487 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v484 v485 
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v484 v485 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i519 
y: i11 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i519 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v83 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v83 #trueSuccessor: v166 #falseSuccessor: v164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: -29211
stableDimension: 0
stamp: i32 [-29211]
stampKind: i32
value: int[-29211|0xffffffffffff8de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v166 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i520 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i520  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i520 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
v95 
=== Predecessor ===
v164 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v539 lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a410 
index: - 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v54 
address: v540 
lastLocationAccess: - 
value: i520 
stateAfter: - 
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
i520 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v54 address: v540 lastLocationAccess: - value: i520 stateAfter: - #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid i244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 i312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i244 
=== Succesors ===
=== Usages ===
i246 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i244  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2]
=== Inputs ===
condition: v245 
trueValue: i3 
falseValue: i7 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v245 trueValue: i3 falseValue: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v18 
values: i13 i30 
=== Succesors ===
=== Usages ===
i30 v21 j117 i196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v18 values: i13 i30  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v17 
=== Succesors ===
next: v26 
=== Usages ===
i67 v23 v31 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v17 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i246 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i67 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v25 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i521 
=== Usages ===
v151 
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i521  <|@  <|@
f <@~|@floating>@ <|@
tid j117 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i67 
=== Succesors ===
=== Usages ===
v542 v541 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i67  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j117 
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
lastLocationAccess: - 
=== Succesors ===
next: v112 
=== Usages ===
v112 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v541 lastLocationAccess: - #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
guards: v499 v25 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v499 v25  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j117 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v151 
address: v542 
lastLocationAccess: - 
value: i521 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i521 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v151 address: v542 lastLocationAccess: - value: i521 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i67 
y: i13 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i67 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v18 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i317 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i317  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v23 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v189 
values: i67 i313 
=== Succesors ===
=== Usages ===
v190 i194 j206 i313 i223 i275 i312 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v189 values: i67 i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 18
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v212 
=== Succesors ===
next: v193 
=== Usages ===
v191 v195 i196 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v212 #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i196 
y: i318 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i196 y: i318  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
profileData: INJECTED designatedSuccessorProbability: 0.3333333333333339
stamp: void
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v192 
falseSuccessor: v191 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v192 #falseSuccessor: v191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i522 
=== Usages ===
v309 
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid j206 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i196 
=== Succesors ===
=== Usages ===
v546 v545 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i196  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j206 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
lastLocationAccess: - 
=== Succesors ===
next: v205 
=== Usages ===
v205 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v545 lastLocationAccess: - #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
guards: v499 v192 
=== Succesors ===
=== Usages ===
v263 v292 v205 v305 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v499 v192  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j206 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v309 
address: v546 
lastLocationAccess: - 
value: i522 
stateAfter: - 
=== Succesors ===
next: i523 
=== Usages ===
=== Predecessor ===
i522 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v309 address: v546 lastLocationAccess: - value: i522 stateAfter: - #next: i523  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i196 
y: i13 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i196 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i194 
=== Succesors ===
=== Usages ===
v550 v549 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i194  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j264 
=== Succesors ===
=== Usages ===
i523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i523 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
=== Succesors ===
next: v263 
=== Usages ===
v263 
=== Predecessor ===
v205 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j264 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v309 
address: v550 
lastLocationAccess: - 
value: i523 
stateAfter: - 
=== Succesors ===
next: i524 
=== Usages ===
=== Predecessor ===
i523 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v309 address: v550 lastLocationAccess: - value: i523 stateAfter: - #next: i524  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i196 
y: i7 
=== Succesors ===
=== Usages ===
j293 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i196 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i275 
=== Succesors ===
=== Usages ===
v552 v551 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i275  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j293 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
lastLocationAccess: - 
=== Succesors ===
next: v292 
=== Usages ===
v292 
=== Predecessor ===
v263 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v551 lastLocationAccess: - #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j293 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v309 
address: v552 
lastLocationAccess: - 
value: i524 
stateAfter: - 
=== Succesors ===
next: i525 
=== Usages ===
=== Predecessor ===
i524 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v309 address: v552 lastLocationAccess: - value: i524 stateAfter: - #next: i525  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i196 
y: i244 
=== Succesors ===
=== Usages ===
j306 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i196 y: i244  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i312 
=== Succesors ===
=== Usages ===
v554 v553 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i312  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j306 
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
=== Succesors ===
next: v305 
=== Usages ===
v305 
=== Predecessor ===
v292 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j306 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v309 
address: v554 
lastLocationAccess: - 
value: i525 
stateAfter: - 
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
i525 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v309 address: v554 lastLocationAccess: - value: i525 stateAfter: - #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i196 
y: i311 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i196 y: i311  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v189 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v189 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v189 #next: v239  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v216 
values: i196 i221 
=== Succesors ===
=== Usages ===
v217 i221 j233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v216 values: i196 i221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 18
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v239 
=== Succesors ===
next: v220 
=== Usages ===
v218 v222 i223 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v239 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i223 
y: i3 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i223 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v218 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v219 #falseSuccessor: v218  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i526 
=== Usages ===
v238 
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i526  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i223 
=== Succesors ===
=== Usages ===
v548 v547 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i223  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j233 
=== Succesors ===
=== Usages ===
i526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i526 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
v232 
=== Predecessor ===
v219 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v547 lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
guards: v499 v219 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v499 v219  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j233 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v238 
address: v548 
lastLocationAccess: - 
value: i526 
stateAfter: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
i526 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v238 address: v548 lastLocationAccess: - value: i526 stateAfter: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i223 
y: i13 
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i223 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v216 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v216 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v216 #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v218 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v63 v64 
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v63 v64 #next: v177  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 155
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Pattern.newSlice(int[], int, boolean)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3708
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - i4 a410 
=== Succesors ===
=== Usages ===
v536 v174 a448 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - i4 a410  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 156]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i11 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 156]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v176 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v175 #falseSuccessor: v176  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
next: j437 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j461 
=== Usages ===
v565 v566 
=== Predecessor ===
v479 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j461  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j437 
index: - 
=== Succesors ===
=== Usages ===
j461 v463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j437 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: j462 
=== Usages ===
j440 v567 v568 a447 v569 v570 v571 
=== Predecessor ===
j437 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: j462  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j437 
index: - 
=== Succesors ===
=== Usages ===
j462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j437 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: v444 
=== Usages ===
v441 
=== Predecessor ===
j461 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: i64
=== Inputs ===
x: j461 
y: j436 
=== Succesors ===
=== Usages ===
v441 v463 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j461 y: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j462 
y: j440 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j462 y: j440  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
j462 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v443 #falseSuccessor: v442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
next: a448 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a448  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a448 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?66 
arguments: v435 
=== Succesors ===
next: v536 
=== Usages ===
v536 a459 
=== Predecessor ===
v443 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?66 arguments: v435 #next: v536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-121713|0xfffffffffffe248f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?66 
object: a448 
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
a448 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?66 object: a448 #next: v452  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
value: j440 
stateAfter: - 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - value: j440 stateAfter: - #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
address: v569 
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v569 #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
value: j362 
stateAfter: - 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - value: j362 stateAfter: - #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
value: v482 
stateAfter: - 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - value: v482 stateAfter: - #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
value: i11 
stateAfter: - 
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - value: i11 stateAfter: - #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
lastLocationAccess: - 
value: j341 
stateAfter: - 
=== Succesors ===
next: a447 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 lastLocationAccess: - value: j341 stateAfter: - #next: a447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j461 
=== Succesors ===
next: v450 
=== Usages ===
a459 
=== Predecessor ===
v469 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j461 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
a447 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v451 
values: a447 a448 
=== Succesors ===
=== Usages ===
v544 a185 v543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v451 values: a447 a448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v450 v452 
=== Succesors ===
next: v184 
=== Usages ===
a459 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v450 v452 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a459 
index: - 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a459 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a183 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a410 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v544 
lastLocationAccess: - 
value: a183 
stateAfter: - 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v544 lastLocationAccess: - value: a183 stateAfter: - #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a459 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a459 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
rawvalue: Pattern.Node@116800333
stableDimension: 0
stamp: n!# java.util.regex.Pattern$Node
stampKind: n java.lang.Object
value: NarrowOop[Pattern.Node@116800333]
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
value: a187 
stateAfter: - 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - value: a187 stateAfter: - #next: v186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.regex.Pattern.newSlice(int[], int, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a185 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(int[], int, boolean) [bci: -6] Placeholder
stamp: a!# java.util.regex.Pattern$Slice
=== Inputs ===
object: a459 
=== Succesors ===
next: v45 
=== Usages ===
v45 
=== Predecessor ===
v186 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a459 #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 180]
stamp: void
=== Inputs ===
memoryMap: - 
result: a185 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a185 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 156]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xaf0ccc4d]: UnreachedCode@6[HotSpotMethod<Pattern.newSlice(int[], int, boolean)>, 159]}
stamp: void
=== Inputs ===
stateBefore: ?66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v494 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: -27163
stableDimension: 0
stamp: i32 [-27163]
stampKind: i32
value: int[-27163|0xffffffffffff95e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: -43283
stableDimension: 0
stamp: i32 [-43283]
stampKind: i32
value: int[-43283|0xffffffffffff56ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v171 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: i32 [-43283 - -25115] bits:1...1xx0xx1xx1110x101
valueDescription: i32
=== Inputs ===
merge: v332 
values: i334 i343 i346 i348 i348 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i334 i343 i346 i348 i348  <|@  <|@
f <@~|@floating>@ <|@
tid j337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: i64 [0 - 1304] bits:0...0x0x000xxx00
valueDescription: i64
=== Inputs ===
merge: v332 
values: j335 j344 j341 j344 j344 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: j335 j344 j341 j344 j344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v342 v345 v347 v515 
=== Succesors ===
next: v338 
=== Usages ===
i336 j337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v342 v345 v347 v515 #next: v338  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i336 
speculation: j337 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i336 speculation: j337  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j350 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j412 
=== Usages ===
v555 v556 
=== Predecessor ===
v430 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j412 v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j412 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
=== Succesors ===
next: j413 
=== Usages ===
j357 v557 v558 v559 a384 v560 v564 v561 v562 v563 
=== Predecessor ===
j350 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - #next: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
lastLocationAccess: - 
=== Succesors ===
next: v361 
=== Usages ===
v358 
=== Predecessor ===
j412 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v556 lastLocationAccess: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v419 i130 v141 i246 v68 j144 v530 i318 v217 v245 a385 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j354 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 6]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 j354 i275 v137 v141 i246 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j144 
y: i7 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j144 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j394 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j354 
y: j394 
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j354 y: j394  <|@  <|@
f <@~|@floating>@ <|@
tid j355 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j395 
y: j355 
=== Succesors ===
=== Usages ===
j357 v373 j397 v561 v562 v563 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j395 y: j355  <|@  <|@
f <@~|@floating>@ <|@
tid j357 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64
=== Inputs ===
x: j356 
y: j412 
=== Succesors ===
=== Usages ===
v358 v414 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j356 y: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j413 
y: j357 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j413 y: j357  <|@  <|@
f <@~|@floating>@ <|@
tid j341 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v469 j337 v420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j362 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v415 v464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v537 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# int[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v551 v553 v538 v539 v541 v545 v547 v549 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v32 ?66 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern.newSlice(int[], int, boolean)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3691
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v534 v338 a385 i519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v359 
=== Usages ===
=== Predecessor ===
j413 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v360 #falseSuccessor: v359  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a385 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a385  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a385 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v349 i3 
=== Succesors ===
next: v534 
=== Usages ===
v534 a410 
=== Predecessor ===
v360 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v349 i3 #next: v534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-109169|0xfffffffffffe558f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a385 
=== Succesors ===
next: v389 
=== Usages ===
=== Predecessor ===
a385 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a385 #next: v389  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
value: j357 
stateAfter: - 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - value: j357 stateAfter: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v8|QWORD + v4|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j356 
index: j412 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
address: v561 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v561 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [v8|QWORD + v4|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j356 
index: j412 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
address: v562 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v562 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v8|QWORD + v4|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j356 
index: j412 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
address: v563 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v563 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
result [v4|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
value: j362 
stateAfter: - 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - value: j362 stateAfter: - #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v4|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
value: v481 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - value: v481 stateAfter: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [v4|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - value: i3 stateAfter: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid j396 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j397 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j356 
y: j396 
=== Succesors ===
=== Usages ===
v365 v369 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j356 y: j396  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j397 
y: j399 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j397 y: j399  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v365 
=== Succesors ===
trueSuccessor: v367 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v365 #trueSuccessor: v367 #falseSuccessor: v366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid j398 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j74 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 1]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
v367 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j372 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v371 
values: j74 j381 
=== Succesors ===
=== Usages ===
v373 v559 j381 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v371 values: j74 j381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v370 
=== Succesors ===
next: v379 
=== Usages ===
j372 v378 v382 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v370 #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j372 
y: j356 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j372 y: j356  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v373 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v378 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v373 #trueSuccessor: v374 #falseSuccessor: v378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [v4|QWORD + v13|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: j372 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: j372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: j341 
stateAfter: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: j341 stateAfter: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid j381 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: i64
=== Inputs ===
x: j372 
y: j398 
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j372 y: j398  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v371 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v371  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v371 
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v371 #next: v377  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
result [v4|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
length: j397 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - length: j397 #next: v375  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v375 v377 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v375 v377 #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a384 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j412 
=== Succesors ===
next: v387 
=== Usages ===
a410 
=== Predecessor ===
v383 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j412 #next: v387  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
a384 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a410 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v388 
values: a384 a385 
=== Succesors ===
=== Usages ===
v552 v554 v540 a183 ?66 v542 v546 v548 v550 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v388 values: a384 a385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v387 v389 
=== Succesors ===
next: i518 
=== Usages ===
a410 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v387 v389 #next: i518  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i518 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.flags0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 1]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
lastLocationAccess: - 
=== Succesors ===
next: v172 
=== Usages ===
v12 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v537 lastLocationAccess: - #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
stamp: void
=== Inputs ===
x: i518 
y: i7 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i518 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v171 
=== Usages ===
=== Predecessor ===
i518 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v170 #falseSuccessor: v171  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 v83 v468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i30 i67 v68 i194 i221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i13 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
profileData: PROFILED designatedSuccessorProbability: 0.1428571428571428
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v53 #falseSuccessor: v54  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
v95 
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid j344 <|@
result long[1304|0x518] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: 1304
stableDimension: 0
stamp: i64 [1304]
stampKind: i64
value: long[1304|0x518]
=== Inputs ===
=== Succesors ===
=== Usages ===
j337 j337 j337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i129 
=== Succesors ===
=== Usages ===
v530 v529 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i7 
=== Succesors ===
=== Usages ===
v490 v506 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v502 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v502 #falseSuccessor: v505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i3 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i130 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v513 #falseSuccessor: v510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v513 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v500 v501 
=== Succesors ===
next: i519 
=== Usages ===
v151 v238 v309 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v500 v501 #next: i519  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i519 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-19979|0xffffffffffffb1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v538 
lastLocationAccess: - 
=== Succesors ===
next: v490 
=== Usages ===
v83 v137 v529 
=== Predecessor ===
v499 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v538 lastLocationAccess: - #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
i519 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v486 #falseSuccessor: v489  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
v486 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i519 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i130 y: i519  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
result int[-25115|0xffffffffffff9de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: -25115
stableDimension: 0
stamp: i32 [-25115]
stampKind: i32
value: int[-25115|0xffffffffffff9de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i336 i336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v529 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v494 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v529 #trueSuccessor: v497 #falseSuccessor: v494  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i519 
y: i7 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i519 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v137 
=== Succesors ===
trueSuccessor: v495 
falseSuccessor: v487 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v137 #trueSuccessor: v495 #falseSuccessor: v487  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v495 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
v487 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v484 v485 
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v484 v485 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i519 
y: i11 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i519 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v83 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v83 #trueSuccessor: v166 #falseSuccessor: v164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
result int[-29211|0xffffffffffff8de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: -29211
stableDimension: 0
stamp: i32 [-29211]
stampKind: i32
value: int[-29211|0xffffffffffff8de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v166 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i520 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i520  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i520 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
v95 
=== Predecessor ===
v164 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v539 lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a410 
index: - 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v54 
address: v540 
lastLocationAccess: - 
value: i520 
stateAfter: - 
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
i520 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v54 address: v540 lastLocationAccess: - value: i520 stateAfter: - #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid i244 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 i312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i244 
=== Succesors ===
=== Usages ===
i246 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i244  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2]
=== Inputs ===
condition: v245 
trueValue: i3 
falseValue: i7 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v245 trueValue: i3 falseValue: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i67 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v18 
values: i13 i30 
=== Succesors ===
=== Usages ===
i30 v21 j117 i196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v18 values: i13 i30  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v17 
=== Succesors ===
next: v26 
=== Usages ===
i67 v23 v31 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v17 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i246 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i67 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v25 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i521 
=== Usages ===
v151 
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i521  <|@  <|@
f <@~|@floating>@ <|@
tid j117 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i67 
=== Succesors ===
=== Usages ===
v542 v541 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i67  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result [v1|QWORD[.] + v23|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j117 
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i521 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
lastLocationAccess: - 
=== Succesors ===
next: v112 
=== Usages ===
v112 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v541 lastLocationAccess: - #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
guards: v499 v25 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v499 v25  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result [v17|QWORD[.] + v23|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j117 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v151 
address: v542 
lastLocationAccess: - 
value: i521 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i521 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v151 address: v542 lastLocationAccess: - value: i521 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i67 
y: i13 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i67 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v18 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
result int[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i317 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i317  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v23 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i196 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v189 
values: i67 i313 
=== Succesors ===
=== Usages ===
v190 i194 j206 i313 i223 i275 i312 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v189 values: i67 i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 18
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v212 
=== Succesors ===
next: v193 
=== Usages ===
v191 v195 i196 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v212 #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i196 
y: i318 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i196 y: i318  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
profileData: INJECTED designatedSuccessorProbability: 0.3333333333333339
stamp: void
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v192 
falseSuccessor: v191 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v192 #falseSuccessor: v191  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i522 
=== Usages ===
v309 
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid j206 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i196 
=== Succesors ===
=== Usages ===
v546 v545 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i196  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v1|QWORD[.] + v27|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j206 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
lastLocationAccess: - 
=== Succesors ===
next: v205 
=== Usages ===
v205 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v545 lastLocationAccess: - #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
guards: v499 v192 
=== Succesors ===
=== Usages ===
v263 v292 v205 v305 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v499 v192  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v17|QWORD[.] + v27|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j206 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v309 
address: v546 
lastLocationAccess: - 
value: i522 
stateAfter: - 
=== Succesors ===
next: i523 
=== Usages ===
=== Predecessor ===
i522 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v309 address: v546 lastLocationAccess: - value: i522 stateAfter: - #next: i523  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i196 
y: i13 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i196 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i194 
=== Succesors ===
=== Usages ===
v550 v549 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i194  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result [v1|QWORD[.] + v29|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j264 
=== Succesors ===
=== Usages ===
i523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i523 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
=== Succesors ===
next: v263 
=== Usages ===
v263 
=== Predecessor ===
v205 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [v17|QWORD[.] + v29|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j264 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v309 
address: v550 
lastLocationAccess: - 
value: i523 
stateAfter: - 
=== Succesors ===
next: i524 
=== Usages ===
=== Predecessor ===
i523 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v309 address: v550 lastLocationAccess: - value: i523 stateAfter: - #next: i524  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i196 
y: i7 
=== Succesors ===
=== Usages ===
j293 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i196 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i275 
=== Succesors ===
=== Usages ===
v552 v551 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i275  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [v1|QWORD[.] + v31|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j293 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i524 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
lastLocationAccess: - 
=== Succesors ===
next: v292 
=== Usages ===
v292 
=== Predecessor ===
v263 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v551 lastLocationAccess: - #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result [v17|QWORD[.] + v31|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j293 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v309 
address: v552 
lastLocationAccess: - 
value: i524 
stateAfter: - 
=== Succesors ===
next: i525 
=== Usages ===
=== Predecessor ===
i524 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v309 address: v552 lastLocationAccess: - value: i524 stateAfter: - #next: i525  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i196 
y: i244 
=== Succesors ===
=== Usages ===
j306 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i196 y: i244  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i312 
=== Succesors ===
=== Usages ===
v554 v553 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i312  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
result [v1|QWORD[.] + v33|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j306 
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i525 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
=== Succesors ===
next: v305 
=== Usages ===
v305 
=== Predecessor ===
v292 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
result [v17|QWORD[.] + v33|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j306 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v309 
address: v554 
lastLocationAccess: - 
value: i525 
stateAfter: - 
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
i525 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v309 address: v554 lastLocationAccess: - value: i525 stateAfter: - #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i196 
y: i311 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i196 y: i311  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v189 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v189 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v189 #next: v239  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i223 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v216 
values: i196 i221 
=== Succesors ===
=== Usages ===
v217 i221 j233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v216 values: i196 i221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 18
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v239 
=== Succesors ===
next: v220 
=== Usages ===
v218 v222 i223 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v239 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i223 
y: i3 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i223 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v218 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v219 #falseSuccessor: v218  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i526 
=== Usages ===
v238 
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i526  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i223 
=== Succesors ===
=== Usages ===
v548 v547 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i223  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v1|QWORD[.] + v36|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a2 
index: j233 
=== Succesors ===
=== Usages ===
i526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i526 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
v232 
=== Predecessor ===
v219 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v547 lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
guards: v499 v219 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v499 v219  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [v17|QWORD[.] + v36|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a410 
index: j233 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a410 index: j233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v238 
address: v548 
lastLocationAccess: - 
value: i526 
stateAfter: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
i526 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v238 address: v548 lastLocationAccess: - value: i526 stateAfter: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
stamp: i32
=== Inputs ===
x: i223 
y: i13 
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i223 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v216 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v216 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v216 #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v218 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v63 v64 
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v63 v64 #next: v177  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 155
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Pattern.newSlice(int[], int, boolean)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3708
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - i4 a410 
=== Succesors ===
=== Usages ===
v536 v174 a448 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - i4 a410  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 156]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i11 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 156]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v176 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v175 #falseSuccessor: v176  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
next: j437 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j437 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j461 
=== Usages ===
v565 v566 
=== Predecessor ===
v479 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j461  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j437 
index: - 
=== Succesors ===
=== Usages ===
j461 v463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j437 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j461 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: j462 
=== Usages ===
j440 v567 v568 a447 v569 v570 v571 
=== Predecessor ===
j437 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: j462  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j437 
index: - 
=== Succesors ===
=== Usages ===
j462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j437 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: v444 
=== Usages ===
v441 
=== Predecessor ===
j461 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: i64
=== Inputs ===
x: j461 
y: j436 
=== Succesors ===
=== Usages ===
v441 v463 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j461 y: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j462 
y: j440 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j462 y: j440  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
j462 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v443 #falseSuccessor: v442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
next: a448 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a448  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a448 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?66 
arguments: v435 
=== Succesors ===
next: v536 
=== Usages ===
v536 a459 
=== Predecessor ===
v443 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?66 arguments: v435 #next: v536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-121713|0xfffffffffffe248f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?66 
object: a448 
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
a448 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?66 object: a448 #next: v452  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
value: j440 
stateAfter: - 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - value: j440 stateAfter: - #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v39|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
address: v569 
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v569 #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v39|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
value: j362 
stateAfter: - 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - value: j362 stateAfter: - #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v39|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
value: v482 
stateAfter: - 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - value: v482 stateAfter: - #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v39|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
value: i11 
stateAfter: - 
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - value: i11 stateAfter: - #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v39|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j461 
index: - 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
lastLocationAccess: - 
value: j341 
stateAfter: - 
=== Succesors ===
next: a447 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 lastLocationAccess: - value: j341 stateAfter: - #next: a447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a447 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j461 
=== Succesors ===
next: v450 
=== Usages ===
a459 
=== Predecessor ===
v469 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j461 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
a447 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a459 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v451 
values: a447 a448 
=== Succesors ===
=== Usages ===
v544 a185 v543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v451 values: a447 a448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v450 v452 
=== Succesors ===
next: v184 
=== Usages ===
a459 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v450 v452 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result [v45|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a459 
index: - 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a459 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a183 <|@
result v46|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a410 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v544 
lastLocationAccess: - 
value: a183 
stateAfter: - 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v544 lastLocationAccess: - value: a183 stateAfter: - #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result [v45|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a459 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a459 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a187 <|@
result NarrowOop[Pattern.Node@116800333] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
rawvalue: Pattern.Node@116800333
stableDimension: 0
stamp: n!# java.util.regex.Pattern$Node
stampKind: n java.lang.Object
value: NarrowOop[Pattern.Node@116800333]
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
value: a187 
stateAfter: - 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - value: a187 stateAfter: - #next: v186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.regex.Pattern.newSlice(int[], int, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a185 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a185 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(int[], int, boolean) [bci: -6] Placeholder
stamp: a!# java.util.regex.Pattern$Slice
=== Inputs ===
object: a459 
=== Succesors ===
next: v45 
=== Usages ===
v45 
=== Predecessor ===
v186 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a459 #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 180]
stamp: void
=== Inputs ===
memoryMap: - 
result: a185 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a185 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 156]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 156]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xaf0ccc4d]: UnreachedCode@6[HotSpotMethod<Pattern.newSlice(int[], int, boolean)>, 159]}
stamp: void
=== Inputs ===
stateBefore: ?66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v494 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
result int[-27163|0xffffffffffff95e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: -27163
stableDimension: 0
stamp: i32 [-27163]
stampKind: i32
value: int[-27163|0xffffffffffff95e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
result int[-43283|0xffffffffffff56ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
rawvalue: -43283
stableDimension: 0
stamp: i32 [-43283]
stampKind: i32
value: int[-43283|0xffffffffffff56ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v171 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i336 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: i32 [-43283 - -25115] bits:1...1xx0xx1xx1110x101
valueDescription: i32
=== Inputs ===
merge: v332 
values: i334 i343 i346 i348 i348 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: i334 i343 i346 i348 i348  <|@  <|@
f <@~|@floating>@ <|@
tid j337 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: i64 [0 - 1304] bits:0...0x0x000xxx00
valueDescription: i64
=== Inputs ===
merge: v332 
values: j335 j344 j341 j344 j344 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v332 values: j335 j344 j341 j344 j344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v342 v345 v347 v515 
=== Succesors ===
next: v338 
=== Usages ===
i336 j337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v342 v345 v347 v515 #next: v338  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i336 
speculation: j337 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i336 speculation: j337  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  656  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  690  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  722  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  656  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  690  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  722  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v45|q [0, 1[[656, 658[[688, 690[[720, 722[[750, 751[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v12|q [0, 46[[748, 751[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v2|d [0, 44[[686, 688[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 38[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 42[[684, 688[[718, 720[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[750, 751[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 48[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [42, 328[[660, 696[[728, 825[42 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|d [44, 532[[660, 696[[728, 825[44 MustHaveRegister 268 MustHaveRegister 344 MustHaveRegister 380 MustHaveRegister 387 LiveAtLoopEnd 462 MustHaveRegister 468 MustHaveRegister 474 MustHaveRegister 480 MustHaveRegister 487 LiveAtLoopEnd 524 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|q [46, 532[[660, 696[[728, 825[46 MustHaveRegister 52 ShouldHaveRegister 106 MustHaveRegister 206 ShouldHaveRegister 220 ShouldHaveRegister 222 ShouldHaveRegister 234 MustHaveRegister 270 ShouldHaveRegister 348 ShouldHaveRegister 350 MustHaveRegister 402 MustHaveRegister 508 MustHaveRegister 531 LiveAtLoopEnd 686 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|d [48, 588[[660, 725[[728, 825[[826, 847[48 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [50, 176[[728, 754[50 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 150 MustHaveRegister 155 LiveAtLoopEnd 176 ShouldHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v5|q [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v7|q [58, 156[58 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 132 MustHaveRegister 155 LiveAtLoopEnd  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|q [60, 94[60 MustHaveRegister 62 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q rax|q [690, 695[690 MustHaveRegister 692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [108, 112[[728, 748[108 MustHaveRegister 110 ShouldHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v14|q [122, 152[132 ShouldHaveRegister 150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v13|q [152, 155[152 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v4|q [176, 179[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|q [180, 650[[696, 728[[826, 847[346 MustHaveRegister 382 MustHaveRegister 387 LiveAtLoopEnd 464 MustHaveRegister 470 MustHaveRegister 476 MustHaveRegister 482 MustHaveRegister 487 LiveAtLoopEnd 526 MustHaveRegister 531 LiveAtLoopEnd 650 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v2|d [220, 282[220 MustHaveRegister 234 ShouldHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [268, 326[268 MustHaveRegister 282 MustHaveRegister 294 ShouldHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [350, 388[350 MustHaveRegister 364 MustHaveRegister 387 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v25|d [354, 384[[388, 405[364 ShouldHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 ShouldHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v23|d [384, 387[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [402, 488[402 MustHaveRegister 416 MustHaveRegister 487 LiveAtLoopEnd  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v23|d [406, 484[[488, 497[416 ShouldHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 ShouldHaveRegister 472 MustHaveRegister 478 MustHaveRegister 484 MustHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [462, 464[462 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v27|d [466, 470[466 MustHaveRegister 468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [472, 476[472 MustHaveRegister 474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [474, 476[474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [478, 482[478 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [484, 487[484 MustHaveRegister 486 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d v27|d [498, 528[508 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v36|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [582, 622[582 MustHaveRegister 584 MustHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 618 MustHaveRegister 620 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [584, 610[584 MustHaveRegister 586 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [716, 718[716 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q rax|q [722, 727[722 MustHaveRegister 724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v39|q [622, 625[622 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v44|q [626, 656[652 MustHaveRegister 654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d v17|q [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [804, 820[820 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [804, 822[822 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v45|q [0, 1[[656, 658[[688, 690[[720, 722[[750, 751[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v12|q [0, 46[[748, 751[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v2|d [0, 44[[686, 688[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 38[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 42[[684, 688[[718, 720[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[750, 751[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 48[ "NoSpillStore"
  v0|q QWORD "[r10|q]" v0|q rsi|q [42, 328[[660, 696[[728, 825[42 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [44, 532[[660, 696[[728, 825[44 MustHaveRegister 268 MustHaveRegister 344 MustHaveRegister 380 MustHaveRegister 387 LiveAtLoopEnd 462 MustHaveRegister 468 MustHaveRegister 474 MustHaveRegister 480 MustHaveRegister 487 LiveAtLoopEnd 524 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[r9|d]" v2|d rcx|q [46, 532[[660, 696[[728, 825[46 MustHaveRegister 52 ShouldHaveRegister 106 MustHaveRegister 206 ShouldHaveRegister 220 ShouldHaveRegister 222 ShouldHaveRegister 234 MustHaveRegister 270 ShouldHaveRegister 348 ShouldHaveRegister 350 MustHaveRegister 402 MustHaveRegister 508 MustHaveRegister 531 LiveAtLoopEnd 686 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [48, 588[[660, 725[[728, 825[[826, 847[48 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rbx|q]" v4|q -1 [50, 176[[728, 754[50 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 150 MustHaveRegister 155 LiveAtLoopEnd 176 ShouldHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|q [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|q [58, 156[58 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 132 MustHaveRegister 155 LiveAtLoopEnd  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v8|q [60, 94[60 MustHaveRegister 62 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [690, 695[690 MustHaveRegister 692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rcx|q]" v12|q -1 [108, 112[[728, 748[108 MustHaveRegister 110 ShouldHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q v14|q [122, 152[132 ShouldHaveRegister 150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v13|q [152, 155[152 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v4|q [176, 179[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q v16|q [180, 650[[696, 728[[826, 847[346 MustHaveRegister 382 MustHaveRegister 387 LiveAtLoopEnd 464 MustHaveRegister 470 MustHaveRegister 476 MustHaveRegister 482 MustHaveRegister 487 LiveAtLoopEnd 526 MustHaveRegister 531 LiveAtLoopEnd 650 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v2|d [220, 282[220 MustHaveRegister 234 ShouldHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [268, 326[268 MustHaveRegister 282 MustHaveRegister 294 ShouldHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d -1 [350, 388[350 MustHaveRegister 364 MustHaveRegister 387 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d v25|d [354, 384[[388, 405[364 ShouldHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 ShouldHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdx|d]" v24|d -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d v23|d [384, 387[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d -1 [402, 488[402 MustHaveRegister 416 MustHaveRegister 487 LiveAtLoopEnd  "NoSpillStore"
  v27|d DWORD "[rsi|d]" v27|d v23|d [406, 484[[488, 497[416 ShouldHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 ShouldHaveRegister 472 MustHaveRegister 478 MustHaveRegister 484 MustHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [462, 464[462 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rdx|d]" v29|d v27|d [466, 470[466 MustHaveRegister 468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rdx|d]" v31|d -1 [472, 476[472 MustHaveRegister 474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rcx|d]" v32|d -1 [474, 476[474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rdx|d]" v33|d -1 [478, 482[478 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rcx|d]" v34|d -1 [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rsi|d]" v35|d -1 [484, 487[484 MustHaveRegister 486 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rsi|d]" v36|d v27|d [498, 528[508 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rax|d]" v37|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rsi|d]" v38|d v36|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q -1 [582, 622[582 MustHaveRegister 584 MustHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 618 MustHaveRegister 620 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q -1 [584, 610[584 MustHaveRegister 586 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [716, 718[716 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|q [722, 727[722 MustHaveRegister 724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v39|q [622, 625[622 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q v44|q [626, 656[652 MustHaveRegister 654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbx|d]" v46|d v17|q [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [804, 820[820 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q -1 [804, 822[822 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  656  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  690  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  722  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v45|q [0, 1[[656, 658[[688, 690[[720, 722[[750, 751[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v12|q [0, 46[[748, 751[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v2|d [0, 44[[686, 688[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 38[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 42[[684, 688[[718, 720[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[750, 751[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 48[ "NoSpillStore"
  v0|q QWORD "[r10|q]" v0|q rsi|q [42, 328[[660, 696[[728, 825[42 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [44, 532[[660, 696[[728, 825[44 MustHaveRegister 268 MustHaveRegister 344 MustHaveRegister 380 MustHaveRegister 387 LiveAtLoopEnd 462 MustHaveRegister 468 MustHaveRegister 474 MustHaveRegister 480 MustHaveRegister 487 LiveAtLoopEnd 524 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[r9|d]" v2|d rcx|q [46, 532[[660, 696[[728, 825[46 MustHaveRegister 52 ShouldHaveRegister 106 MustHaveRegister 206 ShouldHaveRegister 220 ShouldHaveRegister 222 ShouldHaveRegister 234 MustHaveRegister 270 ShouldHaveRegister 348 ShouldHaveRegister 350 MustHaveRegister 402 MustHaveRegister 508 MustHaveRegister 531 LiveAtLoopEnd 686 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [48, 588[[660, 725[[728, 825[[826, 847[48 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rbx|q]" v4|q -1 [50, 176[[728, 754[50 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 150 MustHaveRegister 155 LiveAtLoopEnd 176 ShouldHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|q [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|q [58, 156[58 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 132 MustHaveRegister 155 LiveAtLoopEnd  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v8|q [60, 94[60 MustHaveRegister 62 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [690, 695[690 MustHaveRegister 692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rcx|q]" v12|q -1 [108, 112[[728, 748[108 MustHaveRegister 110 ShouldHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q v14|q [122, 152[132 ShouldHaveRegister 150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v13|q [152, 155[152 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v4|q [176, 179[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q v16|q [180, 650[[696, 728[[826, 847[346 MustHaveRegister 382 MustHaveRegister 387 LiveAtLoopEnd 464 MustHaveRegister 470 MustHaveRegister 476 MustHaveRegister 482 MustHaveRegister 487 LiveAtLoopEnd 526 MustHaveRegister 531 LiveAtLoopEnd 650 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v2|d [220, 282[220 MustHaveRegister 234 ShouldHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [268, 326[268 MustHaveRegister 282 MustHaveRegister 294 ShouldHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d -1 [350, 388[350 MustHaveRegister 364 MustHaveRegister 387 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d v25|d [354, 384[[388, 405[364 ShouldHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 ShouldHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdx|d]" v24|d -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d v23|d [384, 387[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d -1 [402, 488[402 MustHaveRegister 416 MustHaveRegister 487 LiveAtLoopEnd  "NoSpillStore"
  v27|d DWORD "[rsi|d]" v27|d v23|d [406, 484[[488, 497[416 ShouldHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 ShouldHaveRegister 472 MustHaveRegister 478 MustHaveRegister 484 MustHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [462, 464[462 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rdx|d]" v29|d v27|d [466, 470[466 MustHaveRegister 468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rdx|d]" v31|d -1 [472, 476[472 MustHaveRegister 474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rcx|d]" v32|d -1 [474, 476[474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rdx|d]" v33|d -1 [478, 482[478 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rcx|d]" v34|d -1 [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rsi|d]" v35|d -1 [484, 487[484 MustHaveRegister 486 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rsi|d]" v36|d v27|d [498, 528[508 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rax|d]" v37|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rsi|d]" v38|d v36|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q -1 [582, 622[582 MustHaveRegister 584 MustHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 618 MustHaveRegister 620 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q -1 [584, 610[584 MustHaveRegister 586 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [716, 718[716 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|q [722, 727[722 MustHaveRegister 724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v39|q [622, 625[622 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q v44|q [626, 656[652 MustHaveRegister 654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbx|d]" v46|d v17|q [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [804, 820[820 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q -1 [804, 822[822 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [v14|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  656  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  690  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  722  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [int[-43283|0xffffffffffff56ed], long[20|0x14]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [int[-25115|0xffffffffffff9de5], long[1304|0x518]] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [int[-29211|0xffffffffffff8de5], long[0|0x0]] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [int[-27163|0xffffffffffff95e5], long[1304|0x518]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v45|q [0, 1[[656, 658[[688, 690[[720, 722[[750, 751[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v12|q [0, 46[[748, 751[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v2|d [0, 44[[686, 688[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 38[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 42[[684, 688[[718, 720[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[750, 751[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 48[ "NoSpillStore"
  v0|q QWORD "[r10|q]" v0|q rsi|q [42, 328[[660, 696[[728, 825[42 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [44, 532[[660, 696[[728, 825[44 MustHaveRegister 268 MustHaveRegister 344 MustHaveRegister 380 MustHaveRegister 387 LiveAtLoopEnd 462 MustHaveRegister 468 MustHaveRegister 474 MustHaveRegister 480 MustHaveRegister 487 LiveAtLoopEnd 524 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[r9|d]" v2|d rcx|q [46, 532[[660, 696[[728, 825[46 MustHaveRegister 52 ShouldHaveRegister 106 MustHaveRegister 206 ShouldHaveRegister 220 ShouldHaveRegister 222 ShouldHaveRegister 234 MustHaveRegister 270 ShouldHaveRegister 348 ShouldHaveRegister 350 MustHaveRegister 402 MustHaveRegister 508 MustHaveRegister 531 LiveAtLoopEnd 686 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [48, 588[[660, 725[[728, 825[[826, 847[48 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rbx|q]" v4|q -1 [50, 176[[728, 754[50 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 102 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 150 MustHaveRegister 155 LiveAtLoopEnd 176 ShouldHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [52, 54[52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q v5|q [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v7|q [58, 156[58 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister 98 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 132 MustHaveRegister 155 LiveAtLoopEnd  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q v8|q [60, 94[60 MustHaveRegister 62 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [682, 684[682 MustHaveRegister 684 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [690, 695[690 MustHaveRegister 692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rcx|q]" v12|q -1 [108, 112[[728, 748[108 MustHaveRegister 110 ShouldHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q v14|q [122, 152[132 ShouldHaveRegister 150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v13|q [152, 155[152 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v4|q [176, 179[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q v16|q [180, 650[[696, 728[[826, 847[346 MustHaveRegister 382 MustHaveRegister 387 LiveAtLoopEnd 464 MustHaveRegister 470 MustHaveRegister 476 MustHaveRegister 482 MustHaveRegister 487 LiveAtLoopEnd 526 MustHaveRegister 531 LiveAtLoopEnd 650 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v2|d [220, 282[220 MustHaveRegister 234 ShouldHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [268, 326[268 MustHaveRegister 282 MustHaveRegister 294 ShouldHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d -1 [350, 388[350 MustHaveRegister 364 MustHaveRegister 387 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d v25|d [354, 384[[388, 405[364 ShouldHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 ShouldHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdx|d]" v24|d -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d v23|d [384, 387[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d -1 [402, 488[402 MustHaveRegister 416 MustHaveRegister 487 LiveAtLoopEnd  "NoSpillStore"
  v27|d DWORD "[rsi|d]" v27|d v23|d [406, 484[[488, 497[416 ShouldHaveRegister 462 MustHaveRegister 464 MustHaveRegister 466 ShouldHaveRegister 472 MustHaveRegister 478 MustHaveRegister 484 MustHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [462, 464[462 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rdx|d]" v29|d v27|d [466, 470[466 MustHaveRegister 468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rdx|d]" v31|d -1 [472, 476[472 MustHaveRegister 474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rcx|d]" v32|d -1 [474, 476[474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rdx|d]" v33|d -1 [478, 482[478 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rcx|d]" v34|d -1 [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rsi|d]" v35|d -1 [484, 487[484 MustHaveRegister 486 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rsi|d]" v36|d v27|d [498, 528[508 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rax|d]" v37|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rsi|d]" v38|d v36|d [528, 531[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q -1 [582, 622[582 MustHaveRegister 584 MustHaveRegister 612 MustHaveRegister 614 MustHaveRegister 616 MustHaveRegister 618 MustHaveRegister 620 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q -1 [584, 610[584 MustHaveRegister 586 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [716, 718[716 MustHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|q [722, 727[722 MustHaveRegister 724 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v39|q [622, 625[622 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q v44|q [626, 656[652 MustHaveRegister 654 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rbx|d]" v46|d v17|q [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [804, 820[820 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q -1 [804, 822[822 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [v13|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  656  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  690  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  722  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [v47|DWORD, v48|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction v4|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v6|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction v7|QWORD = LEA address: [v6|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|QWORD = AND x: v7|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction v9|QWORD = ADD (x: v8|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v9|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: v9|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [v8|QWORD + v4|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [v4|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [v4|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [v4|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v12|QWORD = LEA address: [v8|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [v4|QWORD + v13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v16|QWORD[.] = MOVE input: v4|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v18|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: v18|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v20|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction v21|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [v17|QWORD[.] + 16], y: v21|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction v22|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v24|DWORD = MOV input: [v1|QWORD[.] + v23|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [v17|QWORD[.] + v23|DWORD * 4 + 16], y: v24|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v25|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v26|DWORD = LEA address: [v2|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v27|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v28|DWORD = MOV input: [v1|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [v17|QWORD[.] + v27|DWORD * 4 + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction v29|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction v30|DWORD = MOV input: [v1|QWORD[.] + v29|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v17|QWORD[.] + v29|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v31|DWORD = LEA address: [v27|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + v31|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [v17|QWORD[.] + v31|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction v33|DWORD = LEA address: [v27|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction v34|DWORD = MOV input: [v1|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [v17|QWORD[.] + v33|DWORD * 4 + 16], y: v34|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction v35|DWORD = LEA address: [v27|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v36|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v37|DWORD = MOV input: [v1|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v17|QWORD[.] + v36|DWORD * 4 + 16], y: v37|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction v38|DWORD = INC value: v36|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction v39|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction v40|QWORD = LEA address: [v39|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v40|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: v40|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [v39|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [v39|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v39|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [v45|QWORD[.] + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [v45|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  656  <|@ instruction rax|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  684  <|@ instruction rsi|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  690  <|@ instruction v11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v11|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  722  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction rcx|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [v4|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v47|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v48|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - v3|DWORD v17|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@reference-map: [rbx:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@reference-map: [rax:0, rbx:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  194  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rax|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B41" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ st <@st|@reference-map: [rbx:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  350  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B26" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4601392076421969648
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B29" "B30" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4608469161550694698
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576144623965498666
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  528  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B32" "B33" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605973660458472081
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4605895676049340124
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B11" 
    successors "B35" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  614  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr  618  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  654  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr  658  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601392076421969628
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B34" 
    xhandlers
    flags 
    probability 4594314991293244560
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  686  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  692  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr  720  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155] <|@ <|@
      nr  724  <|@ st <@st|@reference-map: [rax:0, rbx:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B23" "B40" "B20" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] r9|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5] // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  846  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - r8|DWORD rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:155] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B43" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5] // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B43 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: newarray      int
     3: astore        4
     5: aload_0       
     6: iconst_2      
     7: invokevirtual #87         // has:(int)boolean
    10: ifeq          131
    13: aload_0       
    14: bipush        64
    16: invokevirtual #87         // has:(int)boolean
    19: ifeq          78
    22: iconst_0      
    23: istore        5
    25: iload         5
    27: iload_2       
    28: if_icmpge     52
    31: aload         4
    33: iload         5
    35: aload_1       
    36: iload         5
    38: iaload        
    39: invokestatic  #185        // java.lang.Character.toUpperCase:(int)int
    42: invokestatic  #186        // java.lang.Character.toLowerCase:(int)int
    45: iastore       
    46: iinc          
    49: goto          25
    52: iload_3       
    53: ifeq          68
    56: new           #1093       // java.util.regex.Pattern$SliceUS
    59: dup           
    60: aload         4
    62: invokespecial #273        // java.util.regex.Pattern$SliceUS.<init>:(int[])void
    65: goto          77
    68: new           #1098       // java.util.regex.Pattern$SliceU
    71: dup           
    72: aload         4
    74: invokespecial #274        // java.util.regex.Pattern$SliceU.<init>:(int[])void
    77: areturn       
    78: iconst_0      
    79: istore        5
    81: iload         5
    83: iload_2       
    84: if_icmpge     105
    87: aload         4
    89: iload         5
    91: aload_1       
    92: iload         5
    94: iaload        
    95: invokestatic  #188        // java.util.regex.ASCII.toLower:(int)int
    98: iastore       
    99: iinc          
   102: goto          81
   105: iload_3       
   106: ifeq          121
   109: new           #1101       // java.util.regex.Pattern$SliceIS
   112: dup           
   113: aload         4
   115: invokespecial #275        // java.util.regex.Pattern$SliceIS.<init>:(int[])void
   118: goto          130
   121: new           #1104       // java.util.regex.Pattern$SliceI
   124: dup           
   125: aload         4
   127: invokespecial #276        // java.util.regex.Pattern$SliceI.<init>:(int[])void
   130: areturn       
   131: iconst_0      
   132: istore        5
   134: iload         5
   136: iload_2       
   137: if_icmpge     155
   140: aload         4
   142: iload         5
   144: aload_1       
   145: iload         5
   147: iaload        
   148: iastore       
   149: iinc          
   152: goto          134
   155: iload_3       
   156: ifeq          171
   159: new           #1107       // java.util.regex.Pattern$SliceS
   162: dup           
   163: aload         4
   165: invokespecial #277        // java.util.regex.Pattern$SliceS.<init>:(int[])void
   168: goto          180
   171: new           #421        // java.util.regex.Pattern$Slice
   174: dup           
   175: aload         4
   177: invokespecial #278        // java.util.regex.Pattern$Slice.<init>:(int[])void
   180: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f851f04000090909090909090909090909090909090909048896c24104c8bd64c8bda448bc9498b9fb8010000418bc148c1e002488d40174883e0f8488bf04803f3493bb7c80100000f87c702000090909090909090909090909090904989b7b80100000f188418000100000f188418400100000f1884188001000048c70301000000c74308addeadde44894b0c488d48f04881f9000800000f83cc02000090909048c7c610000000e9310000006666660f1f840000000000666666906666660f1f840000000000666666909090909090909048c7043300000000488d760890909090483bc677e4909090909090909090909090418b4210480fbae0010f8280020000909090904183f9010f8cfd0100009090909090418bc1ffc84183f9020f8ce101000090909090443bc80f86930200009090909090909090418b730c4183f9020f8cb6010000909090903bf00f86820200009090909083fe020f82b00200009090909090909085f60f844402000090909090909090418b43108943104183f903b802000000410f4cc1be01000000e9280000006666660f1f840000000000666666900f1f840000000000909090909090418b54b3108954b310ffc6909090903bc67fe7909090909090418d41fce95e0000006666660f1f84000000000066666690660f1f840000000000909090909090909090909090909090909090909090418b54b3108954b3108bd6ffc2418b4c9310894c93108d5602418b4c9310894c93108d5603418b4c9310894c93108d7604909090903bc67fb2909090e91b00000066660f1f840000000000909090909090418b44b3108944b310ffc690909090443bce7fe6909090909090904585c00f85710100009090909090909090498b87b8010000488d7018493bb7c80100000f87ae000000909090909090909090904989b7b80100000f18801801000048c70001000000c74008addeaddec7400c0000000048c7401000000000909090909090909090909048c1eb03895810c7400caddeadde488b6c24104883c418493ba7500400000f873b010000c5f877c3909090e95efeffff909090e927feffff909090e953ffffff9090909090909090909048beaddeaddeaddeadde418bd1e8000000000f1f8400000000008500488bd8e9abfdffff90909090909090909048beaddeaddeaddeaddee8000000000f1f8400000000008500e960ffffff909090909090909090488d7b104833c0f348aae968fdffff90909048c7c314000000b9ed56ffff9090909090909041898f8404000049899f90040000e8000000000f1f84000000000090909048c7c300000000b9e58dffffebcd90909048c7c318050000b9e595ffffebbc90909048c7c318050000b9e59dffffebab9090909090909041c78784040000ed51ffff49c7879004000094020000e8000000000f1f84000000000090909048c7c318050000b9e59dffffe96dffffff48896c2410e800000000e9d2fbfffff4488d0db1feffff49898f68040000e984fbfffff441c78784040000f5b1ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f55feff49c7879004000000000000e8000000000f1f84000000000041c787840400008f24feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 81 40 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD  <||@
  Comment 81 42 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 84 44 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 87 46 r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 90 50 rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 97 52 rax|QWORD = MOV value: r9|DWORD size: DWORD  <||@
  Comment 100 54 rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD  <||@
  Comment 104 56 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 108 58 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 112 60 rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 118 62 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 131 block B2 null  <||@
  Comment 131 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 131 66 NOP  <||@
  Comment 132 68 NOP  <||@
  Comment 133 70 NOP  <||@
  Comment 134 72 NOP  <||@
  Comment 135 74 NOP  <||@
  Comment 136 76 NOP  <||@
  Comment 137 78 NOP  <||@
  Comment 138 80 NOP  <||@
  Comment 139 82 NOP  <||@
  Comment 140 84 NOP  <||@
  Comment 141 86 NOP  <||@
  Comment 142 88 NOP  <||@
  Comment 143 90 NOP  <||@
  Comment 144 92 NOP  <||@
  Comment 145 94 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 152 96 AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 160 98 AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 168 100 AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 176 102 MOV x: [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 183 104 MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 183 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 190 106 MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 194 108 rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 198 110 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 211 block B3 null  <||@
  Comment 211 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 211 114 NOP  <||@
  Comment 212 116 NOP  <||@
  Comment 213 118 NOP  <||@
  Comment 214 -1 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 221 120 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 226 block B5 loop 0 depth 1 header:371|LoopBegin  <||@
  Comment 226 134 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 256 136 NOP  <||@
  Comment 257 138 NOP  <||@
  Comment 258 140 NOP  <||@
  Comment 259 142 NOP  <||@
  Comment 260 144 NOP  <||@
  Comment 261 146 NOP  <||@
  Comment 262 148 NOP  <||@
  Comment 263 150 MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 271 152 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 275 154 JUMP ~outgoingValues: [] destination: B5 -> B4  <||@
  Comment 275 block B4 loop 0 depth 1 header:371|LoopBegin  <||@
  Comment 275 122 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 275 124 NOP  <||@
  Comment 276 126 NOP  <||@
  Comment 277 128 NOP  <||@
  Comment 278 130 NOP  <||@
  Comment 279 132 CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 284 block B6 null  <||@
  Comment 284 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 284 158 NOP  <||@
  Comment 285 160 NOP  <||@
  Comment 286 162 NOP  <||@
  Comment 287 164 JUMP ~outgoingValues: [] destination: B6 -> B8  <||@
  Comment 287 block B8 null  <||@
  Comment 287 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 287 168 NOP  <||@
  Comment 288 170 NOP  <||@
  Comment 289 172 NOP  <||@
  Comment 290 174 NOP  <||@
  Comment 291 176 rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 291 178 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 291 block B9 null  <||@
  Comment 291 180 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 291 182 NOP  <||@
  Comment 292 184 NOP  <||@
  Comment 293 186 NOP  <||@
  Comment 294 188 NOP  <||@
  Comment 295 190 NOP  <||@
  Comment 296 192 rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 300 194 BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1  <||@
  Comment 311 block B10 null  <||@
  Comment 311 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 311 198 NOP  <||@
  Comment 312 200 NOP  <||@
  Comment 313 202 NOP  <||@
  Comment 314 204 NOP  <||@
  Comment 315 206 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null  <||@
  Comment 325 block B12 null  <||@
  Comment 325 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 325 210 NOP  <||@
  Comment 326 212 NOP  <||@
  Comment 327 214 NOP  <||@
  Comment 328 216 NOP  <||@
  Comment 329 218 NOP  <||@
  Comment 330 220 rax|DWORD = DEC value: r9|DWORD size: DWORD  <||@
  Comment 335 222 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null  <||@
  Comment 345 block B14 null  <||@
  Comment 345 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 345 226 NOP  <||@
  Comment 346 228 NOP  <||@
  Comment 347 230 NOP  <||@
  Comment 348 232 NOP  <||@
  Comment 349 234 CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD  <||@
  Comment 358 block B15 null  <||@
  Comment 358 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 358 238 NOP  <||@
  Comment 359 240 NOP  <||@
  Comment 360 242 NOP  <||@
  Comment 361 244 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 361 block B16 null  <||@
  Comment 361 256 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 361 258 NOP  <||@
  Comment 362 260 NOP  <||@
  Comment 363 262 NOP  <||@
  Comment 364 264 NOP  <||@
  Comment 365 266 NOP  <||@
  Comment 366 268 rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 366 [rbx:0, r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 366 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 370 270 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null  <||@
  Comment 380 block B18 null  <||@
  Comment 380 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 380 274 NOP  <||@
  Comment 381 276 NOP  <||@
  Comment 382 278 NOP  <||@
  Comment 383 280 NOP  <||@
  Comment 384 282 CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD  <||@
  Comment 392 block B19 null  <||@
  Comment 392 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 392 286 NOP  <||@
  Comment 393 288 NOP  <||@
  Comment 394 290 NOP  <||@
  Comment 395 292 NOP  <||@
  Comment 396 294 CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null  <||@
  Comment 405 block B21 null  <||@
  Comment 405 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 405 298 NOP  <||@
  Comment 406 300 NOP  <||@
  Comment 407 302 NOP  <||@
  Comment 408 304 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 408 block B22 null  <||@
  Comment 408 316 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 408 318 NOP  <||@
  Comment 409 320 NOP  <||@
  Comment 410 322 NOP  <||@
  Comment 411 324 NOP  <||@
  Comment 412 326 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD  <||@
  Comment 420 block B24 null  <||@
  Comment 420 328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 420 330 NOP  <||@
  Comment 421 332 NOP  <||@
  Comment 422 334 NOP  <||@
  Comment 423 336 NOP  <||@
  Comment 424 338 NOP  <||@
  Comment 425 340 NOP  <||@
  Comment 426 342 NOP  <||@
  Comment 427 344 rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 431 346 MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 434 348 CMP x: r9|DWORD y: 3 size: DWORD  <||@
  Comment 438 350 rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: <  <||@
  Comment 447 -1 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 452 352 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 457 block B26 loop 1 depth 1 header:18|LoopBegin  <||@
  Comment 457 366 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 368 NOP  <||@
  Comment 481 370 NOP  <||@
  Comment 482 372 NOP  <||@
  Comment 483 374 NOP  <||@
  Comment 484 376 NOP  <||@
  Comment 485 378 NOP  <||@
  Comment 486 380 rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 491 382 MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 495 384 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 497 386 JUMP ~outgoingValues: [] destination: B26 -> B25  <||@
  Comment 497 block B25 loop 1 depth 1 header:18|LoopBegin  <||@
  Comment 497 354 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 497 356 NOP  <||@
  Comment 498 358 NOP  <||@
  Comment 499 360 NOP  <||@
  Comment 500 362 NOP  <||@
  Comment 501 364 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 505 block B27 null  <||@
  Comment 505 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 505 390 NOP  <||@
  Comment 506 392 NOP  <||@
  Comment 507 394 NOP  <||@
  Comment 508 396 NOP  <||@
  Comment 509 398 NOP  <||@
  Comment 510 400 NOP  <||@
  Comment 511 402 rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD  <||@
  Comment 515 404 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 520 block B29 loop 2 depth 1 header:189|LoopBegin  <||@
  Comment 520 418 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 420 NOP  <||@
  Comment 545 422 NOP  <||@
  Comment 546 424 NOP  <||@
  Comment 547 426 NOP  <||@
  Comment 548 428 NOP  <||@
  Comment 549 430 NOP  <||@
  Comment 550 432 NOP  <||@
  Comment 551 434 NOP  <||@
  Comment 552 436 NOP  <||@
  Comment 553 438 NOP  <||@
  Comment 554 440 NOP  <||@
  Comment 555 442 NOP  <||@
  Comment 556 444 NOP  <||@
  Comment 557 446 NOP  <||@
  Comment 558 448 NOP  <||@
  Comment 559 450 NOP  <||@
  Comment 560 452 NOP  <||@
  Comment 561 454 NOP  <||@
  Comment 562 456 NOP  <||@
  Comment 563 458 NOP  <||@
  Comment 564 460 NOP  <||@
  Comment 565 462 rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 570 464 MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 574 466 rdx|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 578 468 rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 583 470 MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 587 472 rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD  <||@
  Comment 590 474 rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 595 476 MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 599 478 rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD  <||@
  Comment 602 480 rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 607 482 MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 611 484 rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD  <||@
  Comment 614 486 JUMP ~outgoingValues: [] destination: B29 -> B28  <||@
  Comment 614 block B28 loop 2 depth 1 header:189|LoopBegin  <||@
  Comment 614 406 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 614 408 NOP  <||@
  Comment 615 410 NOP  <||@
  Comment 616 412 NOP  <||@
  Comment 617 414 NOP  <||@
  Comment 618 416 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 622 block B30 null  <||@
  Comment 622 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 622 490 NOP  <||@
  Comment 623 492 NOP  <||@
  Comment 624 494 NOP  <||@
  Comment 625 496 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 630 block B32 loop 3 depth 1 header:216|LoopBegin  <||@
  Comment 630 510 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 640 512 NOP  <||@
  Comment 641 514 NOP  <||@
  Comment 642 516 NOP  <||@
  Comment 643 518 NOP  <||@
  Comment 644 520 NOP  <||@
  Comment 645 522 NOP  <||@
  Comment 646 524 rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 651 526 MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 655 528 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 657 530 JUMP ~outgoingValues: [] destination: B32 -> B31  <||@
  Comment 657 block B31 loop 3 depth 1 header:216|LoopBegin  <||@
  Comment 657 498 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 657 500 NOP  <||@
  Comment 658 502 NOP  <||@
  Comment 659 504 NOP  <||@
  Comment 660 506 NOP  <||@
  Comment 661 508 CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD  <||@
  Comment 666 block B33 null  <||@
  Comment 666 532 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 534 NOP  <||@
  Comment 667 536 NOP  <||@
  Comment 668 538 NOP  <||@
  Comment 669 540 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 669 block B34 null  <||@
  Comment 669 552 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 669 554 NOP  <||@
  Comment 670 556 NOP  <||@
  Comment 671 558 NOP  <||@
  Comment 672 560 NOP  <||@
  Comment 673 562 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD  <||@
  Comment 682 block B35 null  <||@
  Comment 682 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 682 566 NOP  <||@
  Comment 683 568 NOP  <||@
  Comment 684 570 NOP  <||@
  Comment 685 572 NOP  <||@
  Comment 686 574 NOP  <||@
  Comment 687 576 NOP  <||@
  Comment 688 578 NOP  <||@
  Comment 689 580 NOP  <||@
  Comment 690 582 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 697 584 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 701 586 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD  <||@
  Comment 714 block B37 null  <||@
  Comment 714 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 714 590 NOP  <||@
  Comment 715 592 NOP  <||@
  Comment 716 594 NOP  <||@
  Comment 717 596 NOP  <||@
  Comment 718 598 NOP  <||@
  Comment 719 600 NOP  <||@
  Comment 720 602 NOP  <||@
  Comment 721 604 NOP  <||@
  Comment 722 606 NOP  <||@
  Comment 723 608 NOP  <||@
  Comment 724 610 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 731 612 AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0  <||@
  Comment 738 614 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 745 616 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}  <||@
  Comment 745 {meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}}  <||@
  Comment 752 618 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 759 620 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 767 622 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 767 624 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 767 block B38 null  <||@
  Comment 767 626 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 767 628 NOP  <||@
  Comment 768 630 NOP  <||@
  Comment 769 632 NOP  <||@
  Comment 770 634 NOP  <||@
  Comment 771 636 NOP  <||@
  Comment 772 638 NOP  <||@
  Comment 773 640 NOP  <||@
  Comment 774 642 NOP  <||@
  Comment 775 644 NOP  <||@
  Comment 776 646 NOP  <||@
  Comment 777 648 NOP  <||@
  Comment 778 650 rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3  <||@
  Comment 782 652 MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD  <||@
  Comment 785 654 MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333]  <||@
  Comment 785 {NarrowOop[Pattern.Node@116800333]}  <||@
  Comment 792 658 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 801 POLL_RETURN_FAR  <||@
  Comment 818 block B17 null  <||@
  Comment 818 306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 818 308 NOP  <||@
  Comment 819 310 NOP  <||@
  Comment 820 312 NOP  <||@
  Comment 821 314 JUMP ~outgoingValues: [] destination: B17 -> B22  <||@
  Comment 826 block B13 null  <||@
  Comment 826 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 826 248 NOP  <||@
  Comment 827 250 NOP  <||@
  Comment 828 252 NOP  <||@
  Comment 829 254 JUMP ~outgoingValues: [] destination: B13 -> B16  <||@
  Comment 834 block B11 null  <||@
  Comment 834 542 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 834 544 NOP  <||@
  Comment 835 546 NOP  <||@
  Comment 836 548 NOP  <||@
  Comment 837 550 JUMP ~outgoingValues: [] destination: B11 -> B34  <||@
  Comment 842 block B1 null  <||@
  Comment 842 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 842 662 NOP  <||@
  Comment 843 664 NOP  <||@
  Comment 844 666 NOP  <||@
  Comment 845 668 NOP  <||@
  Comment 846 670 NOP  <||@
  Comment 847 672 NOP  <||@
  Comment 848 674 NOP  <||@
  Comment 849 676 NOP  <||@
  Comment 850 678 NOP  <||@
  Comment 851 680 NOP  <||@
  Comment 852 682 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 852 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 862 686 rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 865 688 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 865 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 870 [r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 878 692 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 878 [rax:0, r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 878 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 880 -1 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 883 694 JUMP ~outgoingValues: [] destination: B1 -> B9  <||@
  Comment 888 block B36 null  <||@
  Comment 888 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 888 698 NOP  <||@
  Comment 889 700 NOP  <||@
  Comment 890 702 NOP  <||@
  Comment 891 704 NOP  <||@
  Comment 892 706 NOP  <||@
  Comment 893 708 NOP  <||@
  Comment 894 710 NOP  <||@
  Comment 895 712 NOP  <||@
  Comment 896 714 NOP  <||@
  Comment 897 716 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}  <||@
  Comment 897 {meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}}  <||@
  Comment 907 720 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155]  <||@
  Comment 907 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 912 [rbx:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3         |4             |5 
     locals:  |-  |-  |-  |r8|DWORD  |rbx|QWORD[.]  |-   <||@
  Comment 920 724 NULLCHECK address: [rax|QWORD[.]] state [bci:155]  <||@
  Comment 920 [rax:0, rbx:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3         |4             |5 
     locals:  |-  |-  |-  |r8|DWORD  |rbx|QWORD[.]  |-   <||@
  Comment 920 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 922 726 JUMP ~outgoingValues: [] destination: B36 -> B38  <||@
  Comment 927 block B7 null  <||@
  Comment 927 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 927 730 NOP  <||@
  Comment 928 732 NOP  <||@
  Comment 929 734 NOP  <||@
  Comment 930 736 NOP  <||@
  Comment 931 738 NOP  <||@
  Comment 932 740 NOP  <||@
  Comment 933 742 NOP  <||@
  Comment 934 744 NOP  <||@
  Comment 935 746 NOP  <||@
  Comment 936 750 ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 946 752 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 951 block B42 null  <||@
  Comment 951 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 951 766 NOP  <||@
  Comment 952 768 NOP  <||@
  Comment 953 770 NOP  <||@
  Comment 954 -1 rbx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 961 -1 rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed]  <||@
  Comment 966 772 JUMP ~outgoingValues: [] destination: B42 -> B43  <||@
  Comment 966 block B43 null  <||@
  Comment 966 804 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 966 806 NOP  <||@
  Comment 967 808 NOP  <||@
  Comment 968 810 NOP  <||@
  Comment 969 812 NOP  <||@
  Comment 970 814 NOP  <||@
  Comment 971 816 NOP  <||@
  Comment 972 818 NOP  <||@
  Comment 973 820 MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD  <||@
  Comment 980 822 MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD  <||@
  Comment 987 824 DEOPT info [bci:0]  <||@
  Comment 987 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 992 [r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1000 block B23 null  <||@
  Comment 1000 784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1000 786 NOP  <||@
  Comment 1001 788 NOP  <||@
  Comment 1002 790 NOP  <||@
  Comment 1003 -1 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1010 -1 rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5]  <||@
  Comment 1015 792 JUMP ~outgoingValues: [] destination: B23 -> B43  <||@
  Comment 1017 block B41 null  <||@
  Comment 1017 794 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1017 796 NOP  <||@
  Comment 1018 798 NOP  <||@
  Comment 1019 800 NOP  <||@
  Comment 1020 -1 rbx|QWORD = MOVE input: long[1304|0x518]  <||@
  Comment 1027 -1 rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5]  <||@
  Comment 1032 802 JUMP ~outgoingValues: [] destination: B41 -> B43  <||@
  Comment 1034 block B40 null  <||@
  Comment 1034 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1034 756 NOP  <||@
  Comment 1035 758 NOP  <||@
  Comment 1036 760 NOP  <||@
  Comment 1037 -1 rbx|QWORD = MOVE input: long[1304|0x518]  <||@
  Comment 1044 -1 rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5]  <||@
  Comment 1049 762 JUMP ~outgoingValues: [] destination: B40 -> B43  <||@
  Comment 1051 block B39 null  <||@
  Comment 1051 826 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1051 828 NOP  <||@
  Comment 1052 830 NOP  <||@
  Comment 1053 832 NOP  <||@
  Comment 1054 834 NOP  <||@
  Comment 1055 836 NOP  <||@
  Comment 1056 838 NOP  <||@
  Comment 1057 840 NOP  <||@
  Comment 1058 842 MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD  <||@
  Comment 1069 844 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1080 846 DEOPT info [bci:155]  <||@
  Comment 1080 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1085 [rbx:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3         |4             |5 
     locals:  |-  |-  |-  |r8|DWORD  |rbx|QWORD[.]  |-   <||@
  Comment 1093 block B20 null  <||@
  Comment 1093 774 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1093 776 NOP  <||@
  Comment 1094 778 NOP  <||@
  Comment 1095 780 NOP  <||@
  Comment 1096 -1 rbx|QWORD = MOVE input: long[1304|0x518]  <||@
  Comment 1103 -1 rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5]  <||@
  Comment 1108 782 JUMP ~outgoingValues: [] destination: B20 -> B43  <||@
  Comment 1118 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1143 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1171 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1176 [rbx:0, r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1206 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1211 [rax:0, r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1241 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1246 [rax:0, rbx:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3         |4             |5 
     locals:  |-  |-  |-  |r8|DWORD  |rbx|QWORD[.]  |-   <||@
  Comment 1254 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1254 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1260 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1260 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-11802[java.util.regex.Pattern.newSlice(int[], int, boolean)]"
  method "HotSpotCompilation-11802[java.util.regex.Pattern.newSlice(int[], int, boolean)]"
  date 1724269769023
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af91020 448b560849bc0000002b787f00004d03d44d33e4493bc20f8543407ffe66669089842400c0feff4883ec189041817f20000000000f851f04000090909090909090909090909090909090909048896c24104c8bd64c8bda448bc9498b9fb8010000418bc148c1e002488d40174883e0f8488bf04803f3493bb7c80100000f87c702000090909090909090909090909090904989b7b80100000f188418000100000f188418400100000f1884188001000048c70301000000c74308a026000044894b0c488d48f04881f9000800000f83cc02000090909048c7c610000000e9310000006666660f1f840000000000666666906666660f1f840000000000666666909090909090909048c7043300000000488d760890909090483bc677e4909090909090909090909090418b4210480fbae0010f8280020000909090904183f9010f8cfd0100009090909090418bc1ffc84183f9020f8ce101000090909090443bc80f86930200009090909090909090418b730c4183f9020f8cb6010000909090903bf00f86820200009090909083fe020f82b00200009090909090909085f60f844402000090909090909090418b43108943104183f903b802000000410f4cc1be01000000e9280000006666660f1f840000000000666666900f1f840000000000909090909090418b54b3108954b310ffc6909090903bc67fe7909090909090418d41fce95e0000006666660f1f84000000000066666690660f1f840000000000909090909090909090909090909090909090909090418b54b3108954b3108bd6ffc2418b4c9310894c93108d5602418b4c9310894c93108d5603418b4c9310894c93108d7604909090903bc67fb2909090e91b00000066660f1f840000000000909090909090418b44b3108944b310ffc690909090443bce7fe6909090909090904585c00f85710100009090909090909090498b87b8010000488d7018493bb7c80100000f87ae000000909090909090909090904989b7b80100000f18801801000048c70001000000c74008d8923500c7400c0000000048c7401000000000909090909090909090909048c1eb03895810c7400cee97bcc5488b6c24104883c418493ba7500400000f873b010000c5f877c3909090e95efeffff909090e927feffff909090e953ffffff9090909090909090909048bea026002b787f0000418bd1e87ad893fe0f1f8400000000008500488bd8e9abfdffff90909090909090909048bed892352b787f0000e8d06e94fe0f1f8400000000008500e960ffffff909090909090909090488d7b104833c0f348aae968fdffff90909048c7c314000000b9ed56ffff9090909090909041898f8404000049899f90040000e87a9d7ffe0f1f84000000000090909048c7c300000000b9e58dffffebcd90909048c7c318050000b9e595ffffebbc90909048c7c318050000b9e59dffffebab9090909090909041c78784040000ed51ffff49c7879004000094020000e81d9d7ffe0f1f84000000000090909048c7c318050000b9e59dffffe96dffffff48896c2410e89d9d7dfee9d2fbfffff4488d0db1feffff49898f68040000e964ab7ffef441c78784040000f5b1ffff49c7879004000000000000e8c29c7ffe0f1f84000000000041c787840400008f55feff49c7879004000000000000e89f9c7ffe0f1f84000000000041c787840400008f24feff49c7879004000000000000e87c9c7ffe0f1f840000000000e8f53d93fef4e80f9a7ffef4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 81 40 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5df0ec24 slotKind: QWORD  <||@
  Comment 81 42 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 84 44 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 87 46 r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 90 50 rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 97 52 rax|QWORD = MOV value: r9|DWORD size: DWORD  <||@
  Comment 100 54 rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD  <||@
  Comment 104 56 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 108 58 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 112 60 rsi|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 118 62 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 131 block B2 null  <||@
  Comment 131 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 131 66 NOP  <||@
  Comment 132 68 NOP  <||@
  Comment 133 70 NOP  <||@
  Comment 134 72 NOP  <||@
  Comment 135 74 NOP  <||@
  Comment 136 76 NOP  <||@
  Comment 137 78 NOP  <||@
  Comment 138 80 NOP  <||@
  Comment 139 82 NOP  <||@
  Comment 140 84 NOP  <||@
  Comment 141 86 NOP  <||@
  Comment 142 88 NOP  <||@
  Comment 143 90 NOP  <||@
  Comment 144 92 NOP  <||@
  Comment 145 94 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 152 96 AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 160 98 AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 168 100 AMD64PREFETCH ~address: [rax|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 176 102 MOV x: [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 183 104 MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 183 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 190 106 MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 194 108 rcx|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 198 110 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 211 block B3 null  <||@
  Comment 211 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 211 114 NOP  <||@
  Comment 212 116 NOP  <||@
  Comment 213 118 NOP  <||@
  Comment 214 -1 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 221 120 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 226 block B5 loop 0 depth 1 header:371|LoopBegin  <||@
  Comment 226 134 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 256 136 NOP  <||@
  Comment 257 138 NOP  <||@
  Comment 258 140 NOP  <||@
  Comment 259 142 NOP  <||@
  Comment 260 144 NOP  <||@
  Comment 261 146 NOP  <||@
  Comment 262 148 NOP  <||@
  Comment 263 150 MOV x: [rbx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 271 152 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 275 154 JUMP ~outgoingValues: [] destination: B5 -> B4  <||@
  Comment 275 block B4 loop 0 depth 1 header:371|LoopBegin  <||@
  Comment 275 122 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 275 124 NOP  <||@
  Comment 276 126 NOP  <||@
  Comment 277 128 NOP  <||@
  Comment 278 130 NOP  <||@
  Comment 279 132 CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 284 block B6 null  <||@
  Comment 284 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 284 158 NOP  <||@
  Comment 285 160 NOP  <||@
  Comment 286 162 NOP  <||@
  Comment 287 164 JUMP ~outgoingValues: [] destination: B6 -> B8  <||@
  Comment 287 block B8 null  <||@
  Comment 287 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 287 168 NOP  <||@
  Comment 288 170 NOP  <||@
  Comment 289 172 NOP  <||@
  Comment 290 174 NOP  <||@
  Comment 291 176 rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 291 178 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 291 block B9 null  <||@
  Comment 291 180 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 291 182 NOP  <||@
  Comment 292 184 NOP  <||@
  Comment 293 186 NOP  <||@
  Comment 294 188 NOP  <||@
  Comment 295 190 NOP  <||@
  Comment 296 192 rax|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 300 194 BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B9 -> B10 falseDestination: B9 -> B42 index: 1  <||@
  Comment 311 block B10 null  <||@
  Comment 311 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 311 198 NOP  <||@
  Comment 312 200 NOP  <||@
  Comment 313 202 NOP  <||@
  Comment 314 204 NOP  <||@
  Comment 315 206 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null  <||@
  Comment 325 block B12 null  <||@
  Comment 325 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 325 210 NOP  <||@
  Comment 326 212 NOP  <||@
  Comment 327 214 NOP  <||@
  Comment 328 216 NOP  <||@
  Comment 329 218 NOP  <||@
  Comment 330 220 rax|DWORD = DEC value: r9|DWORD size: DWORD  <||@
  Comment 335 222 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: DWORD inlinedY: null  <||@
  Comment 345 block B14 null  <||@
  Comment 345 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 345 226 NOP  <||@
  Comment 346 228 NOP  <||@
  Comment 347 230 NOP  <||@
  Comment 348 232 NOP  <||@
  Comment 349 234 CMPBRANCH (x: r9|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B41 size: DWORD  <||@
  Comment 358 block B15 null  <||@
  Comment 358 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 358 238 NOP  <||@
  Comment 359 240 NOP  <||@
  Comment 360 242 NOP  <||@
  Comment 361 244 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 361 block B16 null  <||@
  Comment 361 256 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 361 258 NOP  <||@
  Comment 362 260 NOP  <||@
  Comment 363 262 NOP  <||@
  Comment 364 264 NOP  <||@
  Comment 365 266 NOP  <||@
  Comment 366 268 rsi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 366 [rbx:0, r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 366 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 370 270 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: DWORD inlinedY: null  <||@
  Comment 380 block B18 null  <||@
  Comment 380 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 380 274 NOP  <||@
  Comment 381 276 NOP  <||@
  Comment 382 278 NOP  <||@
  Comment 383 280 NOP  <||@
  Comment 384 282 CMPBRANCH (x: rsi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B40 size: DWORD  <||@
  Comment 392 block B19 null  <||@
  Comment 392 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 392 286 NOP  <||@
  Comment 393 288 NOP  <||@
  Comment 394 290 NOP  <||@
  Comment 395 292 NOP  <||@
  Comment 396 294 CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: DWORD inlinedY: null  <||@
  Comment 405 block B21 null  <||@
  Comment 405 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 405 298 NOP  <||@
  Comment 406 300 NOP  <||@
  Comment 407 302 NOP  <||@
  Comment 408 304 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 408 block B22 null  <||@
  Comment 408 316 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 408 318 NOP  <||@
  Comment 409 320 NOP  <||@
  Comment 410 322 NOP  <||@
  Comment 411 324 NOP  <||@
  Comment 412 326 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD  <||@
  Comment 420 block B24 null  <||@
  Comment 420 328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 420 330 NOP  <||@
  Comment 421 332 NOP  <||@
  Comment 422 334 NOP  <||@
  Comment 423 336 NOP  <||@
  Comment 424 338 NOP  <||@
  Comment 425 340 NOP  <||@
  Comment 426 342 NOP  <||@
  Comment 427 344 rax|DWORD = MOV input: [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 431 346 MOV (x: [rbx|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 434 348 CMP x: r9|DWORD y: 3 size: DWORD  <||@
  Comment 438 350 rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: <  <||@
  Comment 447 -1 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 452 352 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 457 block B26 loop 1 depth 1 header:18|LoopBegin  <||@
  Comment 457 366 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 368 NOP  <||@
  Comment 481 370 NOP  <||@
  Comment 482 372 NOP  <||@
  Comment 483 374 NOP  <||@
  Comment 484 376 NOP  <||@
  Comment 485 378 NOP  <||@
  Comment 486 380 rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 491 382 MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 495 384 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 497 386 JUMP ~outgoingValues: [] destination: B26 -> B25  <||@
  Comment 497 block B25 loop 1 depth 1 header:18|LoopBegin  <||@
  Comment 497 354 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 497 356 NOP  <||@
  Comment 498 358 NOP  <||@
  Comment 499 360 NOP  <||@
  Comment 500 362 NOP  <||@
  Comment 501 364 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 505 block B27 null  <||@
  Comment 505 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 505 390 NOP  <||@
  Comment 506 392 NOP  <||@
  Comment 507 394 NOP  <||@
  Comment 508 396 NOP  <||@
  Comment 509 398 NOP  <||@
  Comment 510 400 NOP  <||@
  Comment 511 402 rax|DWORD = LEA address: [r9|DWORD - 4] size: DWORD  <||@
  Comment 515 404 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 520 block B29 loop 2 depth 1 header:189|LoopBegin  <||@
  Comment 520 418 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 420 NOP  <||@
  Comment 545 422 NOP  <||@
  Comment 546 424 NOP  <||@
  Comment 547 426 NOP  <||@
  Comment 548 428 NOP  <||@
  Comment 549 430 NOP  <||@
  Comment 550 432 NOP  <||@
  Comment 551 434 NOP  <||@
  Comment 552 436 NOP  <||@
  Comment 553 438 NOP  <||@
  Comment 554 440 NOP  <||@
  Comment 555 442 NOP  <||@
  Comment 556 444 NOP  <||@
  Comment 557 446 NOP  <||@
  Comment 558 448 NOP  <||@
  Comment 559 450 NOP  <||@
  Comment 560 452 NOP  <||@
  Comment 561 454 NOP  <||@
  Comment 562 456 NOP  <||@
  Comment 563 458 NOP  <||@
  Comment 564 460 NOP  <||@
  Comment 565 462 rdx|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 570 464 MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 574 466 rdx|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 578 468 rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 583 470 MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 587 472 rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD  <||@
  Comment 590 474 rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 595 476 MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 599 478 rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD  <||@
  Comment 602 480 rcx|DWORD = MOV input: [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 607 482 MOV (x: [rbx|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 611 484 rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD  <||@
  Comment 614 486 JUMP ~outgoingValues: [] destination: B29 -> B28  <||@
  Comment 614 block B28 loop 2 depth 1 header:189|LoopBegin  <||@
  Comment 614 406 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 614 408 NOP  <||@
  Comment 615 410 NOP  <||@
  Comment 616 412 NOP  <||@
  Comment 617 414 NOP  <||@
  Comment 618 416 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 622 block B30 null  <||@
  Comment 622 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 622 490 NOP  <||@
  Comment 623 492 NOP  <||@
  Comment 624 494 NOP  <||@
  Comment 625 496 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 630 block B32 loop 3 depth 1 header:216|LoopBegin  <||@
  Comment 630 510 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 640 512 NOP  <||@
  Comment 641 514 NOP  <||@
  Comment 642 516 NOP  <||@
  Comment 643 518 NOP  <||@
  Comment 644 520 NOP  <||@
  Comment 645 522 NOP  <||@
  Comment 646 524 rax|DWORD = MOV input: [r11|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 651 526 MOV (x: [rbx|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 655 528 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 657 530 JUMP ~outgoingValues: [] destination: B32 -> B31  <||@
  Comment 657 block B31 loop 3 depth 1 header:216|LoopBegin  <||@
  Comment 657 498 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 657 500 NOP  <||@
  Comment 658 502 NOP  <||@
  Comment 659 504 NOP  <||@
  Comment 660 506 NOP  <||@
  Comment 661 508 CMPBRANCH (x: r9|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD  <||@
  Comment 666 block B33 null  <||@
  Comment 666 532 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 534 NOP  <||@
  Comment 667 536 NOP  <||@
  Comment 668 538 NOP  <||@
  Comment 669 540 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 669 block B34 null  <||@
  Comment 669 552 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 669 554 NOP  <||@
  Comment 670 556 NOP  <||@
  Comment 671 558 NOP  <||@
  Comment 672 560 NOP  <||@
  Comment 673 562 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B39 size: DWORD  <||@
  Comment 682 block B35 null  <||@
  Comment 682 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 682 566 NOP  <||@
  Comment 683 568 NOP  <||@
  Comment 684 570 NOP  <||@
  Comment 685 572 NOP  <||@
  Comment 686 574 NOP  <||@
  Comment 687 576 NOP  <||@
  Comment 688 578 NOP  <||@
  Comment 689 580 NOP  <||@
  Comment 690 582 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 697 584 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 701 586 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD  <||@
  Comment 714 block B37 null  <||@
  Comment 714 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 714 590 NOP  <||@
  Comment 715 592 NOP  <||@
  Comment 716 594 NOP  <||@
  Comment 717 596 NOP  <||@
  Comment 718 598 NOP  <||@
  Comment 719 600 NOP  <||@
  Comment 720 602 NOP  <||@
  Comment 721 604 NOP  <||@
  Comment 722 606 NOP  <||@
  Comment 723 608 NOP  <||@
  Comment 724 610 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 731 612 AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0  <||@
  Comment 738 614 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 745 616 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}  <||@
  Comment 745 {meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}}  <||@
  Comment 752 618 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 759 620 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 767 622 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 767 624 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 767 block B38 null  <||@
  Comment 767 626 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 767 628 NOP  <||@
  Comment 768 630 NOP  <||@
  Comment 769 632 NOP  <||@
  Comment 770 634 NOP  <||@
  Comment 771 636 NOP  <||@
  Comment 772 638 NOP  <||@
  Comment 773 640 NOP  <||@
  Comment 774 642 NOP  <||@
  Comment 775 644 NOP  <||@
  Comment 776 646 NOP  <||@
  Comment 777 648 NOP  <||@
  Comment 778 650 rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@490586f1 encoding: base: 0 shift: 3  <||@
  Comment 782 652 MOV (x: [rax|QWORD[.] + 16], y: rbx|DWORD[_]) size: DWORD  <||@
  Comment 785 654 MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333]  <||@
  Comment 785 {NarrowOop[Pattern.Node@116800333]}  <||@
  Comment 792 658 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 801 POLL_RETURN_FAR  <||@
  Comment 818 block B17 null  <||@
  Comment 818 306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 818 308 NOP  <||@
  Comment 819 310 NOP  <||@
  Comment 820 312 NOP  <||@
  Comment 821 314 JUMP ~outgoingValues: [] destination: B17 -> B22  <||@
  Comment 826 block B13 null  <||@
  Comment 826 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 826 248 NOP  <||@
  Comment 827 250 NOP  <||@
  Comment 828 252 NOP  <||@
  Comment 829 254 JUMP ~outgoingValues: [] destination: B13 -> B16  <||@
  Comment 834 block B11 null  <||@
  Comment 834 542 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 834 544 NOP  <||@
  Comment 835 546 NOP  <||@
  Comment 836 548 NOP  <||@
  Comment 837 550 JUMP ~outgoingValues: [] destination: B11 -> B34  <||@
  Comment 842 block B1 null  <||@
  Comment 842 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 842 662 NOP  <||@
  Comment 843 664 NOP  <||@
  Comment 844 666 NOP  <||@
  Comment 845 668 NOP  <||@
  Comment 846 670 NOP  <||@
  Comment 847 672 NOP  <||@
  Comment 848 674 NOP  <||@
  Comment 849 676 NOP  <||@
  Comment 850 678 NOP  <||@
  Comment 851 680 NOP  <||@
  Comment 852 682 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 852 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 862 686 rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 865 688 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 865 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 870 [r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 878 692 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 878 [rax:0, r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 878 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 880 -1 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 883 694 JUMP ~outgoingValues: [] destination: B1 -> B9  <||@
  Comment 888 block B36 null  <||@
  Comment 888 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 888 698 NOP  <||@
  Comment 889 700 NOP  <||@
  Comment 890 702 NOP  <||@
  Comment 891 704 NOP  <||@
  Comment 892 706 NOP  <||@
  Comment 893 708 NOP  <||@
  Comment 894 710 NOP  <||@
  Comment 895 712 NOP  <||@
  Comment 896 714 NOP  <||@
  Comment 897 716 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}  <||@
  Comment 897 {meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}}  <||@
  Comment 907 720 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155]  <||@
  Comment 907 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 912 [rbx:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3         |4             |5 
     locals:  |-  |-  |-  |r8|DWORD  |rbx|QWORD[.]  |-   <||@
  Comment 920 724 NULLCHECK address: [rax|QWORD[.]] state [bci:155]  <||@
  Comment 920 [rax:0, rbx:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3         |4             |5 
     locals:  |-  |-  |-  |r8|DWORD  |rbx|QWORD[.]  |-   <||@
  Comment 920 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 922 726 JUMP ~outgoingValues: [] destination: B36 -> B38  <||@
  Comment 927 block B7 null  <||@
  Comment 927 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 927 730 NOP  <||@
  Comment 928 732 NOP  <||@
  Comment 929 734 NOP  <||@
  Comment 930 736 NOP  <||@
  Comment 931 738 NOP  <||@
  Comment 932 740 NOP  <||@
  Comment 933 742 NOP  <||@
  Comment 934 744 NOP  <||@
  Comment 935 746 NOP  <||@
  Comment 936 750 ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 946 752 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 951 block B42 null  <||@
  Comment 951 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 951 766 NOP  <||@
  Comment 952 768 NOP  <||@
  Comment 953 770 NOP  <||@
  Comment 954 -1 rbx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 961 -1 rcx|DWORD = MOVE input: int[-43283|0xffffffffffff56ed]  <||@
  Comment 966 772 JUMP ~outgoingValues: [] destination: B42 -> B43  <||@
  Comment 966 block B43 null  <||@
  Comment 966 804 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 966 806 NOP  <||@
  Comment 967 808 NOP  <||@
  Comment 968 810 NOP  <||@
  Comment 969 812 NOP  <||@
  Comment 970 814 NOP  <||@
  Comment 971 816 NOP  <||@
  Comment 972 818 NOP  <||@
  Comment 973 820 MOV (x: [r15|QWORD + 1156], y: rcx|DWORD) size: DWORD  <||@
  Comment 980 822 MOV (x: [r15|QWORD + 1168], y: rbx|QWORD) size: QWORD  <||@
  Comment 987 824 DEOPT info [bci:0]  <||@
  Comment 987 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 992 [r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1000 block B23 null  <||@
  Comment 1000 784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1000 786 NOP  <||@
  Comment 1001 788 NOP  <||@
  Comment 1002 790 NOP  <||@
  Comment 1003 -1 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1010 -1 rcx|DWORD = MOVE input: int[-29211|0xffffffffffff8de5]  <||@
  Comment 1015 792 JUMP ~outgoingValues: [] destination: B23 -> B43  <||@
  Comment 1017 block B41 null  <||@
  Comment 1017 794 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1017 796 NOP  <||@
  Comment 1018 798 NOP  <||@
  Comment 1019 800 NOP  <||@
  Comment 1020 -1 rbx|QWORD = MOVE input: long[1304|0x518]  <||@
  Comment 1027 -1 rcx|DWORD = MOVE input: int[-27163|0xffffffffffff95e5]  <||@
  Comment 1032 802 JUMP ~outgoingValues: [] destination: B41 -> B43  <||@
  Comment 1034 block B40 null  <||@
  Comment 1034 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1034 756 NOP  <||@
  Comment 1035 758 NOP  <||@
  Comment 1036 760 NOP  <||@
  Comment 1037 -1 rbx|QWORD = MOVE input: long[1304|0x518]  <||@
  Comment 1044 -1 rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5]  <||@
  Comment 1049 762 JUMP ~outgoingValues: [] destination: B40 -> B43  <||@
  Comment 1051 block B39 null  <||@
  Comment 1051 826 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1051 828 NOP  <||@
  Comment 1052 830 NOP  <||@
  Comment 1053 832 NOP  <||@
  Comment 1054 834 NOP  <||@
  Comment 1055 836 NOP  <||@
  Comment 1056 838 NOP  <||@
  Comment 1057 840 NOP  <||@
  Comment 1058 842 MOV x: [r15|QWORD + 1156] y: -44563 size: DWORD  <||@
  Comment 1069 844 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1080 846 DEOPT info [bci:155]  <||@
  Comment 1080 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1085 [rbx:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3         |4             |5 
     locals:  |-  |-  |-  |r8|DWORD  |rbx|QWORD[.]  |-   <||@
  Comment 1093 block B20 null  <||@
  Comment 1093 774 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1093 776 NOP  <||@
  Comment 1094 778 NOP  <||@
  Comment 1095 780 NOP  <||@
  Comment 1096 -1 rbx|QWORD = MOVE input: long[1304|0x518]  <||@
  Comment 1103 -1 rcx|DWORD = MOVE input: int[-25115|0xffffffffffff9de5]  <||@
  Comment 1108 782 JUMP ~outgoingValues: [] destination: B20 -> B43  <||@
  Comment 1118 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1143 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1171 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1176 [rbx:0, r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1206 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1211 [rax:0, r10:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3         |4  |5 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1241 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1246 [rax:0, rbx:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3         |4             |5 
     locals:  |-  |-  |-  |r8|DWORD  |rbx|QWORD[.]  |-   <||@
  Comment 1254 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1254 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1260 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1260 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
