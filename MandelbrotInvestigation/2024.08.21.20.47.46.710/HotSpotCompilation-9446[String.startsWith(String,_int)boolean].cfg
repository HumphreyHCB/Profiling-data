begin_compilation
  name " HotSpotCompilation-9446[java.lang.String.startsWith(String, int)]"
  method "HotSpotCompilation-9446[java.lang.String.startsWith(String, int)]"
  date 1724269760214
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v6 v17 i106 j248 i79 ?96 ?100 i133 v187 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 v47 i43 i124 v42 ?96 ?100 i83 v84 i95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i5 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 1]
profileData: PROFILED designatedSuccessorProbability: 0.03122842234892975
stamp: void
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v8 #falseSuccessor: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
v8 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a353 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a353  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v365 v367 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v365 
lastLocationAccess: - 
=== Succesors ===
next: i354 
=== Usages ===
a164 v366 v371 v373 v375 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v365 lastLocationAccess: - #next: i354  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v370 v368 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<String.startsWith(String, int)>
localsSize: 8
locksSize: 0
sourceFile: String.java
sourceLine: 2285
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v319 i354 a355 i357 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a353 
=== Succesors ===
=== Usages ===
i354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i354 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-42507|0xffffffffffff59f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v366 
lastLocationAccess: - 
=== Succesors ===
next: a355 
=== Usages ===
i50 v187 v207 v227 
=== Predecessor ===
a353 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v366 lastLocationAccess: - #next: a355  <|@  <|@
f <@~|@floating>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a355 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-44555|0xffffffffffff51f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v368 
lastLocationAccess: - 
=== Succesors ===
next: i356 
=== Usages ===
a177 v369 v372 v374 v376 
=== Predecessor ===
i354 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v368 lastLocationAccess: - #next: i356  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i356 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v370 
lastLocationAccess: - 
=== Succesors ===
next: i357 
=== Usages ===
i185 
=== Predecessor ===
a355 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v370 lastLocationAccess: - #next: i357  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a355 
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-45835|0xffffffffffff4cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v369 
lastLocationAccess: - 
=== Succesors ===
next: i358 
=== Usages ===
i58 v119 i83 i91 ?96 ?100 v101 v129 v237 v217 
=== Predecessor ===
i356 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v369 lastLocationAccess: - #next: i358  <|@  <|@
f <@~|@floating>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v367 
lastLocationAccess: - 
=== Succesors ===
next: v23 
=== Usages ===
i173 
=== Predecessor ===
i357 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v367 lastLocationAccess: - #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i358 
=== Succesors ===
=== Usages ===
i50 v36 v33 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i358  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i354 
y: i173 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i354 y: i173  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i356 
=== Succesors ===
=== Usages ===
i58 v33 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i356  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i357 
y: i185 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i357 y: i185  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 13]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i50 
y: i58 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i50 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i16 
y: i3 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i16 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.02188337358368564
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i358 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v22 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v19 v21 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v19 v21 #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 18]
stamp: void
=== Inputs ===
memoryMap: - 
result: i5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i5  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2288) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.startsWith(String.java:2293) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i185 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i173 y: i185  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2293) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v304 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v304 #falseSuccessor: v305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2294) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2294) [bci: 55]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 i43 i115 i140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.startsWith(String.java:2294) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i35 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i173 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2294) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v308 #falseSuccessor: v309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2294) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid j326 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: -78611
stableDimension: 0
stamp: i32 [-78611]
stampKind: i32
value: int[-78611|0xfffffffffffecced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2297) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i67 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i357 y: i67  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a355 
=== Succesors ===
=== Usages ===
?100 ?96 j349 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a355  <|@  <|@
f <@~|@floating>@ <|@
tid a164 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a353 
=== Succesors ===
=== Usages ===
j347 ?96 ?100 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a353  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 v344 j318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.9433460450053722
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v69 #falseSuccessor: v68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 10]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i354 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v283 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v283 #falseSuccessor: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: i359 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i359  <|@  <|@
f <@~|@floating>@ <|@
tid j248 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j248 
index: a353 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v371 
lastLocationAccess: - 
=== Succesors ===
next: i360 
=== Usages ===
v249 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v371 lastLocationAccess: - #next: i360  <|@  <|@
f <@~|@floating>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a355 
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v372 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
v249 
=== Predecessor ===
i359 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v372 lastLocationAccess: - #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 16]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i359 
y: i360 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i359 y: i360  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 16]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.08747913188647746
stamp: void
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
i360 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v75 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 21]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: j347 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i64
=== Inputs ===
object: a164 
=== Succesors ===
next: j349 
=== Usages ===
j348 
=== Predecessor ===
v75 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a164 #next: j349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i64
=== Inputs ===
object: a177 
=== Succesors ===
next: i83 
=== Usages ===
j350 
=== Predecessor ===
j347 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a177 #next: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 21]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 25]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i3 
y: i78 
=== Succesors ===
=== Usages ===
j80 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 38]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
j348 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i79  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i64
=== Inputs ===
x: j80 
y: j347 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j80 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 42]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i64
=== Inputs ===
x: j349 
y: j120 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j349 y: j120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
runtimeCheckedCPUFeatures: [null]
stamp: i32
=== Inputs ===
lastLocationAccess: - 
arrayA: j348 
arrayB: j350 
length: i357 
stride: i5 
=== Succesors ===
next: v87 
=== Usages ===
v84 i124 i90 
=== Predecessor ===
j349 >@ <|@
instruction <@VectorizedMismatch|@jdk.graal.compiler.replacements.nodes.VectorizedMismatchNode>@ lastLocationAccess: - arrayA: j348 arrayB: j350 length: i357 stride: i5 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:397) [bci: 55]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i5 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i83 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:397) [bci: 55]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.6748091603053435
stamp: void
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
i83 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v86 #falseSuccessor: v85  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 61]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 66]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
value: i83 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@Not|@jdk.graal.compiler.nodes.calc.NotNode>@ value: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 67]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i357 
y: i90 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i357 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v93 
values: i5 i91 
=== Succesors ===
=== Usages ===
?96 i124 v129 i133 j254 i140 v217 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v93 values: i5 i91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 
=== Succesors ===
next: v132 
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i357 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i95 y: i357  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 65]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i124 i124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.9349653035618263
stamp: void
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v130 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v131 #falseSuccessor: v130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 77]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 81]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i3 
y: i95 
=== Succesors ===
=== Usages ===
j252 v207 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i133 
y: i354 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i133 y: i354  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.startsWith(String, int)>
localsSize: 8
locksSize: 0
sourceFile: String.java
sourceLine: 2297
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?96 ?100 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v287 #falseSuccessor: v289  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i357 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i95 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v291 
falseSuccessor: v293 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v291 #falseSuccessor: v293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: i361 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i361  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i133 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j252 
index: a353 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j252 index: a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v373 
lastLocationAccess: - 
=== Succesors ===
next: i362 
=== Usages ===
v253 
=== Predecessor ===
v291 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v373 lastLocationAccess: - #next: i362  <|@  <|@
f <@~|@floating>@ <|@
tid j254 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i95 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j254 
index: a355 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j254 index: a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v374 
lastLocationAccess: - 
=== Succesors ===
next: v139 
=== Usages ===
v253 
=== Predecessor ===
i361 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v374 lastLocationAccess: - #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i361 
y: i362 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i361 y: i362  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.3842399743659264
stamp: void
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
i362 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v138 #falseSuccessor: v137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i95 
y: i35 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i95 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v98 
values: i140 i115 
=== Succesors ===
=== Usages ===
?100 v101 i106 j257 i124 i115 v237 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v98 values: i140 i115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 43
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v97 
=== Succesors ===
next: v105 
=== Usages ===
i158 v102 v110 v116 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v97 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i158 
y: i357 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i158 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v104 #falseSuccessor: v102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 77]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 81]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i3 
y: i158 
=== Succesors ===
=== Usages ===
j255 v227 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i354 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i106 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v297 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v295 #falseSuccessor: v297  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i158 
y: i357 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i158 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v299 #falseSuccessor: v301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: i363 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i363  <|@  <|@
f <@~|@floating>@ <|@
tid j255 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i106 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i106  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j255 
index: a353 
=== Succesors ===
=== Usages ===
i363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i363 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v375 
lastLocationAccess: - 
=== Succesors ===
next: i364 
=== Usages ===
v256 
=== Predecessor ===
v299 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v375 lastLocationAccess: - #next: i364  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i158 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j257 
index: a355 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j257 index: a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v376 
lastLocationAccess: - 
=== Succesors ===
next: v114 
=== Usages ===
v256 
=== Predecessor ===
i363 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v376 lastLocationAccess: - #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i363 
y: i364 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i363 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.3842399743659264
stamp: void
=== Inputs ===
condition: v256 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
i364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v256 #trueSuccessor: v113 #falseSuccessor: v110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i158 
y: i35 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i158 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
loopBegin: v98 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v98 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v98 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v98 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v98 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: -60955
stableDimension: 0
stamp: i32 [-60955]
stampKind: i32
value: int[-60955|0xffffffffffff11e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: -58395
stableDimension: 0
stamp: i32 [-58395]
stampKind: i32
value: int[-58395|0xffffffffffff1be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v297 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32 [-60955 - -58395] bits:1...10001x0x111100101
valueDescription: i32
=== Inputs ===
merge: v339 
values: i341 i346 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v339 values: i341 i346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v345 
=== Succesors ===
next: v344 
=== Usages ===
i342 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v345 #next: v344  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: iload
code: ResolvedJavaMethodBytecode<ArraysSupport.mismatch(byte[], int, byte[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: ArraysSupport.java
sourceLine: 401
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?121 
values: a164 i3 a177 i5 i357 i158 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?121 values: a164 i3 a177 i5 i357 i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateBefore: ?100 
actionAndReason: i342 
speculation: j316 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?100 actionAndReason: i342 speculation: j316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v137 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: -55835
stableDimension: 0
stamp: i32 [-55835]
stampKind: i32
value: int[-55835|0xffffffffffff25e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: -53275
stableDimension: 0
stamp: i32 [-53275]
stampKind: i32
value: int[-53275|0xffffffffffff2fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32 [-55835 - -53275] bits:1...10010x1x111100101
valueDescription: i32
=== Inputs ===
merge: v331 
values: i333 i338 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v331 values: i333 i338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v332 v337 
=== Succesors ===
next: v336 
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v332 v337 #next: v336  <|@  <|@
tid ?96 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: iload
code: ResolvedJavaMethodBytecode<ArraysSupport.mismatch(byte[], int, byte[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: ArraysSupport.java
sourceLine: 401
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?121 
values: a164 i3 a177 i5 i357 i95 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?121 values: a164 i3 a177 i5 i357 i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateBefore: ?96 
actionAndReason: i334 
speculation: j316 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?96 actionAndReason: i334 speculation: j316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:398) [bci: 58]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v85 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:390) [bci: 19]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v122 
values: i5 i83 i158 i89 i95 i89 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v122 values: i5 i83 i158 i89 i95 i89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v123 v125 v126 v127 v159 v160 
=== Succesors ===
next: v45 
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v123 v125 v126 v127 v159 v160 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.startsWith(String.java:2297) [bci: 73]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i5 
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i124 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2297) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v42 
trueValue: i35 
falseValue: i5 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v42 trueValue: i35 falseValue: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2297) [bci: 81]
stamp: void
=== Inputs ===
memoryMap: - 
result: i43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: -48155
stableDimension: 0
stamp: i32 [-48155]
stampKind: i32
value: int[-48155|0xffffffffffff43e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2293) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid j161 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: -77587
stableDimension: 0
stamp: i32 [-77587]
stampKind: i32
value: int[-77587|0xfffffffffffed0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
v305 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: i32 [-78611 - -48155] bits:1...1xx10xxxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v313 
values: i325 i328 i330 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v313 values: i325 i328 i330  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: i64 [0 - 660] bits:0...0x0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v313 
values: j326 j161 j316 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v313 values: j326 j161 j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v324 v327 v329 
=== Succesors ===
next: v319 
=== Usages ===
i317 j318 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v324 v327 v329 #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i317 
speculation: j318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i317 speculation: j318  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v6 v17 i106 j248 i79 ?96 ?100 i133 v187 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 v47 i43 i124 v42 ?96 ?100 i83 v84 i95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i5 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 1]
profileData: PROFILED designatedSuccessorProbability: 0.03122842234892975
stamp: void
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v8 #falseSuccessor: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
v8 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a353 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a353  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v365 v367 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a353 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v365 
lastLocationAccess: - 
=== Succesors ===
next: i354 
=== Usages ===
a164 v366 v371 v373 v375 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v365 lastLocationAccess: - #next: i354  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v370 v368 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<String.startsWith(String, int)>
localsSize: 8
locksSize: 0
sourceFile: String.java
sourceLine: 2285
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v319 i354 a355 i357 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v366 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a353 
=== Succesors ===
=== Usages ===
i354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i354 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-42507|0xffffffffffff59f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v366 
lastLocationAccess: - 
=== Succesors ===
next: a355 
=== Usages ===
i50 v187 v207 v227 
=== Predecessor ===
a353 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v366 lastLocationAccess: - #next: a355  <|@  <|@
f <@~|@floating>@ <|@
tid v368 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a355 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-44555|0xffffffffffff51f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v368 
lastLocationAccess: - 
=== Succesors ===
next: i356 
=== Usages ===
a177 v369 v372 v374 v376 
=== Predecessor ===
i354 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v368 lastLocationAccess: - #next: i356  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i356 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v370 
lastLocationAccess: - 
=== Succesors ===
next: i357 
=== Usages ===
i185 
=== Predecessor ===
a355 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v370 lastLocationAccess: - #next: i357  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a355 
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i357 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-45835|0xffffffffffff4cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v369 
lastLocationAccess: - 
=== Succesors ===
next: i358 
=== Usages ===
i58 v119 i83 i91 ?96 ?100 v101 v129 v237 v217 
=== Predecessor ===
i356 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v369 lastLocationAccess: - #next: i358  <|@  <|@
f <@~|@floating>@ <|@
tid v367 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v367 
lastLocationAccess: - 
=== Succesors ===
next: v23 
=== Usages ===
i173 
=== Predecessor ===
i357 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v367 lastLocationAccess: - #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i358 
=== Succesors ===
=== Usages ===
i50 v36 v33 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i358  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i354 
y: i173 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i354 y: i173  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i356 
=== Succesors ===
=== Usages ===
i58 v33 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i356  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i357 
y: i185 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i357 y: i185  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 13]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i50 
y: i58 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i50 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i16 
y: i3 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i16 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2285) [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.02188337358368564
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i358 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v22 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v19 v21 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v19 v21 #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2286) [bci: 18]
stamp: void
=== Inputs ===
memoryMap: - 
result: i5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2288) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.startsWith(String.java:2293) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i185 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i173 y: i185  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2293) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v304 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v304 #falseSuccessor: v305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2294) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2294) [bci: 55]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 i43 i115 i140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.startsWith(String.java:2294) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i35 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i173 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2294) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v308 #falseSuccessor: v309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2294) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid j326 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
result int[-78611|0xfffffffffffecced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: -78611
stableDimension: 0
stamp: i32 [-78611]
stampKind: i32
value: int[-78611|0xfffffffffffecced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2297) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i67 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i357 y: i67  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.startsWith(String.java:2285) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a355 
=== Succesors ===
=== Usages ===
?100 ?96 j349 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a355  <|@  <|@
f <@~|@floating>@ <|@
tid a164 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a353 
=== Succesors ===
=== Usages ===
j347 ?96 ?100 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a353  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 v344 j318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:388) [bci: 7]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.9433460450053722
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v69 #falseSuccessor: v68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 10]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i354 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v283 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v283 #falseSuccessor: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: i359 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i359  <|@  <|@
f <@~|@floating>@ <|@
tid j248 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
result [v14|QWORD + v3|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j248 
index: a353 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i359 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v371 
lastLocationAccess: - 
=== Succesors ===
next: i360 
=== Usages ===
v249 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v371 lastLocationAccess: - #next: i360  <|@  <|@
f <@~|@floating>@ <|@
tid v372 <|@
result [v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a355 
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 15]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v372 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
v249 
=== Predecessor ===
i359 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v372 lastLocationAccess: - #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 16]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i359 
y: i360 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i359 y: i360  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 16]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.08747913188647746
stamp: void
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
i360 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v75 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 21]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: j347 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j347 <|@
result v16|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i64
=== Inputs ===
object: a164 
=== Succesors ===
next: j349 
=== Usages ===
j348 
=== Predecessor ===
v75 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a164 #next: j349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j349 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i64
=== Inputs ===
object: a177 
=== Succesors ===
next: i83 
=== Usages ===
j350 
=== Predecessor ===
j347 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a177 #next: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 21]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:391) [bci: 25]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i3 
y: i78 
=== Succesors ===
=== Usages ===
j80 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 38]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
j348 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i79  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
result v20|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i64
=== Inputs ===
x: j80 
y: j347 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j80 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j120 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 42]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
result v21|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i64
=== Inputs ===
x: j349 
y: j120 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j349 y: j120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i83 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at jdk.internal.util.ArraysSupport.vectorizedMismatch(Object, long, Object, long, int, int) [bci: -1]
at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:393) [bci: 48]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
runtimeCheckedCPUFeatures: [null]
stamp: i32
=== Inputs ===
lastLocationAccess: - 
arrayA: j348 
arrayB: j350 
length: i357 
stride: i5 
=== Succesors ===
next: v87 
=== Usages ===
v84 i124 i90 
=== Predecessor ===
j349 >@ <|@
instruction <@VectorizedMismatch|@jdk.graal.compiler.replacements.nodes.VectorizedMismatchNode>@ lastLocationAccess: - arrayA: j348 arrayB: j350 length: i357 stride: i5 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:397) [bci: 55]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i5 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i83 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:397) [bci: 55]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.6748091603053435
stamp: void
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
i83 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v86 #falseSuccessor: v85  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 61]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 66]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
value: i83 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@Not|@jdk.graal.compiler.nodes.calc.NotNode>@ value: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i91 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 67]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i357 
y: i90 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i357 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i95 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v93 
values: i5 i91 
=== Succesors ===
=== Usages ===
?96 i124 v129 i133 j254 i140 v217 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v93 values: i5 i91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 
=== Succesors ===
next: v132 
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i357 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i95 y: i357  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:399) [bci: 65]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i124 i124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.9349653035618263
stamp: void
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v130 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v131 #falseSuccessor: v130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 77]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 81]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i3 
y: i95 
=== Succesors ===
=== Usages ===
j252 v207 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i133 
y: i354 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i133 y: i354  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.startsWith(String, int)>
localsSize: 8
locksSize: 0
sourceFile: String.java
sourceLine: 2297
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?96 ?100 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v287 #falseSuccessor: v289  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i357 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i95 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v291 
falseSuccessor: v293 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v291 #falseSuccessor: v293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: i361 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i361  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i133 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
result [v26|DWORD + v3|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j252 
index: a353 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j252 index: a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i361 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v373 
lastLocationAccess: - 
=== Succesors ===
next: i362 
=== Usages ===
v253 
=== Predecessor ===
v291 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v373 lastLocationAccess: - #next: i362  <|@  <|@
f <@~|@floating>@ <|@
tid j254 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i95 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
result [v25|DWORD + v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j254 
index: a355 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j254 index: a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v374 
lastLocationAccess: - 
=== Succesors ===
next: v139 
=== Usages ===
v253 
=== Predecessor ===
i361 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v374 lastLocationAccess: - #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i361 
y: i362 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i361 y: i362  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.3842399743659264
stamp: void
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
i362 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v138 #falseSuccessor: v137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i95 
y: i35 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i95 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i158 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v98 
values: i140 i115 
=== Succesors ===
=== Usages ===
?100 v101 i106 j257 i124 i115 v237 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v98 values: i140 i115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 43
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v97 
=== Succesors ===
next: v105 
=== Usages ===
i158 v102 v110 v116 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v97 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i158 
y: i357 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i158 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 74]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v104 #falseSuccessor: v102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 77]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 81]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i3 
y: i158 
=== Succesors ===
=== Usages ===
j255 v227 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i354 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i106 y: i354  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v297 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v295 #falseSuccessor: v297  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i158 
y: i357 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i158 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v299 #falseSuccessor: v301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: i363 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i363  <|@  <|@
f <@~|@floating>@ <|@
tid j255 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i106 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i106  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
result [v30|DWORD + v3|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j255 
index: a353 
=== Succesors ===
=== Usages ===
i363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i363 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v375 
lastLocationAccess: - 
=== Succesors ===
next: i364 
=== Usages ===
v256 
=== Predecessor ===
v299 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v375 lastLocationAccess: - #next: i364  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i158 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
result [v29|DWORD + v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j257 
index: a355 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j257 index: a355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v376 
lastLocationAccess: - 
=== Succesors ===
next: v114 
=== Usages ===
v256 
=== Predecessor ===
i363 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v376 lastLocationAccess: - #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i363 
y: i364 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i363 y: i364  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 89]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
profileData: PROFILED designatedSuccessorProbability: 0.3842399743659264
stamp: void
=== Inputs ===
condition: v256 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
i364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v256 #trueSuccessor: v113 #falseSuccessor: v110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 95]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32
=== Inputs ===
x: i158 
y: i35 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i158 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
loopBegin: v98 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v98 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v98 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v98 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v98 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
result int[-60955|0xffffffffffff11e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: -60955
stableDimension: 0
stamp: i32 [-60955]
stampKind: i32
value: int[-60955|0xffffffffffff11e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result int[-58395|0xffffffffffff1be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: -58395
stableDimension: 0
stamp: i32 [-58395]
stampKind: i32
value: int[-58395|0xffffffffffff1be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
v297 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i342 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32 [-60955 - -58395] bits:1...10001x0x111100101
valueDescription: i32
=== Inputs ===
merge: v339 
values: i341 i346 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v339 values: i341 i346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v345 
=== Succesors ===
next: v344 
=== Usages ===
i342 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v345 #next: v344  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: iload
code: ResolvedJavaMethodBytecode<ArraysSupport.mismatch(byte[], int, byte[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: ArraysSupport.java
sourceLine: 401
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?121 
values: a164 i3 a177 i5 i357 i158 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?121 values: a164 i3 a177 i5 i357 i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateBefore: ?100 
actionAndReason: i342 
speculation: j316 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?100 actionAndReason: i342 speculation: j316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:403) [bci: 92]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v137 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 88]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
result int[-55835|0xffffffffffff25e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: -55835
stableDimension: 0
stamp: i32 [-55835]
stampKind: i32
value: int[-55835|0xffffffffffff25e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result int[-53275|0xffffffffffff2fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
rawvalue: -53275
stableDimension: 0
stamp: i32 [-53275]
stampKind: i32
value: int[-53275|0xffffffffffff2fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i334 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: i32 [-55835 - -53275] bits:1...10010x1x111100101
valueDescription: i32
=== Inputs ===
merge: v331 
values: i333 i338 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v331 values: i333 i338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v332 v337 
=== Succesors ===
next: v336 
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v332 v337 #next: v336  <|@  <|@
tid ?96 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: iload
code: ResolvedJavaMethodBytecode<ArraysSupport.mismatch(byte[], int, byte[], int, int)>
localsSize: 8
locksSize: 0
sourceFile: ArraysSupport.java
sourceLine: 401
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?121 
values: a164 i3 a177 i5 i357 i95 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?121 values: a164 i3 a177 i5 i357 i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:402) [bci: 82]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
stateBefore: ?96 
actionAndReason: i334 
speculation: j316 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?96 actionAndReason: i334 speculation: j316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:405) [bci: 101]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:398) [bci: 58]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v85 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:390) [bci: 19]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i124 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v122 
values: i5 i83 i158 i89 i95 i89 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v122 values: i5 i83 i158 i89 i95 i89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v123 v125 v126 v127 v159 v160 
=== Succesors ===
next: v45 
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v123 v125 v126 v127 v159 v160 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.startsWith(String.java:2297) [bci: 73]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i5 
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i124 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2297) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v42 
trueValue: i35 
falseValue: i5 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v42 trueValue: i35 falseValue: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.startsWith(String.java:2297) [bci: 81]
stamp: void
=== Inputs ===
memoryMap: - 
result: i43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:389) [bci: 12]
at java.lang.String.startsWith(String.java:2297) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
result int[-48155|0xffffffffffff43e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: -48155
stableDimension: 0
stamp: i32 [-48155]
stampKind: i32
value: int[-48155|0xffffffffffff43e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.startsWith(String.java:2293) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid j161 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result int[-77587|0xfffffffffffed0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
rawvalue: -77587
stableDimension: 0
stamp: i32 [-77587]
stampKind: i32
value: int[-77587|0xfffffffffffed0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
v305 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i317 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: i32 [-78611 - -48155] bits:1...1xx10xxxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v313 
values: i325 i328 i330 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v313 values: i325 i328 i330  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: i64 [0 - 660] bits:0...0x0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v313 
values: j326 j161 j316 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v313 values: j326 j161 j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v324 v327 v329 
=== Succesors ===
next: v319 
=== Usages ===
i317 j318 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v324 v327 v329 #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.startsWith(String.java:2285) [bci: 6]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i317 
speculation: j318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i317 speculation: j318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  146  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  226  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  358  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  484  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  498  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  590  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  654  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  146  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  226  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  358  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  484  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  496  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  498  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  590  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  654  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v36|d [0, 1[[386, 388[[428, 430[[496, 498[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v8|d [0, 28[[76, 79[[80, 83[[492, 497[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v21|q [0, 26[[490, 497[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v20|q [0, 24[[488, 497[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 1[[494, 496[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [24, 136[[316, 328[[550, 560[[570, 580[[644, 675[24 MustHaveRegister 64 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [26, 136[[316, 328[[550, 560[[570, 580[[644, 675[26 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [28, 202[[212, 296[[316, 348[[432, 520[[540, 611[[612, 643[[644, 675[28 MustHaveRegister 30 MustHaveRegister 86 MustHaveRegister 170 ShouldHaveRegister 250 ShouldHaveRegister 295 LiveAtLoopEnd 326 ShouldHaveRegister 342 ShouldHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [64, 202[[212, 296[[316, 348[[432, 520[64 MustHaveRegister 66 MustHaveRegister 132 MustHaveRegister 198 MustHaveRegister 278 MustHaveRegister 295 LiveAtLoopEnd 344 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [66, 202[[212, 296[[316, 348[[432, 520[66 MustHaveRegister 78 ShouldHaveRegister 172 MustHaveRegister 252 MustHaveRegister 295 LiveAtLoopEnd 326 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [68, 202[[212, 296[[316, 348[[432, 520[68 MustHaveRegister 72 MustHaveRegister 130 MustHaveRegister 200 MustHaveRegister 280 MustHaveRegister 295 LiveAtLoopEnd 346 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [70, 98[70 MustHaveRegister 80 ShouldHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [72, 202[[212, 296[[316, 348[[432, 520[[540, 550[[560, 570[[580, 611[[612, 643[72 MustHaveRegister 82 ShouldHaveRegister 134 ShouldHaveRegister 156 MustHaveRegister 184 MustHaveRegister 236 MustHaveRegister 264 MustHaveRegister 295 LiveAtLoopEnd 492 ShouldHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [74, 110[74 MustHaveRegister 76 ShouldHaveRegister 98 ShouldHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v4|d [78, 84[78 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v7|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v9|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v5|d [130, 202[[212, 296[[316, 348[[432, 520[[540, 550[[560, 570[[580, 611[[612, 643[130 MustHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v3|d [132, 202[[212, 296[[316, 348[[432, 520[[540, 550[[560, 570[[580, 611[[612, 643[132 MustHaveRegister 476 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v13|q [476, 484[476 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v12|q [478, 486[478 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [480, 482[480 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [482, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v19|q [484, 488[484 MustHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [486, 490[486 MustHaveRegister 490 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d rax|d [498, 514[[530, 539[498 MustHaveRegister 500 MustHaveRegister 514 ShouldHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v22|d [514, 517[514 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v7|d [516, 519[516 MustHaveRegister 518 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v24|d [146, 211[[212, 222[[540, 550[[580, 611[156 ShouldHaveRegister 170 ShouldHaveRegister 184 ShouldHaveRegister 200 MustHaveRegister 210 ShouldHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v25|d [170, 198[170 MustHaveRegister 172 ShouldHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v25|d [222, 225[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v28|d [226, 292[[520, 529[[560, 570[[612, 643[236 ShouldHaveRegister 250 ShouldHaveRegister 264 ShouldHaveRegister 280 MustHaveRegister 292 ShouldHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v29|d [250, 278[250 MustHaveRegister 252 ShouldHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v29|d [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [622, 638[638 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [590, 606[606 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v25|d [358, 382[382 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [384, 386[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [654, 670[670 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [654, 672[672 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v36|d [0, 1[[386, 388[[428, 430[[496, 498[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v8|d [0, 28[[76, 79[[80, 83[[492, 497[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v21|q [0, 26[[490, 497[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v20|q [0, 24[[488, 497[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 1[[494, 496[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 136[[316, 328[[550, 560[[570, 580[[644, 675[24 MustHaveRegister 64 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [26, 136[[316, 328[[550, 560[[570, 580[[644, 675[26 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r9|d]" v2|d rcx|- [28, 202[[212, 296[[316, 348[[432, 495[28 MustHaveRegister 30 MustHaveRegister 86 MustHaveRegister 170 ShouldHaveRegister 250 ShouldHaveRegister 295 LiveAtLoopEnd 326 ShouldHaveRegister 342 ShouldHaveRegister 480 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[rbx|d]" v3|d -1 [64, 202[[212, 296[[316, 348[[432, 520[64 MustHaveRegister 66 MustHaveRegister 132 MustHaveRegister 198 MustHaveRegister 278 MustHaveRegister 295 LiveAtLoopEnd 344 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbp|d]" v4|d -1 [66, 202[[212, 296[[316, 348[[432, 520[66 MustHaveRegister 78 ShouldHaveRegister 172 MustHaveRegister 252 MustHaveRegister 295 LiveAtLoopEnd 326 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r13|d]" v5|d -1 [68, 202[[212, 296[[316, 348[[432, 520[68 MustHaveRegister 72 MustHaveRegister 130 MustHaveRegister 200 MustHaveRegister 280 MustHaveRegister 295 LiveAtLoopEnd 346 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [70, 98[70 MustHaveRegister 80 ShouldHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r14|d]" v7|d -1 [72, 202[[212, 296[[316, 348[[432, 520[[540, 550[[560, 570[[580, 611[[612, 643[72 MustHaveRegister 82 ShouldHaveRegister 134 ShouldHaveRegister 156 MustHaveRegister 184 MustHaveRegister 236 MustHaveRegister 264 MustHaveRegister 295 LiveAtLoopEnd 492 ShouldHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [74, 110[74 MustHaveRegister 76 ShouldHaveRegister 98 ShouldHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d v4|d [78, 84[78 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d v7|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d v9|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q v5|d [130, 202[[212, 296[[316, 348[[432, 495[130 MustHaveRegister 478 ShouldHaveRegister  "OneSpillStore"
  v13|q QWORD "[r11|q]" v13|q v3|d [132, 202[[212, 296[[316, 348[[432, 495[132 MustHaveRegister 476 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v13|q [476, 484[476 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v12|q [478, 486[478 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d -1 [480, 482[480 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [482, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q v19|q [484, 488[484 MustHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q -1 [486, 490[486 MustHaveRegister 490 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d rax|d [498, 514[[530, 539[498 MustHaveRegister 500 MustHaveRegister 514 ShouldHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [514, 517[514 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d v7|d [516, 519[516 MustHaveRegister 518 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v24|d [146, 211[[212, 222[[540, 550[[580, 611[156 ShouldHaveRegister 170 ShouldHaveRegister 184 ShouldHaveRegister 200 MustHaveRegister 210 ShouldHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v25|d [170, 198[170 MustHaveRegister 172 ShouldHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d v25|d [222, 225[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v28|d [226, 292[[520, 529[[560, 570[[612, 643[236 ShouldHaveRegister 250 ShouldHaveRegister 264 ShouldHaveRegister 280 MustHaveRegister 292 ShouldHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d v29|d [250, 278[250 MustHaveRegister 252 ShouldHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d v29|d [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r10|d]" v33|d -1 [622, 638[638 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [590, 606[606 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d v25|d [358, 382[382 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [384, 386[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [654, 670[670 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [654, 672[672 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[vstack:1|q]" v12|q v12|q [495, 520[[540, 550[[560, 570[[580, 611[[612, 622[ "OneSpillStore"
  v40|q QWORD "[r9|q]" v13|q v13|q [495, 520[[540, 550[[560, 570[[580, 611[[612, 622[ "NoSpillStore"
  v41|q QWORD "[r9|q]" v13|q v13|q [622, 643[ "NoSpillStore"
  v42|d DWORD "[r9|d]" v2|d v2|d [654, 675[ "OneSpillStore"
  v43|d DWORD "[vstack:0|d]" v2|d v2|d [495, 520[[540, 611[[612, 643[[644, 654[ "OneSpillStore"
  v44|q QWORD "[r11|q]" v12|q v12|q [622, 643[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  146  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  226  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  358  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  484  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  498  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  590  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  654  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v36|d [0, 1[[386, 388[[428, 430[[496, 498[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v8|d [0, 28[[76, 79[[80, 83[[492, 497[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v21|q [0, 26[[490, 497[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v20|q [0, 24[[488, 497[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 1[[494, 496[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 136[[316, 328[[550, 560[[570, 580[[644, 675[24 MustHaveRegister 64 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [26, 136[[316, 328[[550, 560[[570, 580[[644, 675[26 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r9|d]" v2|d rcx|- [28, 202[[212, 296[[316, 348[[432, 495[28 MustHaveRegister 30 MustHaveRegister 86 MustHaveRegister 170 ShouldHaveRegister 250 ShouldHaveRegister 295 LiveAtLoopEnd 326 ShouldHaveRegister 342 ShouldHaveRegister 480 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[rbx|d]" v3|d -1 [64, 202[[212, 296[[316, 348[[432, 520[64 MustHaveRegister 66 MustHaveRegister 132 MustHaveRegister 198 MustHaveRegister 278 MustHaveRegister 295 LiveAtLoopEnd 344 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbp|d]" v4|d -1 [66, 202[[212, 296[[316, 348[[432, 520[66 MustHaveRegister 78 ShouldHaveRegister 172 MustHaveRegister 252 MustHaveRegister 295 LiveAtLoopEnd 326 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r13|d]" v5|d -1 [68, 202[[212, 296[[316, 348[[432, 520[68 MustHaveRegister 72 MustHaveRegister 130 MustHaveRegister 200 MustHaveRegister 280 MustHaveRegister 295 LiveAtLoopEnd 346 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [70, 98[70 MustHaveRegister 80 ShouldHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r14|d]" v7|d -1 [72, 202[[212, 296[[316, 348[[432, 520[[540, 550[[560, 570[[580, 611[[612, 643[72 MustHaveRegister 82 ShouldHaveRegister 134 ShouldHaveRegister 156 MustHaveRegister 184 MustHaveRegister 236 MustHaveRegister 264 MustHaveRegister 295 LiveAtLoopEnd 492 ShouldHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [74, 110[74 MustHaveRegister 76 ShouldHaveRegister 98 ShouldHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d v4|d [78, 84[78 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d v7|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d v9|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q v5|d [130, 202[[212, 296[[316, 348[[432, 495[130 MustHaveRegister 478 ShouldHaveRegister  "OneSpillStore"
  v13|q QWORD "[r11|q]" v13|q v3|d [132, 202[[212, 296[[316, 348[[432, 495[132 MustHaveRegister 476 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v13|q [476, 484[476 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v12|q [478, 486[478 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d -1 [480, 482[480 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [482, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q v19|q [484, 488[484 MustHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q -1 [486, 490[486 MustHaveRegister 490 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d rax|d [498, 514[[530, 539[498 MustHaveRegister 500 MustHaveRegister 514 ShouldHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [514, 517[514 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d v7|d [516, 519[516 MustHaveRegister 518 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v24|d [146, 211[[212, 222[[540, 550[[580, 611[156 ShouldHaveRegister 170 ShouldHaveRegister 184 ShouldHaveRegister 200 MustHaveRegister 210 ShouldHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v25|d [170, 198[170 MustHaveRegister 172 ShouldHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d v25|d [222, 225[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v28|d [226, 292[[520, 529[[560, 570[[612, 643[236 ShouldHaveRegister 250 ShouldHaveRegister 264 ShouldHaveRegister 280 MustHaveRegister 292 ShouldHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d v29|d [250, 278[250 MustHaveRegister 252 ShouldHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d v29|d [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r10|d]" v33|d -1 [622, 638[638 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [590, 606[606 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d v25|d [358, 382[382 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [384, 386[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [654, 670[670 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [654, 672[672 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[vstack:1|q]" v12|q v12|q [495, 520[[540, 550[[560, 570[[580, 611[[612, 622[ "OneSpillStore"
  v40|q QWORD "[r9|q]" v13|q v13|q [495, 520[[540, 550[[560, 570[[580, 611[[612, 622[ "NoSpillStore"
  v41|q QWORD "[r9|q]" v13|q v13|q [622, 643[ "NoSpillStore"
  v42|d DWORD "[r9|d]" v2|d v2|d [654, 675[ "OneSpillStore"
  v43|d DWORD "[vstack:0|d]" v2|d v2|d [495, 520[[540, 611[[612, 643[[644, 654[ "OneSpillStore"
  v44|q QWORD "[r11|q]" v12|q v12|q [622, 643[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  146  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  226  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  358  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  484  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  498  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [int[-53275|0xffffffffffff2fe5]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [int[-77587|0xfffffffffffed0ed], long[20|0x14]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [int[-60955|0xffffffffffff11e5]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [int[-78611|0xfffffffffffecced], long[660|0x294]] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [int[-55835|0xffffffffffff25e5]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  590  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [int[-58395|0xffffffffffff1be5]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [int[-48155|0xffffffffffff43e5], long[0|0x0]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  654  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v36|d [0, 1[[386, 388[[428, 430[[496, 498[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v8|d [0, 28[[76, 79[[80, 83[[492, 497[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v21|q [0, 26[[490, 497[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v20|q [0, 24[[488, 497[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d -1 [0, 1[[494, 496[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[496, 497[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [24, 136[[316, 328[[550, 560[[570, 580[[644, 675[24 MustHaveRegister 64 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [26, 136[[316, 328[[550, 560[[570, 580[[644, 675[26 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r9|d]" v2|d rcx|- [28, 202[[212, 296[[316, 348[[432, 495[28 MustHaveRegister 30 MustHaveRegister 86 MustHaveRegister 170 ShouldHaveRegister 250 ShouldHaveRegister 295 LiveAtLoopEnd 326 ShouldHaveRegister 342 ShouldHaveRegister 480 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[rbx|d]" v3|d -1 [64, 202[[212, 296[[316, 348[[432, 520[64 MustHaveRegister 66 MustHaveRegister 132 MustHaveRegister 198 MustHaveRegister 278 MustHaveRegister 295 LiveAtLoopEnd 344 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbp|d]" v4|d -1 [66, 202[[212, 296[[316, 348[[432, 520[66 MustHaveRegister 78 ShouldHaveRegister 172 MustHaveRegister 252 MustHaveRegister 295 LiveAtLoopEnd 326 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r13|d]" v5|d -1 [68, 202[[212, 296[[316, 348[[432, 520[68 MustHaveRegister 72 MustHaveRegister 130 MustHaveRegister 200 MustHaveRegister 280 MustHaveRegister 295 LiveAtLoopEnd 346 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [70, 98[70 MustHaveRegister 80 ShouldHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r14|d]" v7|d -1 [72, 202[[212, 296[[316, 348[[432, 520[[540, 550[[560, 570[[580, 611[[612, 643[72 MustHaveRegister 82 ShouldHaveRegister 134 ShouldHaveRegister 156 MustHaveRegister 184 MustHaveRegister 236 MustHaveRegister 264 MustHaveRegister 295 LiveAtLoopEnd 492 ShouldHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [74, 110[74 MustHaveRegister 76 ShouldHaveRegister 98 ShouldHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d v4|d [78, 84[78 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d v7|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d v9|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r10|q]" v12|q v5|d [130, 202[[212, 296[[316, 348[[432, 495[130 MustHaveRegister 478 ShouldHaveRegister  "OneSpillStore"
  v13|q QWORD "[r11|q]" v13|q v3|d [132, 202[[212, 296[[316, 348[[432, 495[132 MustHaveRegister 476 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v13|q [476, 484[476 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v12|q [478, 486[478 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d -1 [480, 482[480 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [482, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q v19|q [484, 488[484 MustHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q -1 [486, 490[486 MustHaveRegister 490 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d rax|d [498, 514[[530, 539[498 MustHaveRegister 500 MustHaveRegister 514 ShouldHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [514, 517[514 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d v7|d [516, 519[516 MustHaveRegister 518 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v24|d [146, 211[[212, 222[[540, 550[[580, 611[156 ShouldHaveRegister 170 ShouldHaveRegister 184 ShouldHaveRegister 200 MustHaveRegister 210 ShouldHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v25|d [170, 198[170 MustHaveRegister 172 ShouldHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d v25|d [222, 225[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v28|d [226, 292[[520, 529[[560, 570[[612, 643[236 ShouldHaveRegister 250 ShouldHaveRegister 264 ShouldHaveRegister 280 MustHaveRegister 292 ShouldHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d v29|d [250, 278[250 MustHaveRegister 252 ShouldHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d v29|d [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r10|d]" v33|d -1 [622, 638[638 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [590, 606[606 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d v25|d [358, 382[382 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [384, 386[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [654, 670[670 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [654, 672[672 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[vstack:1|q]" v12|q v12|q [495, 520[[540, 550[[560, 570[[580, 611[[612, 622[ "OneSpillStore"
  v40|q QWORD "[r9|q]" v13|q v13|q [495, 520[[540, 550[[560, 570[[580, 611[[612, 622[ "NoSpillStore"
  v41|q QWORD "[r9|q]" v13|q v13|q [622, 643[ "NoSpillStore"
  v42|d DWORD "[r9|d]" v2|d v2|d [654, 675[ "OneSpillStore"
  v43|d DWORD "[vstack:0|d]" v2|d v2|d [495, 520[[540, 611[[612, 643[[644, 654[ "OneSpillStore"
  v44|q QWORD "[r11|q]" v12|q v12|q [622, 643[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  146  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  226  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  358  <|@ instruction [v35|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  484  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  498  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-78611|0xfffffffffffecced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  590  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [v33|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  654  <|@ instruction [v37|DWORD, v38|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction v7|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction v8|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v9|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v10|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v11|DWORD = SUB (x: v9|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v11|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: v8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v26|DWORD = ADD (x: v25|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v26|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v25|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction v27|DWORD = MOVSXB input: [v26|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v27|DWORD, y: [v25|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v28|DWORD = INC value: v25|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = ADD (x: v29|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction v31|DWORD = MOVSXB input: [v30|DWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v29|DWORD + v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v32|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v14|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v15|DWORD = MOVSXB input: [v14|QWORD + v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v15|DWORD, y: [v5|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v36|DWORD = SETCC condition: < <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: v36|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v16|QWORD[*] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v17|QWORD[*] = MOVE input: v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v18|DWORD = LEA address: [v2|DWORD + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction v19|QWORD = MOVSXD value: v18|DWORD size: QWORD <|@ <|@
      nr  484  <|@ instruction v20|QWORD[*] = ADD (x: v19|QWORD, y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  486  <|@ instruction v21|QWORD[*] = LEA address: [v17|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD[*] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD[*] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  498  <|@ instruction v22|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v23|DWORD = NOT value: v22|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction v24|DWORD = SUB (x: v7|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-78611|0xfffffffffffecced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v34|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v25|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: v13|QWORD[.] v2|DWORD v12|QWORD[.] int[0|0x0] v7|DWORD v29|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: v43|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v38|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] vstack:0|DWORD vstack:1|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] vstack:0|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  430  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  482  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] vstack:0|DWORD vstack:1|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] vstack:0|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  726  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  164  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] vstack:0|DWORD vstack:1|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] vstack:0|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction vstack:0|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  708  <|@ instruction r9|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [152, 726[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [300, 626[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [152, 726[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:40|q]" vstack:1|q -1 [300, 626[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  726  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  164  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  708  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  726  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  164  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  708  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  164  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0]
live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0]
live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r13:0]
live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@reference-map: [r9:0, stack:8]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@reference-map: [r9:0, r11:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4606901138177509391
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0]
live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0]
live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r13:0]
live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B38" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4606710185640219394
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  188  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606226646055195821
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" "B33" 
    xhandlers
    flags 
    probability 4606255190228361820
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B31" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B30" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B29" 
    xhandlers
    flags 
    probability 4605729711787758018
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602826973882159298
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B24" "B25" "B29" "B33" 
    successors 
    xhandlers
    flags 
    probability 4606710185640219395
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction rax|DWORD = SETCC condition: < <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4599477095729103361
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569606094606734770
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4563375431316861331
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B23" 
    successors "B20" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4599499488730735859
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599441210042607560
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 4588568476085455271
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r8|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B37" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B35" 
    xhandlers
    flags 
    probability 4587897454396171607
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rax|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  232  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B36" 
    xhandlers
    flags 
    probability 4587220660426081851
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4584658201328680479
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 4587716551592562662
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4581767702601703853
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B34" 
    xhandlers
    flags 
    probability 4572064373914400994
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  308  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4569453730856808259
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 4566739790397775080
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B36" 
    xhandlers
    flags 
    probability 4564685613280822529
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5] <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  626  <|@ st <@st|@reference-map: [r9:0, stack:8]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD stack:40|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed] <|@ <|@
      nr  728  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B7" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.startsWith(String.java:2285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5] // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  534  <|@ instruction r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@reference-map: [r9:0, r11:0]
live-base-pointers: []
jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70]
locals: r9|QWORD[.] stack:28|DWORD r11|QWORD[.] int[0|0x0] r14|DWORD r8|DWORD - - 
java.lang.String.startsWith(String.java:2297) [bci: 70]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:70, 70] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  166  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5] <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5] <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5] <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iflt          17
     4: iload_2       
     5: aload_0       
     6: invokevirtual #127        // length:()int
     9: aload_1       
    10: invokevirtual #127        // length:()int
    13: isub          
    14: if_icmple     19
    17: iconst_0      
    18: ireturn       
    19: aload_0       
    20: getfield      #1          // value:byte[]
    23: astore_3      
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: astore        4
    30: iconst_0      
    31: istore        5
    33: aload         4
    35: arraylength   
    36: istore        6
    38: aload_0       
    39: invokevirtual #77         // coder:()byte
    42: istore        7
    44: iload         7
    46: aload_1       
    47: invokevirtual #77         // coder:()byte
    50: if_icmpne     82
    53: iload         7
    55: iconst_1      
    56: if_icmpne     63
    59: iload_2       
    60: iconst_1      
    61: ishl          
    62: istore_2      
    63: aload_3       
    64: iload_2       
    65: aload         4
    67: iconst_0      
    68: iload         6
    70: invokestatic  #158        // jdk.internal.util.ArraysSupport.mismatch:(byte[], int, byte[], int, int)int
    73: ifge          80
    76: iconst_1      
    77: goto          81
    80: iconst_0      
    81: ireturn       
    82: iload         7
    84: ifne          89
    87: iconst_0      
    88: ireturn       
    89: iload         5
    91: iload         6
    93: if_icmpge     121
    96: aload_3       
    97: iload_2       
    98: iinc          
   101: invokestatic  #84         // java.lang.StringUTF16.getChar:(byte[], int)char
   104: aload         4
   106: iload         5
   108: iinc          
   111: baload        
   112: sipush        255
   115: iand          
   116: if_icmpeq     89
   119: iconst_0      
   120: ireturn       
   121: iconst_1      
   122: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec289041817f20000000000f85a903000090909090909090909048896c2420448bc94585c90f8cc40100009090909090909090909090909090908b5e148b2cdd0c000000448b6a140fbe4210468b34ed0c000000440fbe4610418bc8448bd541d3ea8bc8458bde41d3eb452bd3453bca0f8fa301000090909090413bc00f855b020000909090904183f8010f84c50200009090909090909090458bd549c1e203448bdb49c1e3034183fe080f830701000090909041b80000000090909090453bf00f8ee30000009090909090418bc04103c13be80f86c801000090909090453bf00f868602000090909090900fbe44d810433a44e8100f843100000090909090909090909090909090904585c00f9cc00fb6c0488b6c24204883c428493ba7500400000f87a1020000c5f877c39090909041ffc0e95a0000006666660f1f840000000000666666906666660f1f840000000000666666909090909090418bc04103c13be80f861e02000090909090453bf00f869e01000090909090900fbe44d810433a44e8100f85030100009090909041ffc090909090453bf07fbb90909041b8ffffffffe955ffffff90909041b8ffffffffe947ffffff90909090413be90f86db010000909090909090418bc10fbe44d810423a04ed100000000f843d00000090909041b800000000e910ffffff9090909090909090909090b800000000488b6c24204883c428493ba7500400000f87c9010000c5f877c3909090ebd4909090909090909090909090909090909090909090498bf3498bd2418d49104863c94803ce488d5210488bf1418bce41b8000000004c8954240844894c24144d8bcbe80000000085c00f8d2a0000009090909090f7d0458bd6442bd0458bc24d8bd94c8b542408448b4c2414e92bfeffff909090e968feffff909090448bc0e95dfeffff4c8954240844894c24144d8bcb90909041bae52fffff909090909090904589978404000049c7879004000000000000e8000000000f1f84000000000044894c241490909049c7c31400000041baedd0feff90909090909090458997840400004d899f90040000e8000000000f1f8400000000004c8954240844894c24144d8bcb90909041bae511ffff4c8b5c2408909090909090904589978404000049c7879004000000000000e8000000000f1f84000000000044894c241490909049c7c39402000041baedccfeffeb864c8954240844894c24144d8bcb90909041bae525ffffe930ffffff4c8954240844894c24144d8bcb90909041bae51bffffeb8b44894c241490909049c7c30000000041bae543ffffe939ffffff48896c2420e800000000e948fcfffff4488d0d4bfdffff49898f68040000e9fafbfffff4488d0d23feffff49898f68040000e9e6fbfffff441c78784040000f559ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f551ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f54cffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD  <||@
  Comment 72 24 r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 75 26 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 84 block B2 null  <||@
  Comment 84 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 84 40 NOP  <||@
  Comment 85 42 NOP  <||@
  Comment 86 44 NOP  <||@
  Comment 87 46 NOP  <||@
  Comment 88 48 NOP  <||@
  Comment 89 50 NOP  <||@
  Comment 90 52 NOP  <||@
  Comment 91 54 NOP  <||@
  Comment 92 56 NOP  <||@
  Comment 93 58 NOP  <||@
  Comment 94 60 NOP  <||@
  Comment 95 62 NOP  <||@
  Comment 96 64 NOP  <||@
  Comment 97 66 NOP  <||@
  Comment 98 68 NOP  <||@
  Comment 99 70 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 102 72 rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 102 [rdx:0, rbx:0, rsi:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 102 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 109 74 r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 109 [rdx:0, rbx:0, rsi:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 109 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 113 76 rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 117 78 r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 117 [rdx:0, rbx:0, rsi:0, r13:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 117 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 125 80 r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 130 82 rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 133 84 r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 139 86 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 141 88 r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 147 90 r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 150 92 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD  <||@
  Comment 159 block B5 null  <||@
  Comment 159 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 159 128 NOP  <||@
  Comment 160 130 NOP  <||@
  Comment 161 132 NOP  <||@
  Comment 162 134 NOP  <||@
  Comment 163 136 CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD  <||@
  Comment 172 block B6 null  <||@
  Comment 172 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 140 NOP  <||@
  Comment 173 142 NOP  <||@
  Comment 174 144 NOP  <||@
  Comment 175 146 NOP  <||@
  Comment 176 148 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null  <||@
  Comment 186 block B8 null  <||@
  Comment 186 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 186 170 NOP  <||@
  Comment 187 172 NOP  <||@
  Comment 188 174 NOP  <||@
  Comment 189 176 NOP  <||@
  Comment 190 178 NOP  <||@
  Comment 191 180 NOP  <||@
  Comment 192 182 NOP  <||@
  Comment 193 184 NOP  <||@
  Comment 194 186 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3  <||@
  Comment 201 188 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3  <||@
  Comment 208 190 CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null  <||@
  Comment 218 block B9 null  <||@
  Comment 218 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 218 194 NOP  <||@
  Comment 219 196 NOP  <||@
  Comment 220 198 NOP  <||@
  Comment 221 200 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 227 202 JUMP ~outgoingValues: [] destination: B9 -> B14  <||@
  Comment 227 block B14 null  <||@
  Comment 227 336 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 227 338 NOP  <||@
  Comment 228 340 NOP  <||@
  Comment 229 342 NOP  <||@
  Comment 230 344 NOP  <||@
  Comment 231 346 CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD  <||@
  Comment 240 block B15 null  <||@
  Comment 240 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 240 350 NOP  <||@
  Comment 241 352 NOP  <||@
  Comment 242 354 NOP  <||@
  Comment 243 356 NOP  <||@
  Comment 244 358 NOP  <||@
  Comment 245 360 rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 251 362 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD  <||@
  Comment 259 block B16 null  <||@
  Comment 259 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 366 NOP  <||@
  Comment 260 368 NOP  <||@
  Comment 261 370 NOP  <||@
  Comment 262 372 NOP  <||@
  Comment 263 374 CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD  <||@
  Comment 272 block B17 null  <||@
  Comment 272 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 272 378 NOP  <||@
  Comment 273 380 NOP  <||@
  Comment 274 382 NOP  <||@
  Comment 275 384 NOP  <||@
  Comment 276 386 NOP  <||@
  Comment 277 388 rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 282 390 CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE  <||@
  Comment 293 block B29 null  <||@
  Comment 293 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 293 562 NOP  <||@
  Comment 294 564 NOP  <||@
  Comment 295 566 NOP  <||@
  Comment 296 568 JUMP ~outgoingValues: [] destination: B29 -> B36  <||@
  Comment 296 block B36 null  <||@
  Comment 296 664 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 296 666 NOP  <||@
  Comment 297 668 NOP  <||@
  Comment 298 670 NOP  <||@
  Comment 299 672 NOP  <||@
  Comment 300 674 NOP  <||@
  Comment 301 676 NOP  <||@
  Comment 302 678 NOP  <||@
  Comment 303 680 NOP  <||@
  Comment 304 682 NOP  <||@
  Comment 305 684 NOP  <||@
  Comment 306 686 NOP  <||@
  Comment 307 688 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 310 690 rax|DWORD = SETCC condition: <  <||@
  Comment 316 692 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 325 POLL_RETURN_FAR  <||@
  Comment 342 block B18 null  <||@
  Comment 342 392 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 342 394 NOP  <||@
  Comment 343 396 NOP  <||@
  Comment 344 398 NOP  <||@
  Comment 345 400 NOP  <||@
  Comment 346 402 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 349 404 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 354 block B20 loop 0 depth 1 header:98|LoopBegin  <||@
  Comment 354 418 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 420 NOP  <||@
  Comment 385 422 NOP  <||@
  Comment 386 424 NOP  <||@
  Comment 387 426 NOP  <||@
  Comment 388 428 NOP  <||@
  Comment 389 430 rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 395 432 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD  <||@
  Comment 403 block B21 loop 0 depth 1 header:98|LoopBegin  <||@
  Comment 403 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 403 436 NOP  <||@
  Comment 404 438 NOP  <||@
  Comment 405 440 NOP  <||@
  Comment 406 442 NOP  <||@
  Comment 407 444 CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD  <||@
  Comment 416 block B22 loop 0 depth 1 header:98|LoopBegin  <||@
  Comment 416 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 416 448 NOP  <||@
  Comment 417 450 NOP  <||@
  Comment 418 452 NOP  <||@
  Comment 419 454 NOP  <||@
  Comment 420 456 NOP  <||@
  Comment 421 458 rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 426 460 CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE  <||@
  Comment 437 block B23 loop 0 depth 1 header:98|LoopBegin  <||@
  Comment 437 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 437 464 NOP  <||@
  Comment 438 466 NOP  <||@
  Comment 439 468 NOP  <||@
  Comment 440 470 NOP  <||@
  Comment 441 472 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 444 474 JUMP ~outgoingValues: [] destination: B23 -> B19  <||@
  Comment 444 block B19 loop 0 depth 1 header:98|LoopBegin  <||@
  Comment 444 406 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 444 408 NOP  <||@
  Comment 445 410 NOP  <||@
  Comment 446 412 NOP  <||@
  Comment 447 414 NOP  <||@
  Comment 448 416 CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD  <||@
  Comment 453 block B25 null  <||@
  Comment 453 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 453 488 NOP  <||@
  Comment 454 490 NOP  <||@
  Comment 455 492 NOP  <||@
  Comment 456 494 r8|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 462 496 JUMP ~outgoingValues: [] destination: B25 -> B36  <||@
  Comment 467 block B33 null  <||@
  Comment 467 628 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 467 630 NOP  <||@
  Comment 468 632 NOP  <||@
  Comment 469 634 NOP  <||@
  Comment 470 636 r8|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 476 638 JUMP ~outgoingValues: [] destination: B33 -> B36  <||@
  Comment 481 block B10 null  <||@
  Comment 481 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 481 206 NOP  <||@
  Comment 482 208 NOP  <||@
  Comment 483 210 NOP  <||@
  Comment 484 212 NOP  <||@
  Comment 485 214 CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD  <||@
  Comment 494 block B11 null  <||@
  Comment 494 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 494 218 NOP  <||@
  Comment 495 220 NOP  <||@
  Comment 496 222 NOP  <||@
  Comment 497 224 NOP  <||@
  Comment 498 226 NOP  <||@
  Comment 499 228 NOP  <||@
  Comment 500 230 rax|QWORD = MOV value: r9|DWORD size: DWORD  <||@
  Comment 503 232 rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 508 234 CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE  <||@
  Comment 522 block B35 null  <||@
  Comment 522 652 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 522 654 NOP  <||@
  Comment 523 656 NOP  <||@
  Comment 524 658 NOP  <||@
  Comment 525 660 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 531 662 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 536 block B1 null  <||@
  Comment 536 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 536 30 NOP  <||@
  Comment 537 32 NOP  <||@
  Comment 538 34 NOP  <||@
  Comment 539 36 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 539 block B4 null  <||@
  Comment 539 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 539 106 NOP  <||@
  Comment 540 108 NOP  <||@
  Comment 541 110 NOP  <||@
  Comment 542 112 NOP  <||@
  Comment 543 114 NOP  <||@
  Comment 544 116 NOP  <||@
  Comment 545 118 NOP  <||@
  Comment 546 120 NOP  <||@
  Comment 547 122 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 552 124 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 561 POLL_RETURN_FAR  <||@
  Comment 578 block B3 null  <||@
  Comment 578 94 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 578 96 NOP  <||@
  Comment 579 98 NOP  <||@
  Comment 580 100 NOP  <||@
  Comment 581 102 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 583 block B12 null  <||@
  Comment 583 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 583 238 NOP  <||@
  Comment 584 240 NOP  <||@
  Comment 585 242 NOP  <||@
  Comment 586 244 NOP  <||@
  Comment 587 246 NOP  <||@
  Comment 588 248 NOP  <||@
  Comment 589 250 NOP  <||@
  Comment 590 252 NOP  <||@
  Comment 591 254 NOP  <||@
  Comment 592 256 NOP  <||@
  Comment 593 258 NOP  <||@
  Comment 594 260 NOP  <||@
  Comment 595 262 NOP  <||@
  Comment 596 264 NOP  <||@
  Comment 597 266 NOP  <||@
  Comment 598 268 NOP  <||@
  Comment 599 270 NOP  <||@
  Comment 600 272 NOP  <||@
  Comment 601 274 NOP  <||@
  Comment 602 276 NOP  <||@
  Comment 603 278 NOP  <||@
  Comment 604 280 rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 607 282 rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 610 284 rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD  <||@
  Comment 614 286 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 617 288 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 620 290 rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 624 292 rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 627 294 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 627 296 rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 630 298 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 636 300 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 641 302 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 646 304 r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 649 306 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL  <||@
  Comment 649 {Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 654 308 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD  <||@
  Comment 662 block B13 null  <||@
  Comment 662 310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 662 312 NOP  <||@
  Comment 663 314 NOP  <||@
  Comment 664 316 NOP  <||@
  Comment 665 318 NOP  <||@
  Comment 666 320 NOP  <||@
  Comment 667 322 rax|DWORD = NOT value: rax|DWORD size: DWORD  <||@
  Comment 669 324 r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 675 326 r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 678 328 r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 681 330 r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 686 332 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 691 334 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 696 block B24 null  <||@
  Comment 696 476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 696 478 NOP  <||@
  Comment 697 480 NOP  <||@
  Comment 698 482 NOP  <||@
  Comment 699 484 JUMP ~outgoingValues: [] destination: B24 -> B36  <||@
  Comment 704 block B34 null  <||@
  Comment 704 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 704 642 NOP  <||@
  Comment 705 644 NOP  <||@
  Comment 706 646 NOP  <||@
  Comment 707 648 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 710 650 JUMP ~outgoingValues: [] destination: B34 -> B36  <||@
  Comment 715 block B31 null  <||@
  Comment 715 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 715 590 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 720 592 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 725 594 r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 728 596 NOP  <||@
  Comment 729 598 NOP  <||@
  Comment 730 600 NOP  <||@
  Comment 731 602 r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5]  <||@
  Comment 737 604 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 737 block B32 null  <||@
  Comment 737 606 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 737 608 NOP  <||@
  Comment 738 610 NOP  <||@
  Comment 739 612 NOP  <||@
  Comment 740 614 NOP  <||@
  Comment 741 616 NOP  <||@
  Comment 742 618 NOP  <||@
  Comment 743 620 NOP  <||@
  Comment 744 622 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 751 624 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 762 626 DEOPT info [bci:70, 70]  <||@
  Comment 762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 767 [r9:0, stack:8]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0            |1               |2                  |3           |4          |5         |6  |7 
     locals:  |r9|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.]  |int[0|0x0]  |r14|DWORD  |r8|DWORD  |-  |- 
  at java.lang.String.startsWith(String.java:2297) [bci: 70, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 775 block B38 null  <||@
  Comment 775 712 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 775 714 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 780 716 NOP  <||@
  Comment 781 718 NOP  <||@
  Comment 782 720 NOP  <||@
  Comment 783 722 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 790 724 r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed]  <||@
  Comment 796 728 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 796 block B39 null  <||@
  Comment 796 730 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 796 732 NOP  <||@
  Comment 797 734 NOP  <||@
  Comment 798 736 NOP  <||@
  Comment 799 738 NOP  <||@
  Comment 800 740 NOP  <||@
  Comment 801 742 NOP  <||@
  Comment 802 744 NOP  <||@
  Comment 803 746 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 810 748 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 817 750 DEOPT info [bci:0]  <||@
  Comment 817 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 822 [rdx:0, rsi:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 830 block B26 null  <||@
  Comment 830 498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 830 500 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 835 502 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 840 504 r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 843 506 NOP  <||@
  Comment 844 508 NOP  <||@
  Comment 845 510 NOP  <||@
  Comment 846 512 r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5]  <||@
  Comment 852 516 JUMP ~outgoingValues: [] destination: B26 -> B28  <||@
  Comment 852 block B28 null  <||@
  Comment 852 538 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 852 534 r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 857 540 NOP  <||@
  Comment 858 542 NOP  <||@
  Comment 859 544 NOP  <||@
  Comment 860 546 NOP  <||@
  Comment 861 548 NOP  <||@
  Comment 862 550 NOP  <||@
  Comment 863 552 NOP  <||@
  Comment 864 554 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 871 556 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 882 558 DEOPT info [bci:70, 70]  <||@
  Comment 882 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 887 [r9:0, r11:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0            |1               |2             |3           |4          |5         |6  |7 
     locals:  |r9|QWORD[.]  |stack:28|DWORD  |r11|QWORD[.]  |int[0|0x0]  |r14|DWORD  |r8|DWORD  |-  |- 
  at java.lang.String.startsWith(String.java:2297) [bci: 70, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 895 block B7 null  <||@
  Comment 895 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 895 152 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 900 154 NOP  <||@
  Comment 901 156 NOP  <||@
  Comment 902 158 NOP  <||@
  Comment 903 160 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 910 162 r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced]  <||@
  Comment 916 166 JUMP ~outgoingValues: [] destination: B7 -> B39  <||@
  Comment 918 block B30 null  <||@
  Comment 918 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 918 572 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 923 574 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 928 576 r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 931 578 NOP  <||@
  Comment 932 580 NOP  <||@
  Comment 933 582 NOP  <||@
  Comment 934 584 r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5]  <||@
  Comment 940 586 JUMP ~outgoingValues: [] destination: B30 -> B32  <||@
  Comment 945 block B27 null  <||@
  Comment 945 518 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 945 520 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 950 522 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 955 524 r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 958 526 NOP  <||@
  Comment 959 528 NOP  <||@
  Comment 960 530 NOP  <||@
  Comment 961 532 r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5]  <||@
  Comment 967 536 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 969 block B37 null  <||@
  Comment 969 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 969 696 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 974 698 NOP  <||@
  Comment 975 700 NOP  <||@
  Comment 976 702 NOP  <||@
  Comment 977 704 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 984 706 r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5]  <||@
  Comment 990 710 JUMP ~outgoingValues: [] destination: B37 -> B39  <||@
  Comment 1000 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1025 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1045 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1073 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1078 [rdx:0, rbx:0, rsi:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 1108 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1113 [rdx:0, rbx:0, rsi:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 1143 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1148 [rdx:0, rbx:0, rsi:0, r13:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 1156 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1156 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1162 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1162 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9446[java.lang.String.startsWith(String, int)]"
  method "HotSpotCompilation-9446[java.lang.String.startsWith(String, int)]"
  date 1724269760556
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af39a20 448b560849bc0000002b787f00004d03d44d33e4493bc20f8543b684fe66669089842400c0feff4883ec289041817f20030000000f85a903000090909090909090909048896c2420448bc94585c90f8cc40100009090909090909090909090909090908b5e148b2cdd0c000000448b6a140fbe4210468b34ed0c000000440fbe4610418bc8448bd541d3ea8bc8458bde41d3eb452bd3453bca0f8fa301000090909090413bc00f855b020000909090904183f8010f84c50200009090909090909090458bd549c1e203448bdb49c1e3034183fe080f830701000090909041b80000000090909090453bf00f8ee30000009090909090418bc04103c13be80f86c801000090909090453bf00f868602000090909090900fbe44d810433a44e8100f843100000090909090909090909090909090904585c00f9cc00fb6c0488b6c24204883c428493ba7500400000f87a1020000c5f877c39090909041ffc0e95a0000006666660f1f840000000000666666906666660f1f840000000000666666909090909090418bc04103c13be80f861e02000090909090453bf00f869e01000090909090900fbe44d810433a44e8100f85030100009090909041ffc090909090453bf07fbb90909041b8ffffffffe955ffffff90909041b8ffffffffe947ffffff90909090413be90f86db010000909090909090418bc10fbe44d810423a04ed100000000f843d00000090909041b800000000e910ffffff9090909090909090909090b800000000488b6c24204883c428493ba7500400000f87c9010000c5f877c3909090ebd4909090909090909090909090909090909090909090498bf3498bd2418d49104863c94803ce488d5210488bf1418bce41b8000000004c8954240844894c24144d8bcbe8d2309afe85c00f8d2a0000009090909090f7d0458bd6442bd0458bc24d8bd94c8b542408448b4c2414e92bfeffff909090e968feffff909090448bc0e95dfeffff4c8954240844894c24144d8bcb90909041bae52fffff909090909090904589978404000049c7879004000000000000e85b1485fe0f1f84000000000044894c241490909049c7c31400000041baedd0feff90909090909090458997840400004d899f90040000e8241485fe0f1f8400000000004c8954240844894c24144d8bcb90909041bae511ffff4c8b5c2408909090909090904589978404000049c7879004000000000000e8e31385fe0f1f84000000000044894c241490909049c7c39402000041baedccfeffeb864c8954240844894c24144d8bcb90909041bae525ffffe930ffffff4c8954240844894c24144d8bcb90909041bae51bffffeb8b44894c241490909049c7c30000000041bae543ffffe939ffffff48896c2420e8131483fee948fcfffff4488d0d4bfdffff49898f68040000e9da2185fef4488d0d23feffff49898f68040000e9c62185fef441c78784040000f559ffff49c7879004000000000000e8241385fe0f1f84000000000041c78784040000f551ffff49c7879004000000000000e8011385fe0f1f84000000000041c78784040000f54cffff49c7879004000000000000e8de1285fe0f1f840000000000e857b498fef4e8711085fef4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@69cb36f1 slotKind: QWORD  <||@
  Comment 72 24 r9|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 75 26 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.03122842234892975 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 84 block B2 null  <||@
  Comment 84 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 84 40 NOP  <||@
  Comment 85 42 NOP  <||@
  Comment 86 44 NOP  <||@
  Comment 87 46 NOP  <||@
  Comment 88 48 NOP  <||@
  Comment 89 50 NOP  <||@
  Comment 90 52 NOP  <||@
  Comment 91 54 NOP  <||@
  Comment 92 56 NOP  <||@
  Comment 93 58 NOP  <||@
  Comment 94 60 NOP  <||@
  Comment 95 62 NOP  <||@
  Comment 96 64 NOP  <||@
  Comment 97 66 NOP  <||@
  Comment 98 68 NOP  <||@
  Comment 99 70 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 102 72 rbp|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 102 [rdx:0, rbx:0, rsi:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 102 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 109 74 r13|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 109 [rdx:0, rbx:0, rsi:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 109 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 113 76 rax|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 117 78 r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 117 [rdx:0, rbx:0, rsi:0, r13:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 117 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 125 80 r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 130 82 rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 133 84 r10|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 139 86 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 141 88 r11|DWORD = SHR (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 147 90 r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 150 92 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.02188337358368564 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B5 size: DWORD  <||@
  Comment 159 block B5 null  <||@
  Comment 159 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 159 128 NOP  <||@
  Comment 160 130 NOP  <||@
  Comment 161 132 NOP  <||@
  Comment 162 134 NOP  <||@
  Comment 163 136 CMPBRANCH (x: rax|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B38 size: DWORD  <||@
  Comment 172 block B6 null  <||@
  Comment 172 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 140 NOP  <||@
  Comment 173 142 NOP  <||@
  Comment 174 144 NOP  <||@
  Comment 175 146 NOP  <||@
  Comment 176 148 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 1 size: DWORD inlinedY: null  <||@
  Comment 186 block B8 null  <||@
  Comment 186 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 186 170 NOP  <||@
  Comment 187 172 NOP  <||@
  Comment 188 174 NOP  <||@
  Comment 189 176 NOP  <||@
  Comment 190 178 NOP  <||@
  Comment 191 180 NOP  <||@
  Comment 192 182 NOP  <||@
  Comment 193 184 NOP  <||@
  Comment 194 186 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3  <||@
  Comment 201 188 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9705c69 encoding: base: 0 shift: 3  <||@
  Comment 208 190 CMPCONSTBRANCH x: r14|DWORD trueDestinationProbability: 0.9433460450053722 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 8 size: DWORD inlinedY: null  <||@
  Comment 218 block B9 null  <||@
  Comment 218 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 218 194 NOP  <||@
  Comment 219 196 NOP  <||@
  Comment 220 198 NOP  <||@
  Comment 221 200 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 227 202 JUMP ~outgoingValues: [] destination: B9 -> B14  <||@
  Comment 227 block B14 null  <||@
  Comment 227 336 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 227 338 NOP  <||@
  Comment 228 340 NOP  <||@
  Comment 229 342 NOP  <||@
  Comment 230 344 NOP  <||@
  Comment 231 346 CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9349653035618263 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B33 size: DWORD  <||@
  Comment 240 block B15 null  <||@
  Comment 240 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 240 350 NOP  <||@
  Comment 241 352 NOP  <||@
  Comment 242 354 NOP  <||@
  Comment 243 356 NOP  <||@
  Comment 244 358 NOP  <||@
  Comment 245 360 rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 251 362 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B31 size: DWORD  <||@
  Comment 259 block B16 null  <||@
  Comment 259 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 366 NOP  <||@
  Comment 260 368 NOP  <||@
  Comment 261 370 NOP  <||@
  Comment 262 372 NOP  <||@
  Comment 263 374 CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B30 size: DWORD  <||@
  Comment 272 block B17 null  <||@
  Comment 272 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 272 378 NOP  <||@
  Comment 273 380 NOP  <||@
  Comment 274 382 NOP  <||@
  Comment 275 384 NOP  <||@
  Comment 276 386 NOP  <||@
  Comment 277 388 rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 282 390 CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B29 size: BYTE  <||@
  Comment 293 block B29 null  <||@
  Comment 293 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 293 562 NOP  <||@
  Comment 294 564 NOP  <||@
  Comment 295 566 NOP  <||@
  Comment 296 568 JUMP ~outgoingValues: [] destination: B29 -> B36  <||@
  Comment 296 block B36 null  <||@
  Comment 296 664 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 296 666 NOP  <||@
  Comment 297 668 NOP  <||@
  Comment 298 670 NOP  <||@
  Comment 299 672 NOP  <||@
  Comment 300 674 NOP  <||@
  Comment 301 676 NOP  <||@
  Comment 302 678 NOP  <||@
  Comment 303 680 NOP  <||@
  Comment 304 682 NOP  <||@
  Comment 305 684 NOP  <||@
  Comment 306 686 NOP  <||@
  Comment 307 688 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 310 690 rax|DWORD = SETCC condition: <  <||@
  Comment 316 692 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 325 POLL_RETURN_FAR  <||@
  Comment 342 block B18 null  <||@
  Comment 342 392 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 342 394 NOP  <||@
  Comment 343 396 NOP  <||@
  Comment 344 398 NOP  <||@
  Comment 345 400 NOP  <||@
  Comment 346 402 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 349 404 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 354 block B20 loop 0 depth 1 header:98|LoopBegin  <||@
  Comment 354 418 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 420 NOP  <||@
  Comment 385 422 NOP  <||@
  Comment 386 424 NOP  <||@
  Comment 387 426 NOP  <||@
  Comment 388 428 NOP  <||@
  Comment 389 430 rax|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 395 432 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B27 size: DWORD  <||@
  Comment 403 block B21 loop 0 depth 1 header:98|LoopBegin  <||@
  Comment 403 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 403 436 NOP  <||@
  Comment 404 438 NOP  <||@
  Comment 405 440 NOP  <||@
  Comment 406 442 NOP  <||@
  Comment 407 444 CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B26 size: DWORD  <||@
  Comment 416 block B22 loop 0 depth 1 header:98|LoopBegin  <||@
  Comment 416 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 416 448 NOP  <||@
  Comment 417 450 NOP  <||@
  Comment 418 452 NOP  <||@
  Comment 419 454 NOP  <||@
  Comment 420 456 NOP  <||@
  Comment 421 458 rax|DWORD = MOVSXB input: [rax|DWORD + rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 426 460 CMPBRANCH (x: rax|DWORD, y: [r8|DWORD + r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.3842399743659264 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: BYTE  <||@
  Comment 437 block B23 loop 0 depth 1 header:98|LoopBegin  <||@
  Comment 437 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 437 464 NOP  <||@
  Comment 438 466 NOP  <||@
  Comment 439 468 NOP  <||@
  Comment 440 470 NOP  <||@
  Comment 441 472 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 444 474 JUMP ~outgoingValues: [] destination: B23 -> B19  <||@
  Comment 444 block B19 loop 0 depth 1 header:98|LoopBegin  <||@
  Comment 444 406 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 444 408 NOP  <||@
  Comment 445 410 NOP  <||@
  Comment 446 412 NOP  <||@
  Comment 447 414 NOP  <||@
  Comment 448 416 CMPBRANCH (x: r14|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B25 size: DWORD  <||@
  Comment 453 block B25 null  <||@
  Comment 453 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 453 488 NOP  <||@
  Comment 454 490 NOP  <||@
  Comment 455 492 NOP  <||@
  Comment 456 494 r8|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 462 496 JUMP ~outgoingValues: [] destination: B25 -> B36  <||@
  Comment 467 block B33 null  <||@
  Comment 467 628 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 467 630 NOP  <||@
  Comment 468 632 NOP  <||@
  Comment 469 634 NOP  <||@
  Comment 470 636 r8|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 476 638 JUMP ~outgoingValues: [] destination: B33 -> B36  <||@
  Comment 481 block B10 null  <||@
  Comment 481 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 481 206 NOP  <||@
  Comment 482 208 NOP  <||@
  Comment 483 210 NOP  <||@
  Comment 484 212 NOP  <||@
  Comment 485 214 CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B37 size: DWORD  <||@
  Comment 494 block B11 null  <||@
  Comment 494 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 494 218 NOP  <||@
  Comment 495 220 NOP  <||@
  Comment 496 222 NOP  <||@
  Comment 497 224 NOP  <||@
  Comment 498 226 NOP  <||@
  Comment 499 228 NOP  <||@
  Comment 500 230 rax|QWORD = MOV value: r9|DWORD size: DWORD  <||@
  Comment 503 232 rax|DWORD = MOVSXB input: [rax|QWORD + rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 508 234 CMPBRANCH (x: rax|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.08747913188647746 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B35 size: BYTE  <||@
  Comment 522 block B35 null  <||@
  Comment 522 652 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 522 654 NOP  <||@
  Comment 523 656 NOP  <||@
  Comment 524 658 NOP  <||@
  Comment 525 660 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 531 662 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 536 block B1 null  <||@
  Comment 536 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 536 30 NOP  <||@
  Comment 537 32 NOP  <||@
  Comment 538 34 NOP  <||@
  Comment 539 36 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 539 block B4 null  <||@
  Comment 539 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 539 106 NOP  <||@
  Comment 540 108 NOP  <||@
  Comment 541 110 NOP  <||@
  Comment 542 112 NOP  <||@
  Comment 543 114 NOP  <||@
  Comment 544 116 NOP  <||@
  Comment 545 118 NOP  <||@
  Comment 546 120 NOP  <||@
  Comment 547 122 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 552 124 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 561 POLL_RETURN_FAR  <||@
  Comment 578 block B3 null  <||@
  Comment 578 94 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 578 96 NOP  <||@
  Comment 579 98 NOP  <||@
  Comment 580 100 NOP  <||@
  Comment 581 102 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 583 block B12 null  <||@
  Comment 583 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 583 238 NOP  <||@
  Comment 584 240 NOP  <||@
  Comment 585 242 NOP  <||@
  Comment 586 244 NOP  <||@
  Comment 587 246 NOP  <||@
  Comment 588 248 NOP  <||@
  Comment 589 250 NOP  <||@
  Comment 590 252 NOP  <||@
  Comment 591 254 NOP  <||@
  Comment 592 256 NOP  <||@
  Comment 593 258 NOP  <||@
  Comment 594 260 NOP  <||@
  Comment 595 262 NOP  <||@
  Comment 596 264 NOP  <||@
  Comment 597 266 NOP  <||@
  Comment 598 268 NOP  <||@
  Comment 599 270 NOP  <||@
  Comment 600 272 NOP  <||@
  Comment 601 274 NOP  <||@
  Comment 602 276 NOP  <||@
  Comment 603 278 NOP  <||@
  Comment 604 280 rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 607 282 rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 610 284 rcx|DWORD = LEA address: [r9|DWORD + 16] size: DWORD  <||@
  Comment 614 286 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 617 288 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 620 290 rdx|QWORD[*] = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 624 292 rsi|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 627 294 rdx|QWORD = MOVE input: rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 627 296 rcx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 630 298 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 636 300 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 641 302 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 646 304 r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 649 306 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL  <||@
  Comment 649 {Stub<IntrinsicStubsGen.vectorizedMismatch>@0x7f78998dcd80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD, r8|DWORD -> rax|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 654 308 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.6748091603053435 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B34 size: DWORD  <||@
  Comment 662 block B13 null  <||@
  Comment 662 310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 662 312 NOP  <||@
  Comment 663 314 NOP  <||@
  Comment 664 316 NOP  <||@
  Comment 665 318 NOP  <||@
  Comment 666 320 NOP  <||@
  Comment 667 322 rax|DWORD = NOT value: rax|DWORD size: DWORD  <||@
  Comment 669 324 r10|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 675 326 r8|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 678 328 r11|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 681 330 r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 686 332 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 691 334 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 696 block B24 null  <||@
  Comment 696 476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 696 478 NOP  <||@
  Comment 697 480 NOP  <||@
  Comment 698 482 NOP  <||@
  Comment 699 484 JUMP ~outgoingValues: [] destination: B24 -> B36  <||@
  Comment 704 block B34 null  <||@
  Comment 704 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 704 642 NOP  <||@
  Comment 705 644 NOP  <||@
  Comment 706 646 NOP  <||@
  Comment 707 648 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 710 650 JUMP ~outgoingValues: [] destination: B34 -> B36  <||@
  Comment 715 block B31 null  <||@
  Comment 715 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 715 590 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 720 592 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 725 594 r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 728 596 NOP  <||@
  Comment 729 598 NOP  <||@
  Comment 730 600 NOP  <||@
  Comment 731 602 r10|DWORD = MOVE input: int[-53275|0xffffffffffff2fe5]  <||@
  Comment 737 604 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 737 block B32 null  <||@
  Comment 737 606 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 737 608 NOP  <||@
  Comment 738 610 NOP  <||@
  Comment 739 612 NOP  <||@
  Comment 740 614 NOP  <||@
  Comment 741 616 NOP  <||@
  Comment 742 618 NOP  <||@
  Comment 743 620 NOP  <||@
  Comment 744 622 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 751 624 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 762 626 DEOPT info [bci:70, 70]  <||@
  Comment 762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 767 [r9:0, stack:8]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0            |1               |2                  |3           |4          |5         |6  |7 
     locals:  |r9|QWORD[.]  |stack:28|DWORD  |stack:40|QWORD[.]  |int[0|0x0]  |r14|DWORD  |r8|DWORD  |-  |- 
  at java.lang.String.startsWith(String.java:2297) [bci: 70, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 775 block B38 null  <||@
  Comment 775 712 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 775 714 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 780 716 NOP  <||@
  Comment 781 718 NOP  <||@
  Comment 782 720 NOP  <||@
  Comment 783 722 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 790 724 r10|DWORD = MOVE input: int[-77587|0xfffffffffffed0ed]  <||@
  Comment 796 728 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 796 block B39 null  <||@
  Comment 796 730 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 796 732 NOP  <||@
  Comment 797 734 NOP  <||@
  Comment 798 736 NOP  <||@
  Comment 799 738 NOP  <||@
  Comment 800 740 NOP  <||@
  Comment 801 742 NOP  <||@
  Comment 802 744 NOP  <||@
  Comment 803 746 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 810 748 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 817 750 DEOPT info [bci:0]  <||@
  Comment 817 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 822 [rdx:0, rsi:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 830 block B26 null  <||@
  Comment 830 498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 830 500 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 835 502 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 840 504 r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 843 506 NOP  <||@
  Comment 844 508 NOP  <||@
  Comment 845 510 NOP  <||@
  Comment 846 512 r10|DWORD = MOVE input: int[-60955|0xffffffffffff11e5]  <||@
  Comment 852 516 JUMP ~outgoingValues: [] destination: B26 -> B28  <||@
  Comment 852 block B28 null  <||@
  Comment 852 538 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 852 534 r11|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 857 540 NOP  <||@
  Comment 858 542 NOP  <||@
  Comment 859 544 NOP  <||@
  Comment 860 546 NOP  <||@
  Comment 861 548 NOP  <||@
  Comment 862 550 NOP  <||@
  Comment 863 552 NOP  <||@
  Comment 864 554 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 871 556 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 882 558 DEOPT info [bci:70, 70]  <||@
  Comment 882 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 887 [r9:0, r11:0]at jdk.internal.util.ArraysSupport.mismatch(ArraysSupport.java:401) [bci: 70, duringCall: false, rethrow: false]
              |0            |1               |2             |3           |4          |5         |6  |7 
     locals:  |r9|QWORD[.]  |stack:28|DWORD  |r11|QWORD[.]  |int[0|0x0]  |r14|DWORD  |r8|DWORD  |-  |- 
  at java.lang.String.startsWith(String.java:2297) [bci: 70, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 895 block B7 null  <||@
  Comment 895 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 895 152 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 900 154 NOP  <||@
  Comment 901 156 NOP  <||@
  Comment 902 158 NOP  <||@
  Comment 903 160 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 910 162 r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced]  <||@
  Comment 916 166 JUMP ~outgoingValues: [] destination: B7 -> B39  <||@
  Comment 918 block B30 null  <||@
  Comment 918 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 918 572 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 923 574 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 928 576 r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 931 578 NOP  <||@
  Comment 932 580 NOP  <||@
  Comment 933 582 NOP  <||@
  Comment 934 584 r10|DWORD = MOVE input: int[-55835|0xffffffffffff25e5]  <||@
  Comment 940 586 JUMP ~outgoingValues: [] destination: B30 -> B32  <||@
  Comment 945 block B27 null  <||@
  Comment 945 518 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 945 520 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 950 522 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 955 524 r9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 958 526 NOP  <||@
  Comment 959 528 NOP  <||@
  Comment 960 530 NOP  <||@
  Comment 961 532 r10|DWORD = MOVE input: int[-58395|0xffffffffffff1be5]  <||@
  Comment 967 536 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 969 block B37 null  <||@
  Comment 969 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 969 696 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 974 698 NOP  <||@
  Comment 975 700 NOP  <||@
  Comment 976 702 NOP  <||@
  Comment 977 704 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 984 706 r10|DWORD = MOVE input: int[-48155|0xffffffffffff43e5]  <||@
  Comment 990 710 JUMP ~outgoingValues: [] destination: B37 -> B39  <||@
  Comment 1000 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1025 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1045 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1073 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1078 [rdx:0, rbx:0, rsi:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 1108 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1113 [rdx:0, rbx:0, rsi:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 1143 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1148 [rdx:0, rbx:0, rsi:0, r13:0]at java.lang.String.startsWith(String.java:2285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |-  |-  |-  |-   <||@
  Comment 1156 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1156 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1162 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1162 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
