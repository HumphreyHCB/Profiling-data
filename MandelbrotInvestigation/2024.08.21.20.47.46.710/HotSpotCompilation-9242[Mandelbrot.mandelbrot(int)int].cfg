begin_compilation
  name " HotSpotCompilation-9242[Mandelbrot.mandelbrot(int)]"
  method "HotSpotCompilation-9242[Mandelbrot.mandelbrot(int)]"
  date 1724269710897
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?60 i114 v13 d23 ?101 v35 ?41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 180]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 180]
stamp: i32
=== Inputs ===
x: i2 
y: i113 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 i138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 80]
rawvalue: 50
stableDimension: 0
stamp: i32 [50]
stampKind: i32
value: int[50|0x32]
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 67]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i188 i170 i99 i102 i104 i130 i132 i169 i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d87 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 128]
rawvalue: 4.0
stableDimension: 0
stamp: f64! [4.0]
stampKind: f64
value: double[4.0|0x4010000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 26]
rawvalue: 1.0
stableDimension: 0
stamp: f64! [1.0]
stampKind: f64
value: double[1.0|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 24]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d24 d47 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 58]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 16]
rawvalue: 2.0
stableDimension: 0
stamp: f64! [2.0]
stampKind: f64
value: double[2.0|0x4000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d22 d46 d81 d150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 39]
rawvalue: 0.0
stableDimension: 0
stamp: f64! [0.0]
stampKind: f64
value: double[0.0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
d191 d149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 i9 i10 i11 i33 i187 i170 v61 i169 i31 i32 i32 i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v0 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i4 i30 
=== Succesors ===
=== Usages ===
i30 v134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i4 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i4 i31 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i4 i31  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i4 i32 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i4 i32  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i4 i132 
=== Succesors ===
=== Usages ===
i132 v13 d21 ?101 ?41 ?60 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i4 i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v19 
=== Usages ===
i8 i9 i10 i11 v15 v133 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 13]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 0.9986710293853668
stamp: void
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v18 #falseSuccessor: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid d21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 21]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i11 
=== Succesors ===
=== Usages ===
d22 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i11  <|@  <|@
f <@~|@floating>@ <|@
tid d22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 22]
stamp: f64
=== Inputs ===
x: d21 
y: d20 
=== Succesors ===
=== Usages ===
d24 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d21 y: d20  <|@  <|@
f <@~|@floating>@ <|@
tid d24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 25]
stamp: f64
=== Inputs ===
x: d22 
y: d23 
=== Succesors ===
=== Usages ===
d26 
=== Predecessor ===
- >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.FloatDivNode>@ x: d22 y: d23  <|@  <|@
f <@~|@floating>@ <|@
tid d26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 27]
stamp: f64
=== Inputs ===
x: d24 
y: d25 
=== Succesors ===
=== Usages ===
d83 ?60 ?101 d152 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d24 y: d25  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v29 
values: i8 i111 i127 i30 
=== Succesors ===
=== Usages ===
i111 i8 ?60 i30 ?41 i127 ?101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v29 values: i8 i111 i127 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v29 
values: i9 i4 i4 i103 
=== Succesors ===
=== Usages ===
i102 i9 ?60 ?101 ?41 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v29 values: i9 i4 i4 i103  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v29 
values: i10 i4 i4 i104 
=== Succesors ===
=== Usages ===
i104 i10 ?60 i138 ?41 v107 ?101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v29 values: i10 i4 i4 i104  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v29 
values: i4 i130 i130 i130 
=== Succesors ===
=== Usages ===
i130 v35 d45 ?60 ?101 v115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v29 values: i4 i130 i130 i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v28 
=== Succesors ===
next: v43 
=== Usages ===
i30 i31 i32 i33 v37 v131 v136 v137 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v28 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i2 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i33 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.9986685024954288
stamp: void
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v42 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid d45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 53]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
d46 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i33  <|@  <|@
f <@~|@floating>@ <|@
tid d46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 54]
stamp: f64
=== Inputs ===
x: d45 
y: d20 
=== Succesors ===
=== Usages ===
d47 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d45 y: d20  <|@  <|@
f <@~|@floating>@ <|@
tid d47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 57]
stamp: f64
=== Inputs ===
x: d46 
y: d23 
=== Succesors ===
=== Usages ===
d49 
=== Predecessor ===
- >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.FloatDivNode>@ x: d46 y: d23  <|@  <|@
f <@~|@floating>@ <|@
tid d49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 61]
stamp: f64
=== Inputs ===
x: d47 
y: d48 
=== Succesors ===
=== Usages ===
?60 d80 d149 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d47 y: d48  <|@  <|@
f <@~|@floating>@ <|@
tid d149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d49 
y: d44 
=== Succesors ===
=== Usages ===
d150 d153 d153 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d49 y: d44  <|@  <|@
f <@~|@floating>@ <|@
tid d153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d149 
y: d149 
=== Succesors ===
=== Usages ===
d155 d183 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d149 y: d149  <|@  <|@
f <@~|@floating>@ <|@
tid d150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d149 
y: d20 
=== Succesors ===
=== Usages ===
d191 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d149 y: d20  <|@  <|@
f <@~|@floating>@ <|@
tid d191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d150 
y: d44 
=== Succesors ===
=== Usages ===
d152 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d150 y: d44  <|@  <|@
f <@~|@floating>@ <|@
tid d152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d26 
y: d191 
=== Succesors ===
=== Usages ===
d154 d154 d184 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d26 y: d191  <|@  <|@
f <@~|@floating>@ <|@
tid d154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d152 
y: d152 
=== Succesors ===
=== Usages ===
d155 d185 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d152 y: d152  <|@  <|@
f <@~|@floating>@ <|@
tid d155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d153 
y: d154 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d153 y: d154  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d87 
y: d155 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d87 y: d155  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.027073822189681906
stamp: void
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v158 #falseSuccessor: v157  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v163 
values: i4 i50 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v163 values: i4 i50  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v163 
values: i50 i4 
=== Succesors ===
=== Usages ===
i187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v163 values: i50 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v161 v162 
=== Succesors ===
next: v52 
=== Usages ===
i170 i169 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v161 v162 #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
v163 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v53 
values: i170 i188 i50 
=== Succesors ===
=== Usages ===
?60 ?101 i103 i188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: i170 i188 i50  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v53 
values: i169 i187 i4 
=== Succesors ===
=== Usages ===
?60 v61 i187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: i169 i187 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v53 
values: i50 i99 i99 
=== Succesors ===
=== Usages ===
?60 v69 i99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: i50 i99 i99  <|@  <|@
f <@~|@floating>@ <|@
tid d185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v53 
values: d154 d85 d85 
=== Succesors ===
=== Usages ===
?60 d79 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: d154 d85 d85  <|@  <|@
f <@~|@floating>@ <|@
tid d184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v53 
values: d152 d83 d83 
=== Succesors ===
=== Usages ===
?60 d82 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: d152 d83 d83  <|@  <|@
f <@~|@floating>@ <|@
tid d183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v53 
values: d153 d84 d84 
=== Succesors ===
=== Usages ===
?60 d79 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: d153 d84 d84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v52 
=== Succesors ===
next: v67 
=== Usages ===
i188 i187 i186 d185 d184 d183 v64 v73 v100 v135 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v52 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i187 
y: i4 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i187 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02535382384964502
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v64 #falseSuccessor: v62  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i186 
y: i68 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i186 y: i68  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9608307931740957
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v77 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iload
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i2 i30 i31 i32 i11 d26 - i33 d183 - d184 - d185 - d49 - i186 i187 i188 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 i30 i31 i32 i11 d26 - i33 d183 - d184 - d185 - d49 - i186 i187 i188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?60 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i186 
y: i50 
=== Succesors ===
=== Usages ===
i186 i186 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i186 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid d79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d183 
y: d185 
=== Succesors ===
=== Usages ===
d80 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d183 y: d185  <|@  <|@
f <@~|@floating>@ <|@
tid d80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d49 
y: d79 
=== Succesors ===
=== Usages ===
d81 d84 d84 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d49 y: d79  <|@  <|@
f <@~|@floating>@ <|@
tid d84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d80 
y: d80 
=== Succesors ===
=== Usages ===
d86 d183 d183 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d80 y: d80  <|@  <|@
f <@~|@floating>@ <|@
tid d81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d80 
y: d20 
=== Succesors ===
=== Usages ===
d82 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d80 y: d20  <|@  <|@
f <@~|@floating>@ <|@
tid d82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d81 
y: d184 
=== Succesors ===
=== Usages ===
d83 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d81 y: d184  <|@  <|@
f <@~|@floating>@ <|@
tid d83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d26 
y: d82 
=== Succesors ===
=== Usages ===
d85 d85 d184 d184 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d26 y: d82  <|@  <|@
f <@~|@floating>@ <|@
tid d85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d83 
y: d83 
=== Succesors ===
=== Usages ===
d86 d185 d185 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d83 y: d83  <|@  <|@
f <@~|@floating>@ <|@
tid d86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d84 
y: d85 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d84 y: d85  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d87 
y: d86 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d87 y: d86  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.027073822189681906
stamp: void
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v91 #falseSuccessor: v90  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v53 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v53 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v53 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v53 #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v53 
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v53 #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
v64 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v70 v72 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v70 v72 #next: v197  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 147
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i2 i30 i31 i32 i11 d26 - i33 - - - - - - - - - - i188 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 i30 i31 i32 i11 d26 - i33 - - - - - - - - - - i188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
stateBefore: ?101 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?101 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 149]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i31 
y: i50 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i31 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 152]
stamp: i32
=== Inputs ===
x: i102 
y: i188 
=== Succesors ===
=== Usages ===
i111 i31 i126 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i102 y: i188  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
=== Inputs ===
x: i33 
y: i50 
=== Succesors ===
=== Usages ===
i33 i33 i33 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i33 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i106 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i32 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
profileData: PROFILED designatedSuccessorProbability: 0.12400000016818269
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v109 #falseSuccessor: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 166]
stamp: i32
=== Inputs ===
x: i30 
y: i103 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i30 y: i103  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v29  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i114 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i33 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.001522000963316561
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v122 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v122 #falseSuccessor: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 189]
stamp: i32
=== Inputs ===
x: i106 
y: i32 
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i106 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 190]
stamp: i32
=== Inputs ===
x: i103 
y: i138 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i103 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 194]
stamp: i32
=== Inputs ===
x: i30 
y: i126 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i30 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v29  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 154]
stamp: i32
=== Inputs ===
x: i32 
y: i50 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i32 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v29  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v29 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v29 #next: v196  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 207
bytecode: iinc
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i2 i30 i31 i32 i11 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 i30 i31 i32 i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?41 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?41 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: i32
=== Inputs ===
x: i11 
y: i50 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i11 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 213]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v134  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 214]
stamp: void
=== Inputs ===
memoryMap: - 
result: i8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i8  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?60 i114 v13 d23 ?101 v35 ?41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 180]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 180]
stamp: i32
=== Inputs ===
x: i2 
y: i113 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v107 i138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result int[50|0x32] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 80]
rawvalue: 50
stableDimension: 0
stamp: i32 [50]
stampKind: i32
value: int[50|0x32]
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 67]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i188 i170 i99 i102 i104 i130 i132 i169 i186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d87 <|@
result v2|DOUBLE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 128]
rawvalue: 4.0
stableDimension: 0
stamp: f64! [4.0]
stampKind: f64
value: double[4.0|0x4010000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v89 v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d25 <|@
result v3|DOUBLE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 26]
rawvalue: 1.0
stableDimension: 0
stamp: f64! [1.0]
stampKind: f64
value: double[1.0|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d23 <|@
result v4|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 24]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d24 d47 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d48 <|@
result v5|DOUBLE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 58]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d20 <|@
result v6|DOUBLE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 16]
rawvalue: 2.0
stableDimension: 0
stamp: f64! [2.0]
stampKind: f64
value: double[2.0|0x4000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d22 d46 d81 d150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d44 <|@
result v7|DOUBLE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 39]
rawvalue: 0.0
stableDimension: 0
stamp: f64! [0.0]
stampKind: f64
value: double[0.0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
d191 d149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 i9 i10 i11 i33 i187 i170 v61 i169 i31 i32 i32 i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v0 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i8 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i4 i30 
=== Succesors ===
=== Usages ===
i30 v134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i4 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i4 i31 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i4 i31  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i4 i32 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i4 i32  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i4 i132 
=== Succesors ===
=== Usages ===
i132 v13 d21 ?101 ?41 ?60 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i4 i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v19 
=== Usages ===
i8 i9 i10 i11 v15 v133 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 13]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 0.9986710293853668
stamp: void
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v18 #falseSuccessor: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid d21 <|@
result v12|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 21]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i11 
=== Succesors ===
=== Usages ===
d22 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i11  <|@  <|@
f <@~|@floating>@ <|@
tid d22 <|@
result v13|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 22]
stamp: f64
=== Inputs ===
x: d21 
y: d20 
=== Succesors ===
=== Usages ===
d24 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d21 y: d20  <|@  <|@
f <@~|@floating>@ <|@
tid d24 <|@
result v14|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 25]
stamp: f64
=== Inputs ===
x: d22 
y: d23 
=== Succesors ===
=== Usages ===
d26 
=== Predecessor ===
- >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.FloatDivNode>@ x: d22 y: d23  <|@  <|@
f <@~|@floating>@ <|@
tid d26 <|@
result v15|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 27]
stamp: f64
=== Inputs ===
x: d24 
y: d25 
=== Succesors ===
=== Usages ===
d83 ?60 ?101 d152 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d24 y: d25  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i30 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v29 
values: i8 i111 i127 i30 
=== Succesors ===
=== Usages ===
i111 i8 ?60 i30 ?41 i127 ?101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v29 values: i8 i111 i127 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v29 
values: i9 i4 i4 i103 
=== Succesors ===
=== Usages ===
i102 i9 ?60 ?101 ?41 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v29 values: i9 i4 i4 i103  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v29 
values: i10 i4 i4 i104 
=== Succesors ===
=== Usages ===
i104 i10 ?60 i138 ?41 v107 ?101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v29 values: i10 i4 i4 i104  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v29 
values: i4 i130 i130 i130 
=== Succesors ===
=== Usages ===
i130 v35 d45 ?60 ?101 v115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v29 values: i4 i130 i130 i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v28 
=== Succesors ===
next: v43 
=== Usages ===
i30 i31 i32 i33 v37 v131 v136 v137 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v28 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i2 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i33 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.9986685024954288
stamp: void
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v42 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid d45 <|@
result v20|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 53]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
d46 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: i33  <|@  <|@
f <@~|@floating>@ <|@
tid d46 <|@
result v21|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 54]
stamp: f64
=== Inputs ===
x: d45 
y: d20 
=== Succesors ===
=== Usages ===
d47 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d45 y: d20  <|@  <|@
f <@~|@floating>@ <|@
tid d47 <|@
result v22|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 57]
stamp: f64
=== Inputs ===
x: d46 
y: d23 
=== Succesors ===
=== Usages ===
d49 
=== Predecessor ===
- >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.FloatDivNode>@ x: d46 y: d23  <|@  <|@
f <@~|@floating>@ <|@
tid d49 <|@
result v23|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 61]
stamp: f64
=== Inputs ===
x: d47 
y: d48 
=== Succesors ===
=== Usages ===
?60 d80 d149 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d47 y: d48  <|@  <|@
f <@~|@floating>@ <|@
tid d149 <|@
result v24|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d49 
y: d44 
=== Succesors ===
=== Usages ===
d150 d153 d153 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d49 y: d44  <|@  <|@
f <@~|@floating>@ <|@
tid d153 <|@
result v25|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d149 
y: d149 
=== Succesors ===
=== Usages ===
d155 d183 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d149 y: d149  <|@  <|@
f <@~|@floating>@ <|@
tid d150 <|@
result v26|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d149 
y: d20 
=== Succesors ===
=== Usages ===
d191 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d149 y: d20  <|@  <|@
f <@~|@floating>@ <|@
tid d191 <|@
result v27|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d150 
y: d44 
=== Succesors ===
=== Usages ===
d152 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d150 y: d44  <|@  <|@
f <@~|@floating>@ <|@
tid d152 <|@
result v28|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d26 
y: d191 
=== Succesors ===
=== Usages ===
d154 d154 d184 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d26 y: d191  <|@  <|@
f <@~|@floating>@ <|@
tid d154 <|@
result v29|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d152 
y: d152 
=== Succesors ===
=== Usages ===
d155 d185 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d152 y: d152  <|@  <|@
f <@~|@floating>@ <|@
tid d155 <|@
result v30|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d153 
y: d154 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d153 y: d154  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d87 
y: d155 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d87 y: d155  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.027073822189681906
stamp: void
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v158 #falseSuccessor: v157  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i170 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v163 
values: i4 i50 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v163 values: i4 i50  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v163 
values: i50 i4 
=== Succesors ===
=== Usages ===
i187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v163 values: i50 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v161 v162 
=== Succesors ===
next: v52 
=== Usages ===
i170 i169 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v161 v162 #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
v163 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i188 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v53 
values: i170 i188 i50 
=== Succesors ===
=== Usages ===
?60 ?101 i103 i188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: i170 i188 i50  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v53 
values: i169 i187 i4 
=== Succesors ===
=== Usages ===
?60 v61 i187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: i169 i187 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v53 
values: i50 i99 i99 
=== Succesors ===
=== Usages ===
?60 v69 i99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: i50 i99 i99  <|@  <|@
f <@~|@floating>@ <|@
tid d185 <|@
result v36|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v53 
values: d154 d85 d85 
=== Succesors ===
=== Usages ===
?60 d79 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: d154 d85 d85  <|@  <|@
f <@~|@floating>@ <|@
tid d184 <|@
result v37|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v53 
values: d152 d83 d83 
=== Succesors ===
=== Usages ===
?60 d82 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: d152 d83 d83  <|@  <|@
f <@~|@floating>@ <|@
tid d183 <|@
result v38|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: f64
valueDescription: f64
=== Inputs ===
merge: v53 
values: d153 d84 d84 
=== Succesors ===
=== Usages ===
?60 d79 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v53 values: d153 d84 d84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v52 
=== Succesors ===
next: v67 
=== Usages ===
i188 i187 i186 d185 d184 d183 v64 v73 v100 v135 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v52 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i187 
y: i4 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i187 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.02535382384964502
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v64 #falseSuccessor: v62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i186 
y: i68 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i186 y: i68  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 82]
profileData: PROFILED designatedSuccessorProbability: 0.9608307931740957
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v77 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iload
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i2 i30 i31 i32 i11 d26 - i33 d183 - d184 - d185 - d49 - i186 i187 i188 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 i30 i31 i32 i11 d26 - i33 d183 - d184 - d185 - d49 - i186 i187 i188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?60 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: i32
=== Inputs ===
x: i186 
y: i50 
=== Succesors ===
=== Usages ===
i186 i186 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i186 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid d79 <|@
result v41|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 89]
stamp: f64
=== Inputs ===
x: d183 
y: d185 
=== Succesors ===
=== Usages ===
d80 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: d183 y: d185  <|@  <|@
f <@~|@floating>@ <|@
tid d80 <|@
result v42|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 92]
stamp: f64
=== Inputs ===
x: d49 
y: d79 
=== Succesors ===
=== Usages ===
d81 d84 d84 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d49 y: d79  <|@  <|@
f <@~|@floating>@ <|@
tid d84 <|@
result v43|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 113]
stamp: f64
=== Inputs ===
x: d80 
y: d80 
=== Succesors ===
=== Usages ===
d86 d183 d183 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d80 y: d80  <|@  <|@
f <@~|@floating>@ <|@
tid d81 <|@
result v44|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 100]
stamp: f64
=== Inputs ===
x: d80 
y: d20 
=== Succesors ===
=== Usages ===
d82 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d80 y: d20  <|@  <|@
f <@~|@floating>@ <|@
tid d82 <|@
result v45|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 103]
stamp: f64
=== Inputs ===
x: d81 
y: d184 
=== Succesors ===
=== Usages ===
d83 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d81 y: d184  <|@  <|@
f <@~|@floating>@ <|@
tid d83 <|@
result v46|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 106]
stamp: f64
=== Inputs ===
x: d26 
y: d82 
=== Succesors ===
=== Usages ===
d85 d85 d184 d184 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d26 y: d82  <|@  <|@
f <@~|@floating>@ <|@
tid d85 <|@
result v47|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 120]
stamp: f64
=== Inputs ===
x: d83 
y: d83 
=== Succesors ===
=== Usages ===
d86 d185 d185 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: d83 y: d83  <|@  <|@
f <@~|@floating>@ <|@
tid d86 <|@
result v48|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 127]
stamp: f64
=== Inputs ===
x: d84 
y: d85 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: d84 y: d85  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d87 
y: d86 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.FloatLessThanNode>@ x: d87 y: d86  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 132]
profileData: PROFILED designatedSuccessorProbability: 0.027073822189681906
stamp: void
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v91 #falseSuccessor: v90  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
loopBegin: v53 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 141]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v53 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v53 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v53 #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v53 
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v53 #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
v64 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v70 v72 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v70 v72 #next: v197  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 147
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i2 i30 i31 i32 i11 d26 - i33 - - - - - - - - - - i188 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 i30 i31 i32 i11 d26 - i33 - - - - - - - - - - i188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
stateBefore: ?101 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?101 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 149]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i31 
y: i50 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i31 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 152]
stamp: i32
=== Inputs ===
x: i102 
y: i188 
=== Succesors ===
=== Usages ===
i111 i31 i126 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i102 y: i188  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: i32
=== Inputs ===
x: i33 
y: i50 
=== Succesors ===
=== Usages ===
i33 i33 i33 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i33 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i106 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i32 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 161]
profileData: PROFILED designatedSuccessorProbability: 0.12400000016818269
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v109 #falseSuccessor: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 166]
stamp: i32
=== Inputs ===
x: i30 
y: i103 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i30 y: i103  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i114 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i33 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 181]
profileData: PROFILED designatedSuccessorProbability: 0.001522000963316561
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v122 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v122 #falseSuccessor: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 189]
stamp: i32
=== Inputs ===
x: i106 
y: i32 
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i106 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 190]
stamp: i32
=== Inputs ===
x: i103 
y: i138 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i103 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 194]
stamp: i32
=== Inputs ===
x: i30 
y: i126 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i30 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 154]
stamp: i32
=== Inputs ===
x: i32 
y: i50 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i32 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 2
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 201]
stamp: void
=== Inputs ===
loopBegin: v29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v29 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v29 #next: v196  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 207
bytecode: iinc
code: ResolvedJavaMethodBytecode<Mandelbrot.mandelbrot(int)>
localsSize: 22
locksSize: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i2 i30 i31 i32 i11 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 i30 i31 i32 i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?41 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?41 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 207]
stamp: i32
=== Inputs ===
x: i11 
y: i50 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i11 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 213]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v134  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Mandelbrot.mandelbrot(int) [bci: 214]
stamp: void
=== Inputs ===
memoryMap: - 
result: i8 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   -1  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   -1  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   38  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   40  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   44  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   46  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   50  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   88  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   90  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   94  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  182  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  194  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  204  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  278  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  296  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  298  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  362  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  440  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  466  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   38  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   40  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   44  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   46  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   50  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   88  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   90  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   94  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  182  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  194  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  204  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  278  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  296  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  298  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  362  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  440  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  466  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v8|d [0, 1[[488, 490[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v55|d [0, 1[[442, 445[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 32[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|d DWORD "[v0|d]" v0|d rdx|d [32, 470[32 MustHaveRegister 34 ShouldHaveRegister 40 ShouldHaveRegister 60 MustHaveRegister 104 MustHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d v0|d [34, 470[34 MustHaveRegister 380 MustHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v2|D DOUBLE "[v2|D]" v2|D -1 [36, 470[36 MustHaveRegister 180 ShouldHaveRegister 296 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v3|D DOUBLE "[v3|D]" v3|D -1 [38, 470[38 MustHaveRegister 90 ShouldHaveRegister 469 LiveAtLoopEnd  "NoSpillStore"
  v4|D DOUBLE "[v4|D]" v4|D -1 [40, 470[40 MustHaveRegister 88 ShouldHaveRegister 162 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v5|D DOUBLE "[v5|D]" v5|D -1 [42, 470[42 MustHaveRegister 164 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v6|D DOUBLE "[v6|D]" v6|D -1 [44, 470[44 MustHaveRegister 86 ShouldHaveRegister 160 ShouldHaveRegister 170 ShouldHaveRegister 286 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v7|D DOUBLE "[v7|D]" v7|D -1 [46, 470[46 MustHaveRegister 166 ShouldHaveRegister 172 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v16|d [50, 93[[470, 488[92 ShouldHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v17|d [50, 93[92 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v18|d [50, 93[92 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v60|d [50, 466[60 ShouldHaveRegister 84 ShouldHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v12|D DOUBLE "[v12|D]" v12|D -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v13|D DOUBLE "[v13|D]" v13|D -1 [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v14|D DOUBLE "[v14|D]" v14|D -1 [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v15|D DOUBLE "[v15|D]" v15|D -1 [90, 450[90 MustHaveRegister 174 MustHaveRegister 290 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v16|d [94, 395[[396, 406[[410, 446[[450, 469[394 ShouldHaveRegister 406 ShouldHaveRegister 446 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v9|d [94, 362[[410, 420[[450, 469[362 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v10|d [94, 392[[410, 441[[450, 469[368 ShouldHaveRegister 392 ShouldHaveRegister 440 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v52|d [94, 380[[410, 420[104 ShouldHaveRegister 158 ShouldHaveRegister 366 ShouldHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v20|D DOUBLE "[v20|D]" v20|D -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v21|D DOUBLE "[v21|D]" v21|D -1 [160, 162[160 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v22|D DOUBLE "[v22|D]" v22|D -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v23|D DOUBLE "[v23|D]" v23|D -1 [164, 320[[410, 420[164 MustHaveRegister 166 MustHaveRegister 282 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd  "NoSpillStore"
  v24|D DOUBLE "[v24|D]" v24|D -1 [166, 170[166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|D DOUBLE "[v25|D]" v25|D -1 [168, 203[[410, 420[168 MustHaveRegister 178 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v26|D DOUBLE "[v26|D]" v26|D -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v27|D DOUBLE "[v27|D]" v27|D -1 [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v28|D DOUBLE "[v28|D]" v28|D -1 [174, 203[[410, 420[174 MustHaveRegister 176 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v29|D DOUBLE "[v29|D]" v29|D -1 [176, 203[[410, 420[176 MustHaveRegister 178 ShouldHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v30|D DOUBLE "[v30|D]" v30|D -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [194, 203[202 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [194, 203[202 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v33|d [204, 309[[320, 364[308 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d v34|d [204, 309[214 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v40|d [204, 278[226 ShouldHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v36|D DOUBLE "[v36|D]" v36|D v47|D [204, 280[280 ShouldHaveRegister  "NoSpillStore"
  v37|D DOUBLE "[v37|D]" v37|D v46|D [204, 288[288 ShouldHaveRegister  "NoSpillStore"
  v38|D DOUBLE "[v38|D]" v38|D v43|D [204, 280[280 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [276, 277[276 MustHaveRegister  "NoDefinitionFound"
  v40|d DWORD "[v40|d]" v40|d v35|d [278, 309[[310, 319[278 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v41|D DOUBLE "[v41|D]" v41|D -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v42|D DOUBLE "[v42|D]" v42|D -1 [282, 286[282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v43|D DOUBLE "[v43|D]" v43|D v38|D [284, 309[[310, 319[284 MustHaveRegister 294 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v44|D DOUBLE "[v44|D]" v44|D -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v45|D DOUBLE "[v45|D]" v45|D -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v46|D DOUBLE "[v46|D]" v46|D v37|D [290, 309[[310, 319[290 MustHaveRegister 292 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v47|D DOUBLE "[v47|D]" v47|D v36|D [292, 309[[310, 319[292 MustHaveRegister 294 ShouldHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v48|D DOUBLE "[v48|D]" v48|D -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [360, 361[360 MustHaveRegister  "NoDefinitionFound"
  v50|d DWORD "[v50|d]" v50|d v17|d [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v50|d [364, 395[[396, 406[[420, 444[364 MustHaveRegister 394 ShouldHaveRegister 406 ShouldHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d v19|d [366, 395[[396, 409[[420, 449[366 MustHaveRegister 394 ShouldHaveRegister 408 ShouldHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v16|d [406, 409[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d v54|d [440, 442[440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v51|d [444, 446[444 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v16|d [446, 449[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v18|d [392, 395[392 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [464, 465[464 MustHaveRegister  "NoDefinitionFound"
  v60|d DWORD "[v60|d]" v60|d v11|d [466, 469[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v8|d [0, 1[[488, 490[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v55|d [0, 1[[442, 445[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 32[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|d DWORD "[rdx|d]" v0|d rdx|d [32, 470[32 MustHaveRegister 34 ShouldHaveRegister 40 ShouldHaveRegister 60 MustHaveRegister 104 MustHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d v0|d [34, 470[34 MustHaveRegister 380 MustHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v2|D DOUBLE "[xmm0|D]" v2|D -1 [36, 470[36 MustHaveRegister 180 ShouldHaveRegister 296 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v3|D DOUBLE "[xmm1|D]" v3|D -1 [38, 470[38 MustHaveRegister 90 ShouldHaveRegister 469 LiveAtLoopEnd  "NoSpillStore"
  v4|D DOUBLE "[xmm2|D]" v4|D -1 [40, 470[40 MustHaveRegister 88 ShouldHaveRegister 162 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v5|D DOUBLE "[xmm3|D]" v5|D -1 [42, 470[42 MustHaveRegister 164 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v6|D DOUBLE "[xmm4|D]" v6|D -1 [44, 470[44 MustHaveRegister 86 ShouldHaveRegister 160 ShouldHaveRegister 170 ShouldHaveRegister 286 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v7|D DOUBLE "[xmm5|D]" v7|D -1 [46, 470[46 MustHaveRegister 166 ShouldHaveRegister 172 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d v16|d [50, 93[[470, 488[92 ShouldHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v17|d [50, 93[92 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d v18|d [50, 93[92 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v60|d [50, 466[60 ShouldHaveRegister 84 ShouldHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v12|D DOUBLE "[xmm6|D]" v12|D -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v13|D DOUBLE "[xmm6|D]" v13|D -1 [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v14|D DOUBLE "[xmm6|D]" v14|D -1 [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v15|D DOUBLE "[xmm6|D]" v15|D -1 [90, 450[90 MustHaveRegister 174 MustHaveRegister 290 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d v16|d [94, 395[[396, 406[[410, 446[[450, 469[394 ShouldHaveRegister 406 ShouldHaveRegister 446 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d v9|d [94, 362[[410, 420[[450, 469[362 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r11|d]" v18|d v10|d [94, 392[[410, 441[[450, 469[368 ShouldHaveRegister 392 ShouldHaveRegister 440 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r9|d]" v19|d v52|d [94, 380[[410, 420[104 ShouldHaveRegister 158 ShouldHaveRegister 366 ShouldHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v20|D DOUBLE "[xmm7|D]" v20|D -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v21|D DOUBLE "[xmm7|D]" v21|D -1 [160, 162[160 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v22|D DOUBLE "[xmm7|D]" v22|D -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v23|D DOUBLE "[xmm7|D]" v23|D -1 [164, 320[[410, 420[164 MustHaveRegister 166 MustHaveRegister 282 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd  "NoSpillStore"
  v24|D DOUBLE "[xmm8|D]" v24|D -1 [166, 170[166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|D DOUBLE "[xmm9|D]" v25|D -1 [168, 203[[410, 420[168 MustHaveRegister 178 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v26|D DOUBLE "[xmm8|D]" v26|D -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v27|D DOUBLE "[xmm8|D]" v27|D -1 [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v28|D DOUBLE "[xmm8|D]" v28|D -1 [174, 203[[410, 420[174 MustHaveRegister 176 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v29|D DOUBLE "[xmm10|D]" v29|D -1 [176, 203[[410, 420[176 MustHaveRegister 178 ShouldHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v30|D DOUBLE "[xmm11|D]" v30|D -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d -1 [194, 203[202 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rdi|d]" v32|d -1 [194, 203[202 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbx|d]" v33|d v33|d [204, 309[[320, 364[308 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d v34|d [204, 309[214 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rsi|d]" v35|d v40|d [204, 278[226 ShouldHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v36|D DOUBLE "[xmm8|D]" v36|D v47|D [204, 280[280 ShouldHaveRegister  "NoSpillStore"
  v37|D DOUBLE "[xmm9|D]" v37|D v46|D [204, 288[288 ShouldHaveRegister  "NoSpillStore"
  v38|D DOUBLE "[xmm10|D]" v38|D v43|D [204, 280[280 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbp|q]" v39|q -1 [276, 277[276 MustHaveRegister  "NoDefinitionFound"
  v40|d DWORD "[rsi|d]" v40|d v35|d [278, 309[[310, 319[278 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v41|D DOUBLE "[xmm8|D]" v41|D -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v42|D DOUBLE "[xmm8|D]" v42|D -1 [282, 286[282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v43|D DOUBLE "[xmm10|D]" v43|D v38|D [284, 309[[310, 319[284 MustHaveRegister 294 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v44|D DOUBLE "[xmm8|D]" v44|D -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v45|D DOUBLE "[xmm8|D]" v45|D -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v46|D DOUBLE "[xmm9|D]" v46|D v37|D [290, 309[[310, 319[290 MustHaveRegister 292 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v47|D DOUBLE "[xmm8|D]" v47|D v36|D [292, 309[[310, 319[292 MustHaveRegister 294 ShouldHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v48|D DOUBLE "[xmm11|D]" v48|D -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdi|q]" v49|q -1 [360, 361[360 MustHaveRegister  "NoDefinitionFound"
  v50|d DWORD "[rcx|d]" v50|d v17|d [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rbx|d]" v51|d v50|d [364, 395[[396, 406[[420, 444[364 MustHaveRegister 394 ShouldHaveRegister 406 ShouldHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rdi|d]" v52|d v19|d [366, 395[[396, 409[[420, 449[366 MustHaveRegister 394 ShouldHaveRegister 408 ShouldHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d v16|d [406, 409[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rcx|d]" v54|d -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rcx|d]" v55|d v54|d [440, 442[440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbx|d]" v56|d v51|d [444, 446[444 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d v16|d [446, 449[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v18|d [392, 395[392 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r9|q]" v59|q -1 [464, 465[464 MustHaveRegister  "NoDefinitionFound"
  v60|d DWORD "[r8|d]" v60|d v11|d [466, 469[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   38  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   40  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   44  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   46  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   50  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   88  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   90  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   94  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  182  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  194  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  204  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  278  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  296  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  298  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  362  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  440  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  466  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v8|d [0, 1[[488, 490[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v55|d [0, 1[[442, 445[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 32[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|d DWORD "[rdx|d]" v0|d rdx|d [32, 470[32 MustHaveRegister 34 ShouldHaveRegister 40 ShouldHaveRegister 60 MustHaveRegister 104 MustHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d v0|d [34, 470[34 MustHaveRegister 380 MustHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v2|D DOUBLE "[xmm0|D]" v2|D -1 [36, 470[36 MustHaveRegister 180 ShouldHaveRegister 296 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v3|D DOUBLE "[xmm1|D]" v3|D -1 [38, 470[38 MustHaveRegister 90 ShouldHaveRegister 469 LiveAtLoopEnd  "NoSpillStore"
  v4|D DOUBLE "[xmm2|D]" v4|D -1 [40, 470[40 MustHaveRegister 88 ShouldHaveRegister 162 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v5|D DOUBLE "[xmm3|D]" v5|D -1 [42, 470[42 MustHaveRegister 164 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v6|D DOUBLE "[xmm4|D]" v6|D -1 [44, 470[44 MustHaveRegister 86 ShouldHaveRegister 160 ShouldHaveRegister 170 ShouldHaveRegister 286 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v7|D DOUBLE "[xmm5|D]" v7|D -1 [46, 470[46 MustHaveRegister 166 ShouldHaveRegister 172 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d v16|d [50, 93[[470, 488[92 ShouldHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v17|d [50, 93[92 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d v18|d [50, 93[92 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v60|d [50, 466[60 ShouldHaveRegister 84 ShouldHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v12|D DOUBLE "[xmm6|D]" v12|D -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v13|D DOUBLE "[xmm6|D]" v13|D -1 [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v14|D DOUBLE "[xmm6|D]" v14|D -1 [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v15|D DOUBLE "[xmm6|D]" v15|D -1 [90, 450[90 MustHaveRegister 174 MustHaveRegister 290 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d v16|d [94, 395[[396, 406[[410, 446[[450, 469[394 ShouldHaveRegister 406 ShouldHaveRegister 446 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d v9|d [94, 362[[410, 420[[450, 469[362 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r11|d]" v18|d v10|d [94, 392[[410, 441[[450, 469[368 ShouldHaveRegister 392 ShouldHaveRegister 440 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r9|d]" v19|d v52|d [94, 380[[410, 420[104 ShouldHaveRegister 158 ShouldHaveRegister 366 ShouldHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v20|D DOUBLE "[xmm7|D]" v20|D -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v21|D DOUBLE "[xmm7|D]" v21|D -1 [160, 162[160 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v22|D DOUBLE "[xmm7|D]" v22|D -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v23|D DOUBLE "[xmm7|D]" v23|D -1 [164, 320[[410, 420[164 MustHaveRegister 166 MustHaveRegister 282 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd  "NoSpillStore"
  v24|D DOUBLE "[xmm8|D]" v24|D -1 [166, 170[166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|D DOUBLE "[xmm9|D]" v25|D -1 [168, 203[[410, 420[168 MustHaveRegister 178 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v26|D DOUBLE "[xmm8|D]" v26|D -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v27|D DOUBLE "[xmm8|D]" v27|D -1 [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v28|D DOUBLE "[xmm8|D]" v28|D -1 [174, 203[[410, 420[174 MustHaveRegister 176 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v29|D DOUBLE "[xmm10|D]" v29|D -1 [176, 203[[410, 420[176 MustHaveRegister 178 ShouldHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v30|D DOUBLE "[xmm11|D]" v30|D -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d -1 [194, 203[202 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rdi|d]" v32|d -1 [194, 203[202 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbx|d]" v33|d v33|d [204, 309[[320, 364[308 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d v34|d [204, 309[214 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rsi|d]" v35|d v40|d [204, 278[226 ShouldHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v36|D DOUBLE "[xmm8|D]" v36|D v47|D [204, 280[280 ShouldHaveRegister  "NoSpillStore"
  v37|D DOUBLE "[xmm9|D]" v37|D v46|D [204, 288[288 ShouldHaveRegister  "NoSpillStore"
  v38|D DOUBLE "[xmm10|D]" v38|D v43|D [204, 280[280 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbp|q]" v39|q -1 [276, 277[276 MustHaveRegister  "NoDefinitionFound"
  v40|d DWORD "[rsi|d]" v40|d v35|d [278, 309[[310, 319[278 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v41|D DOUBLE "[xmm8|D]" v41|D -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v42|D DOUBLE "[xmm8|D]" v42|D -1 [282, 286[282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v43|D DOUBLE "[xmm10|D]" v43|D v38|D [284, 309[[310, 319[284 MustHaveRegister 294 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v44|D DOUBLE "[xmm8|D]" v44|D -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v45|D DOUBLE "[xmm8|D]" v45|D -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v46|D DOUBLE "[xmm9|D]" v46|D v37|D [290, 309[[310, 319[290 MustHaveRegister 292 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v47|D DOUBLE "[xmm8|D]" v47|D v36|D [292, 309[[310, 319[292 MustHaveRegister 294 ShouldHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v48|D DOUBLE "[xmm11|D]" v48|D -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdi|q]" v49|q -1 [360, 361[360 MustHaveRegister  "NoDefinitionFound"
  v50|d DWORD "[rcx|d]" v50|d v17|d [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rbx|d]" v51|d v50|d [364, 395[[396, 406[[420, 444[364 MustHaveRegister 394 ShouldHaveRegister 406 ShouldHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rdi|d]" v52|d v19|d [366, 395[[396, 409[[420, 449[366 MustHaveRegister 394 ShouldHaveRegister 408 ShouldHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d v16|d [406, 409[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rcx|d]" v54|d -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rcx|d]" v55|d v54|d [440, 442[440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbx|d]" v56|d v51|d [444, 446[444 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d v16|d [446, 449[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v18|d [392, 395[392 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r9|q]" v59|q -1 [464, 465[464 MustHaveRegister  "NoDefinitionFound"
  v60|d DWORD "[r8|d]" v60|d v11|d [466, 469[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   38  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   40  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   44  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   46  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[0|0x0], int[0|0x0], int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   50  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   88  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   90  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [v8|DWORD, v9|DWORD, v10|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   94  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  182  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [int[0|0x0], int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  194  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v31|DWORD, v32|DWORD, int[1|0x1], v29|DOUBLE, v28|DOUBLE, v25|DOUBLE] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  204  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  278  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  296  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  298  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [v33|DWORD, v34|DWORD, v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0], v40|DWORD, v47|DOUBLE, v46|DOUBLE, v43|DOUBLE] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  362  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v51|DWORD, v58|DWORD, v52|DWORD] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v53|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], int[0|0x0]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  440  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, int[0|0x0], int[0|0x0], v52|DWORD] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  466  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [v16|DWORD, v17|DWORD, v18|DWORD, v60|DWORD] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v8|d [0, 1[[488, 490[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v55|d [0, 1[[442, 445[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 32[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|d DWORD "[rdx|d]" v0|d rdx|d [32, 470[32 MustHaveRegister 34 ShouldHaveRegister 40 ShouldHaveRegister 60 MustHaveRegister 104 MustHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d v0|d [34, 470[34 MustHaveRegister 380 MustHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v2|D DOUBLE "[xmm0|D]" v2|D -1 [36, 470[36 MustHaveRegister 180 ShouldHaveRegister 296 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v3|D DOUBLE "[xmm1|D]" v3|D -1 [38, 470[38 MustHaveRegister 90 ShouldHaveRegister 469 LiveAtLoopEnd  "NoSpillStore"
  v4|D DOUBLE "[xmm2|D]" v4|D -1 [40, 470[40 MustHaveRegister 88 ShouldHaveRegister 162 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v5|D DOUBLE "[xmm3|D]" v5|D -1 [42, 470[42 MustHaveRegister 164 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v6|D DOUBLE "[xmm4|D]" v6|D -1 [44, 470[44 MustHaveRegister 86 ShouldHaveRegister 160 ShouldHaveRegister 170 ShouldHaveRegister 286 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd 469 LiveAtLoopEnd  "NoSpillStore"
  v7|D DOUBLE "[xmm5|D]" v7|D -1 [46, 470[46 MustHaveRegister 166 ShouldHaveRegister 172 ShouldHaveRegister 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d v16|d [50, 93[[470, 488[92 ShouldHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v17|d [50, 93[92 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d v18|d [50, 93[92 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v60|d [50, 466[60 ShouldHaveRegister 84 ShouldHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v12|D DOUBLE "[xmm6|D]" v12|D -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v13|D DOUBLE "[xmm6|D]" v13|D -1 [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v14|D DOUBLE "[xmm6|D]" v14|D -1 [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v15|D DOUBLE "[xmm6|D]" v15|D -1 [90, 450[90 MustHaveRegister 174 MustHaveRegister 290 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd 395 LiveAtLoopEnd 409 LiveAtLoopEnd 449 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d v16|d [94, 395[[396, 406[[410, 446[[450, 469[394 ShouldHaveRegister 406 ShouldHaveRegister 446 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d v9|d [94, 362[[410, 420[[450, 469[362 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r11|d]" v18|d v10|d [94, 392[[410, 441[[450, 469[368 ShouldHaveRegister 392 ShouldHaveRegister 440 ShouldHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r9|d]" v19|d v52|d [94, 380[[410, 420[104 ShouldHaveRegister 158 ShouldHaveRegister 366 ShouldHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v20|D DOUBLE "[xmm7|D]" v20|D -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v21|D DOUBLE "[xmm7|D]" v21|D -1 [160, 162[160 MustHaveRegister 162 MustHaveRegister  "NoSpillStore"
  v22|D DOUBLE "[xmm7|D]" v22|D -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v23|D DOUBLE "[xmm7|D]" v23|D -1 [164, 320[[410, 420[164 MustHaveRegister 166 MustHaveRegister 282 ShouldHaveRegister 309 LiveAtLoopEnd 319 LiveAtLoopEnd  "NoSpillStore"
  v24|D DOUBLE "[xmm8|D]" v24|D -1 [166, 170[166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|D DOUBLE "[xmm9|D]" v25|D -1 [168, 203[[410, 420[168 MustHaveRegister 178 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v26|D DOUBLE "[xmm8|D]" v26|D -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v27|D DOUBLE "[xmm8|D]" v27|D -1 [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v28|D DOUBLE "[xmm8|D]" v28|D -1 [174, 203[[410, 420[174 MustHaveRegister 176 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v29|D DOUBLE "[xmm10|D]" v29|D -1 [176, 203[[410, 420[176 MustHaveRegister 178 ShouldHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v30|D DOUBLE "[xmm11|D]" v30|D -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d -1 [194, 203[202 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rdi|d]" v32|d -1 [194, 203[202 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbx|d]" v33|d v33|d [204, 309[[320, 364[308 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d v34|d [204, 309[214 MustHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rsi|d]" v35|d v40|d [204, 278[226 ShouldHaveRegister 278 ShouldHaveRegister  "NoSpillStore"
  v36|D DOUBLE "[xmm8|D]" v36|D v47|D [204, 280[280 ShouldHaveRegister  "NoSpillStore"
  v37|D DOUBLE "[xmm9|D]" v37|D v46|D [204, 288[288 ShouldHaveRegister  "NoSpillStore"
  v38|D DOUBLE "[xmm10|D]" v38|D v43|D [204, 280[280 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbp|q]" v39|q -1 [276, 277[276 MustHaveRegister  "NoDefinitionFound"
  v40|d DWORD "[rsi|d]" v40|d v35|d [278, 309[[310, 319[278 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v41|D DOUBLE "[xmm8|D]" v41|D -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v42|D DOUBLE "[xmm8|D]" v42|D -1 [282, 286[282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v43|D DOUBLE "[xmm10|D]" v43|D v38|D [284, 309[[310, 319[284 MustHaveRegister 294 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v44|D DOUBLE "[xmm8|D]" v44|D -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v45|D DOUBLE "[xmm8|D]" v45|D -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v46|D DOUBLE "[xmm9|D]" v46|D v37|D [290, 309[[310, 319[290 MustHaveRegister 292 MustHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v47|D DOUBLE "[xmm8|D]" v47|D v36|D [292, 309[[310, 319[292 MustHaveRegister 294 ShouldHaveRegister 308 ShouldHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v48|D DOUBLE "[xmm11|D]" v48|D -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdi|q]" v49|q -1 [360, 361[360 MustHaveRegister  "NoDefinitionFound"
  v50|d DWORD "[rcx|d]" v50|d v17|d [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rbx|d]" v51|d v50|d [364, 395[[396, 406[[420, 444[364 MustHaveRegister 394 ShouldHaveRegister 406 ShouldHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rdi|d]" v52|d v19|d [366, 395[[396, 409[[420, 449[366 MustHaveRegister 394 ShouldHaveRegister 408 ShouldHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d v16|d [406, 409[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rcx|d]" v54|d -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rcx|d]" v55|d v54|d [440, 442[440 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbx|d]" v56|d v51|d [444, 446[444 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d v16|d [446, 449[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v18|d [392, 395[392 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r9|q]" v59|q -1 [464, 465[464 MustHaveRegister  "NoDefinitionFound"
  v60|d DWORD "[r8|d]" v60|d v11|d [466, 469[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v61|D DOUBLE "[vstack:0|D]" v61|D -1 [1, 2[ "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   38  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   40  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   44  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   46  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   50  <|@ instruction [v8|DWORD, v9|DWORD, v10|DWORD, v11|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   88  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   90  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   94  <|@ instruction [v16|DWORD, v17|DWORD, v18|DWORD, v19|DWORD] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  182  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  194  <|@ instruction [v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DOUBLE = MOVE input: v29|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = MOVE input: v25|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DOUBLE = MOVE input: v28|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DOUBLE = MOVE input: v61|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  204  <|@ instruction [v33|DWORD, v34|DWORD, v35|DWORD, v36|DOUBLE, v37|DOUBLE, v38|DOUBLE] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  278  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  296  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  298  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  362  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  440  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  466  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = DEC value: v0|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction v2|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   38  <|@ instruction v3|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   40  <|@ instruction v4|DOUBLE = CVTSI2SD value: v0|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   44  <|@ instruction v6|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   46  <|@ instruction v7|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v11|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v12|DOUBLE = CVTSI2SD value: v11|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction v13|DOUBLE = VMULSD (x: v12|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr   88  <|@ instruction v14|DOUBLE = VDIVSD (x: v13|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr   90  <|@ instruction v15|DOUBLE = VSUBSD (x: v14|DOUBLE, y: v3|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v19|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v20|DOUBLE = CVTSI2SD value: v19|DWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction v21|DOUBLE = VMULSD (x: v20|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction v22|DOUBLE = VDIVSD (x: v21|DOUBLE, y: v4|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction v23|DOUBLE = VSUBSD (x: v22|DOUBLE, y: v5|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction v24|DOUBLE = VADDSD (x: v23|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction v25|DOUBLE = VMULSD (x: v24|DOUBLE, y: v24|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction v26|DOUBLE = VMULSD (x: v24|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction v27|DOUBLE = VMULSD (x: v26|DOUBLE, y: v7|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction v28|DOUBLE = VADDSD (x: v15|DOUBLE, y: v27|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction v29|DOUBLE = VMULSD (x: v28|DOUBLE, y: v28|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction v30|DOUBLE = VADDSD (x: v25|DOUBLE, y: v29|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction UCOMIS (x: v30|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  182  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DOUBLE = MOVE input: v29|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = MOVE input: v25|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DOUBLE = MOVE input: v28|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DOUBLE = MOVE input: v61|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH x: v35|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD v38|DOUBLE - v37|DOUBLE - v36|DOUBLE - v23|DOUBLE - v35|DWORD v34|DWORD v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v39|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  278  <|@ instruction v40|DWORD = INC value: v35|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction v41|DOUBLE = VSUBSD (x: v38|DOUBLE, y: v36|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction v42|DOUBLE = VADDSD (x: v41|DOUBLE, y: v23|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction v43|DOUBLE = VMULSD (x: v42|DOUBLE, y: v42|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction v44|DOUBLE = VMULSD (x: v42|DOUBLE, y: v6|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction v45|DOUBLE = VMULSD (x: v44|DOUBLE, y: v37|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction v46|DOUBLE = VADDSD (x: v45|DOUBLE, y: v15|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction v47|DOUBLE = VMULSD (x: v46|DOUBLE, y: v46|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction v48|DOUBLE = VADDSD (x: v43|DOUBLE, y: v47|DOUBLE) size: XMM <|@ <|@
      nr  296  <|@ instruction UCOMIS (x: v48|DOUBLE, y: v2|DOUBLE) size: PD <|@ <|@
      nr  298  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD v15|DOUBLE - v19|DWORD - - - - - - - - - - v33|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: v49|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  362  <|@ instruction v50|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction v51|DWORD = ADD (x: v50|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v52|DWORD = INC value: v19|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v19|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction v58|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v53|DWORD = XOR (x: v16|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction v54|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  440  <|@ instruction v55|DWORD = SUB (x: v54|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction v56|DWORD = SHL (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction v57|DWORD = XOR (x: v16|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - v0|DWORD v16|DWORD v17|DWORD v18|DWORD v11|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: v59|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  466  <|@ instruction v60|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   38  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   40  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   44  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   46  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   88  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  182  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm8|DOUBLE = MOVE input: vstack:0|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  278  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  296  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  298  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  466  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   38  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   40  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   44  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   46  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   88  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  160  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  162  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  164  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  166  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  168  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  182  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction xmm8|DOUBLE = MOVE input: vstack:0|DOUBLE moveKind: DOUBLE // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  278  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  282  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  284  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  286  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  288  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  290  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  292  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  294  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  296  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  298  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  466  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction vstack:0|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: vstack:0|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|D DOUBLE "[vstack:0|D]" vstack:0|D -1 [230, 236[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|D DOUBLE "[stack:32|D]" vstack:0|D -1 [230, 236[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000] <|@ <|@
      nr   36  <|@ instruction xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000] <|@ <|@
      nr   38  <|@ instruction xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   42  <|@ instruction xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000] <|@ <|@
      nr   44  <|@ instruction xmm5|DOUBLE = MOVE input: double[0.0|0x0] <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4649821146224013174
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr   94  <|@ instruction xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr   96  <|@ instruction xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B16" "B18" "B19" 
    successors "B4" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4693095144694139290
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 4 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  170  <|@ instruction xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM <|@ <|@
      nr  172  <|@ instruction xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM <|@ <|@
      nr  174  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  176  <|@ instruction xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  178  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  180  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM <|@ <|@
      nr  182  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  184  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  186  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM <|@ <|@
      nr  188  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  190  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692957612380536163
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978126
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  230  <|@ instruction stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  232  <|@ instruction xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  234  <|@ instruction xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  236  <|@ instruction xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B12" "B11" 
    successors "B14" "B9" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 3
    probability 4711024598608858534
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 16 numbPhis: 6 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710903838649938938
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 3
    probability 4710678802289266777
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 73]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD xmm10|DOUBLE - xmm9|DOUBLE - xmm8|DOUBLE - xmm7|DOUBLE - rsi|DWORD rdi|DWORD rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73] <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  318  <|@ instruction xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM <|@ <|@
      nr  320  <|@ instruction xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  322  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM <|@ <|@
      nr  324  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  326  <|@ instruction xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM <|@ <|@
      nr  328  <|@ instruction xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM <|@ <|@
      nr  330  <|@ instruction xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM <|@ <|@
      nr  332  <|@ instruction UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD <|@ <|@
      nr  334  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4710437282371427586
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 3
    probability 4686968650208799461
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  346  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4689562248962472361
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4693088689683978125
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 147]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD xmm6|DOUBLE - r9|DWORD - - - - - - - - - - rbx|DWORD - - 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147] <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = SHL value: rcx|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4692225881203630549
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4692212971182439724
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4686968650208799458
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4679539158987650324
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4669614561748749016
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4649821146668683744
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4649821146224013173
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ st <@st|@reference-map: []
live-base-pointers: []
Mandelbrot.mandelbrot(int) [bci: 207]
locals: - rdx|DWORD r10|DWORD rcx|DWORD r11|DWORD r8|DWORD - - - - - - - - - - - - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207] <|@ <|@
      nr  510  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B20" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4649829942317035382
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 4 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iconst_0      
     3: istore_3      
     4: iconst_0      
     5: istore        4
     7: iconst_0      
     8: istore        5
    10: iload         5
    12: iload_1       
    13: if_icmpge     213
    16: ldc2_w        #11         // 2.0
    19: iload         5
    21: i2d           
    22: dmul          
    23: iload_1       
    24: i2d           
    25: ddiv          
    26: dconst_1      
    27: dsub          
    28: dstore        6
    30: iconst_0      
    31: istore        8
    33: iload         8
    35: iload_1       
    36: if_icmpge     207
    39: dconst_0      
    40: dstore        9
    42: dconst_0      
    43: dstore        11
    45: dconst_0      
    46: dstore        13
    48: ldc2_w        #11         // 2.0
    51: iload         8
    53: i2d           
    54: dmul          
    55: iload_1       
    56: i2d           
    57: ddiv          
    58: ldc2_w        #13         // 1.5
    61: dsub          
    62: dstore        15
    64: iconst_0      
    65: istore        17
    67: iconst_1      
    68: istore        18
    70: iconst_0      
    71: istore        19
    73: iload         18
    75: ifeq          147
    78: iload         17
    80: bipush        50
    82: if_icmpge     147
    85: dload         9
    87: dload         13
    89: dsub          
    90: dload         15
    92: dadd          
    93: dstore        20
    95: ldc2_w        #11         // 2.0
    98: dload         20
   100: dmul          
   101: dload         11
   103: dmul          
   104: dload         6
   106: dadd          
   107: dstore        11
   109: dload         20
   111: dload         20
   113: dmul          
   114: dstore        9
   116: dload         11
   118: dload         11
   120: dmul          
   121: dstore        13
   123: dload         9
   125: dload         13
   127: dadd          
   128: ldc2_w        #15         // 4.0
   131: dcmpl         
   132: ifle          141
   135: iconst_0      
   136: istore        18
   138: iconst_1      
   139: istore        19
   141: iinc          
   144: goto          73
   147: iload_3       
   148: iconst_1      
   149: ishl          
   150: iload         19
   152: iadd          
   153: istore_3      
   154: iinc          
   157: iload         4
   159: bipush        8
   161: if_icmpne     176
   164: iload_2       
   165: iload_3       
   166: ixor          
   167: istore_2      
   168: iconst_0      
   169: istore_3      
   170: iconst_0      
   171: istore        4
   173: goto          201
   176: iload         8
   178: iload_1       
   179: iconst_1      
   180: isub          
   181: if_icmpne     201
   184: iload_3       
   185: bipush        8
   187: iload         4
   189: isub          
   190: ishl          
   191: istore_3      
   192: iload_2       
   193: iload_3       
   194: ixor          
   195: istore_2      
   196: iconst_0      
   197: istore_3      
   198: iconst_0      
   199: istore        4
   201: iinc          
   204: goto          33
   207: iinc          
   210: goto          10
   213: iload_2       
   214: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85860200009090909090909090909090909048896c24108bc2ffc8c5fb100500000000c5fb100d00000000c5eb2ad2c5fb101d00000000c5fb102500000000c5d157ed41b80000000041bb00000000b90000000041ba00000000e9fd0100000f1f8400000000006666669090909090909090909090c4c14b2af0c5cb59f4c5cb5ef2c5cb5cf141b9000000006666660f1f8400000000006666669090909090413bd10f8ea101000090909090909090909090909090909090909090909090909090c4c1432af9c5c359fcc5c35efac5c35cfbc54358c5c4413b59c8c53b59c4c53b59c5c4414b58c0c4413b59d0c4413358dac5792ed80f8713010000909090bf01000000bb00000000909090be01000000c57b111424c4417928d1c4417928c8c57b100424660f1f4400009090909085ff0f84b90000009090909083fe320f8d660000009090909090909090909090909090909090909090909090498baf58040000854500ffc6c4412b5cc0c53b58c7c4413b59d0c53b59c4c4413b59c1c53b58cec4413359c1c4412b58d8c5792ed80f8705000000909090eb90909090bf00000000bb01000000eb81909090909090909090909090498bbf580400008507d1e103d9418bf9ffc74183fb070f842300000090909090413bc10f84420000009090909041ffc3448bcf8bcbe9abfeffff909090ebb8909090904433d3448bcf41bb00000000b900000000e98cfeffff909090bf00000000bb01000000e9e8feffff9090909090909090b907000000412bcbd3e34433d3448bcf41bb00000000b900000000e952feffff9090909090904d8b8f5804000041850141ffc090909090413bd00f8f02feffff9090909090909090418bc2488b6c24104883c418493ba7500400000f8711000000c348896c2410e800000000e96bfdfffff4488d0ddbffffff49898f68040000e91dfdfffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD  <||@
  Comment 76 32 rax|DWORD = DEC value: rdx|DWORD size: DWORD  <||@
  Comment 80 34 xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000]  <||@
  Comment 80 {DataSection[0x0]}  <||@
  Comment 88 36 xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000]  <||@
  Comment 88 {DataSection[0x8]}  <||@
  Comment 96 38 xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD  <||@
  Comment 100 40 xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 100 {DataSection[0x10]}  <||@
  Comment 108 42 xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000]  <||@
  Comment 108 {DataSection[0x18]}  <||@
  Comment 116 44 xmm5|DOUBLE = MOVE input: double[0.0|0x0]  <||@
  Comment 120 46 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 126 48 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 132 50 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 137 52 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 143 54 JUMP ~outgoingValues: [] destination: B0 -> B1  <||@
  Comment 148 block B2 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 148 68 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 160 70 NOP  <||@
  Comment 161 72 NOP  <||@
  Comment 162 74 NOP  <||@
  Comment 163 76 NOP  <||@
  Comment 164 78 NOP  <||@
  Comment 165 80 NOP  <||@
  Comment 166 82 NOP  <||@
  Comment 167 84 NOP  <||@
  Comment 168 86 NOP  <||@
  Comment 169 88 NOP  <||@
  Comment 170 90 xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD  <||@
  Comment 175 92 xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM  <||@
  Comment 179 94 xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 183 96 xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 187 98 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 193 100 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 193 block B3 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 193 102 [] = LABEL alignment: 16 numbPhis: 4 label: ?  <||@
  Comment 208 104 NOP  <||@
  Comment 209 106 NOP  <||@
  Comment 210 108 NOP  <||@
  Comment 211 110 NOP  <||@
  Comment 212 112 CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD  <||@
  Comment 221 block B4 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 221 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 221 116 NOP  <||@
  Comment 222 118 NOP  <||@
  Comment 223 120 NOP  <||@
  Comment 224 122 NOP  <||@
  Comment 225 124 NOP  <||@
  Comment 226 126 NOP  <||@
  Comment 227 128 NOP  <||@
  Comment 228 130 NOP  <||@
  Comment 229 132 NOP  <||@
  Comment 230 134 NOP  <||@
  Comment 231 136 NOP  <||@
  Comment 232 138 NOP  <||@
  Comment 233 140 NOP  <||@
  Comment 234 142 NOP  <||@
  Comment 235 144 NOP  <||@
  Comment 236 146 NOP  <||@
  Comment 237 148 NOP  <||@
  Comment 238 150 NOP  <||@
  Comment 239 152 NOP  <||@
  Comment 240 154 NOP  <||@
  Comment 241 156 NOP  <||@
  Comment 242 158 NOP  <||@
  Comment 243 160 NOP  <||@
  Comment 244 162 NOP  <||@
  Comment 245 164 NOP  <||@
  Comment 246 166 xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD  <||@
  Comment 251 168 xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM  <||@
  Comment 255 170 xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 259 172 xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 263 174 xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 267 176 xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 272 178 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM  <||@
  Comment 276 180 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 280 182 xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 285 184 xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 290 186 xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM  <||@
  Comment 295 188 UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD  <||@
  Comment 299 190 FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 305 block B6 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 305 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 305 208 NOP  <||@
  Comment 306 210 NOP  <||@
  Comment 307 212 NOP  <||@
  Comment 308 214 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 313 216 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 318 218 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 318 block B7 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 318 220 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 318 222 NOP  <||@
  Comment 319 224 NOP  <||@
  Comment 320 226 NOP  <||@
  Comment 321 228 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 326 230 stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE  <||@
  Comment 331 232 xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE  <||@
  Comment 336 234 xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE  <||@
  Comment 341 236 xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 346 238 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 346 block B8 loop 2 depth 3 outer 1 header:53|LoopBegin  <||@
  Comment 346 240 [] = LABEL alignment: 16 numbPhis: 6 label: ?  <||@
  Comment 352 242 NOP  <||@
  Comment 353 244 NOP  <||@
  Comment 354 246 NOP  <||@
  Comment 355 248 NOP  <||@
  Comment 356 250 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD  <||@
  Comment 364 block B9 loop 2 depth 3 outer 1 header:53|LoopBegin  <||@
  Comment 364 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 364 254 NOP  <||@
  Comment 365 256 NOP  <||@
  Comment 366 258 NOP  <||@
  Comment 367 260 NOP  <||@
  Comment 368 262 CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null  <||@
  Comment 377 block B10 loop 2 depth 3 outer 1 header:53|LoopBegin  <||@
  Comment 377 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 377 266 NOP  <||@
  Comment 378 268 NOP  <||@
  Comment 379 270 NOP  <||@
  Comment 380 272 NOP  <||@
  Comment 381 274 NOP  <||@
  Comment 382 276 NOP  <||@
  Comment 383 278 NOP  <||@
  Comment 384 280 NOP  <||@
  Comment 385 282 NOP  <||@
  Comment 386 284 NOP  <||@
  Comment 387 286 NOP  <||@
  Comment 388 288 NOP  <||@
  Comment 389 290 NOP  <||@
  Comment 390 292 NOP  <||@
  Comment 391 294 NOP  <||@
  Comment 392 296 NOP  <||@
  Comment 393 298 NOP  <||@
  Comment 394 300 NOP  <||@
  Comment 395 302 NOP  <||@
  Comment 396 304 NOP  <||@
  Comment 397 306 NOP  <||@
  Comment 398 308 NOP  <||@
  Comment 399 310 NOP  <||@
  Comment 400 312 SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73]  <||@
  Comment 407 []at Mandelbrot.mandelbrot(int) [bci: 73, duringCall: false, rethrow: false]
              |0  |1          |2          |3          |4          |5         |6            |7  |8         |9             |10  |11           |12  |13           |14  |15           |16  |17         |18         |19         |20  |21 
     locals:  |-  |rdx|DWORD  |r10|DWORD  |rcx|DWORD  |r11|DWORD  |r8|DWORD  |xmm6|DOUBLE  |-  |r9|DWORD  |xmm10|DOUBLE  |-   |xmm9|DOUBLE  |-   |xmm8|DOUBLE  |-   |xmm7|DOUBLE  |-   |rsi|DWORD  |rdi|DWORD  |rbx|DWORD  |-   |-    <||@
  Comment 407 {infopoint: SAFEPOINT}  <||@
  Comment 407 POLL_FAR  <||@
  Comment 410 314 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 412 316 xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 417 318 xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 421 320 xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 426 322 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM  <||@
  Comment 430 324 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 435 326 xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM  <||@
  Comment 439 328 xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 444 330 xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 449 332 UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD  <||@
  Comment 453 334 FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 459 block B12 loop 2 depth 3 outer 1 header:53|LoopBegin  <||@
  Comment 459 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 459 352 NOP  <||@
  Comment 460 354 NOP  <||@
  Comment 461 356 NOP  <||@
  Comment 462 358 JUMP ~outgoingValues: [] destination: B12 -> B8  <||@
  Comment 464 block B11 loop 2 depth 3 outer 1 header:53|LoopBegin  <||@
  Comment 464 336 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 464 338 NOP  <||@
  Comment 465 340 NOP  <||@
  Comment 466 342 NOP  <||@
  Comment 467 344 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 472 346 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 477 348 JUMP ~outgoingValues: [] destination: B11 -> B8  <||@
  Comment 479 block B13 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 479 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 479 362 NOP  <||@
  Comment 480 364 NOP  <||@
  Comment 481 366 NOP  <||@
  Comment 482 368 JUMP ~outgoingValues: [] destination: B13 -> B15  <||@
  Comment 482 block B15 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 482 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 482 382 NOP  <||@
  Comment 483 384 NOP  <||@
  Comment 484 386 NOP  <||@
  Comment 485 388 NOP  <||@
  Comment 486 390 NOP  <||@
  Comment 487 392 NOP  <||@
  Comment 488 394 NOP  <||@
  Comment 489 396 NOP  <||@
  Comment 490 398 NOP  <||@
  Comment 491 400 SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147]  <||@
  Comment 498 []at Mandelbrot.mandelbrot(int) [bci: 147, duringCall: false, rethrow: false]
              |0  |1          |2          |3          |4          |5         |6            |7  |8         |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19         |20  |21 
     locals:  |-  |rdx|DWORD  |r10|DWORD  |rcx|DWORD  |r11|DWORD  |r8|DWORD  |xmm6|DOUBLE  |-  |r9|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |rbx|DWORD  |-   |-    <||@
  Comment 498 {infopoint: SAFEPOINT}  <||@
  Comment 498 POLL_FAR  <||@
  Comment 500 402 rcx|DWORD = SHL value: rcx|DWORD size: DWORD  <||@
  Comment 502 404 rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 504 406 rdi|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 509 408 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null  <||@
  Comment 519 block B17 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 519 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 519 432 NOP  <||@
  Comment 520 434 NOP  <||@
  Comment 521 436 NOP  <||@
  Comment 522 438 NOP  <||@
  Comment 523 440 CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 532 block B19 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 532 476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 532 478 NOP  <||@
  Comment 533 480 NOP  <||@
  Comment 534 482 NOP  <||@
  Comment 535 484 NOP  <||@
  Comment 536 486 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 539 488 r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 542 490 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 544 492 JUMP ~outgoingValues: [] destination: B19 -> B3  <||@
  Comment 549 block B14 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 549 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 549 372 NOP  <||@
  Comment 550 374 NOP  <||@
  Comment 551 376 NOP  <||@
  Comment 552 378 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 554 block B16 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 554 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 554 412 NOP  <||@
  Comment 555 414 NOP  <||@
  Comment 556 416 NOP  <||@
  Comment 557 418 NOP  <||@
  Comment 558 420 r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 561 422 r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 564 424 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 570 426 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 575 428 JUMP ~outgoingValues: [] destination: B16 -> B3  <||@
  Comment 580 block B5 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 580 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 580 194 NOP  <||@
  Comment 581 196 NOP  <||@
  Comment 582 198 NOP  <||@
  Comment 583 200 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 588 202 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 593 204 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 598 block B18 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 598 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 598 444 NOP  <||@
  Comment 599 446 NOP  <||@
  Comment 600 448 NOP  <||@
  Comment 601 450 NOP  <||@
  Comment 602 452 NOP  <||@
  Comment 603 454 NOP  <||@
  Comment 604 456 NOP  <||@
  Comment 605 458 NOP  <||@
  Comment 606 460 rcx|DWORD = MOVE input: int[7|0x7]  <||@
  Comment 611 462 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 614 464 rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 616 466 r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 619 468 r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 622 470 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 628 472 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 633 474 JUMP ~outgoingValues: [] destination: B18 -> B3  <||@
  Comment 638 block B20 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 638 494 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 638 496 NOP  <||@
  Comment 639 498 NOP  <||@
  Comment 640 500 NOP  <||@
  Comment 641 502 NOP  <||@
  Comment 642 504 NOP  <||@
  Comment 643 506 NOP  <||@
  Comment 644 508 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207]  <||@
  Comment 651 []at Mandelbrot.mandelbrot(int) [bci: 207, duringCall: false, rethrow: false]
              |0  |1          |2          |3          |4          |5         |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21 
     locals:  |-  |rdx|DWORD  |r10|DWORD  |rcx|DWORD  |r11|DWORD  |r8|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 651 {infopoint: SAFEPOINT}  <||@
  Comment 651 POLL_FAR  <||@
  Comment 654 510 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 657 512 JUMP ~outgoingValues: [] destination: B20 -> B1  <||@
  Comment 657 block B1 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 657 56 [] = LABEL alignment: 0 numbPhis: 4 label: ?  <||@
  Comment 657 58 NOP  <||@
  Comment 658 60 NOP  <||@
  Comment 659 62 NOP  <||@
  Comment 660 64 NOP  <||@
  Comment 661 66 CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD  <||@
  Comment 670 block B21 null  <||@
  Comment 670 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 670 516 NOP  <||@
  Comment 671 518 NOP  <||@
  Comment 672 520 NOP  <||@
  Comment 673 522 NOP  <||@
  Comment 674 524 NOP  <||@
  Comment 675 526 NOP  <||@
  Comment 676 528 NOP  <||@
  Comment 677 530 NOP  <||@
  Comment 678 532 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 681 534 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 690 POLL_RETURN_FAR  <||@
  Comment 709 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 734 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 740 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 740 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 746 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 746 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9242[Mandelbrot.mandelbrot(int)]"
  method "HotSpotCompilation-9242[Mandelbrot.mandelbrot(int)]"
  date 1724269711247
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aaba840 448b560849bc0000002b787f00004d03d44d33e4493bc20f8523a8ccfe66669089842400c0feff4883ec189041817f20000000000f85860200009090909090909090909090909048896c24108bc2ffc8c5fb100588ffffffc5fb100d88ffffffc5eb2ad2c5fb101d84ffffffc5fb102584ffffffc5d157ed41b80000000041bb00000000b90000000041ba00000000e9fd0100000f1f8400000000006666669090909090909090909090c4c14b2af0c5cb59f4c5cb5ef2c5cb5cf141b9000000006666660f1f8400000000006666669090909090413bd10f8ea101000090909090909090909090909090909090909090909090909090c4c1432af9c5c359fcc5c35efac5c35cfbc54358c5c4413b59c8c53b59c4c53b59c5c4414b58c0c4413b59d0c4413358dac5792ed80f8713010000909090bf01000000bb00000000909090be01000000c57b111424c4417928d1c4417928c8c57b100424660f1f4400009090909085ff0f84b90000009090909083fe320f8d660000009090909090909090909090909090909090909090909090498baf58040000854500ffc6c4412b5cc0c53b58c7c4413b59d0c53b59c4c4413b59c1c53b58cec4413359c1c4412b58d8c5792ed80f8705000000909090eb90909090bf00000000bb01000000eb81909090909090909090909090498bbf580400008507d1e103d9418bf9ffc74183fb070f842300000090909090413bc10f84420000009090909041ffc3448bcf8bcbe9abfeffff909090ebb8909090904433d3448bcf41bb00000000b900000000e98cfeffff909090bf00000000bb01000000e9e8feffff9090909090909090b907000000412bcbd3e34433d3448bcf41bb00000000b900000000e952feffff9090909090904d8b8f5804000041850141ffc090909090413bd00f8f02feffff9090909090909090418bc2488b6c24104883c418493ba7500400000f8711000000c348896c2410e81607cbfee96bfdfffff4488d0ddbffffff49898f68040000e9dd14cdfef4e8d7a7e0fef4e8f103cdfef4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@2a92cb1a slotKind: QWORD  <||@
  Comment 76 32 rax|DWORD = DEC value: rdx|DWORD size: DWORD  <||@
  Comment 80 34 xmm0|DOUBLE = MOVE input: double[4.0|0x4010000000000000]  <||@
  Comment 80 {DataSection[0x0]}  <||@
  Comment 88 36 xmm1|DOUBLE = MOVE input: double[1.0|0x3ff0000000000000]  <||@
  Comment 88 {DataSection[0x8]}  <||@
  Comment 96 38 xmm2|DOUBLE = CVTSI2SD value: rdx|DWORD size: DWORD  <||@
  Comment 100 40 xmm3|DOUBLE = MOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 100 {DataSection[0x10]}  <||@
  Comment 108 42 xmm4|DOUBLE = MOVE input: double[2.0|0x4000000000000000]  <||@
  Comment 108 {DataSection[0x18]}  <||@
  Comment 116 44 xmm5|DOUBLE = MOVE input: double[0.0|0x0]  <||@
  Comment 120 46 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 126 48 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 132 50 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 137 52 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 143 54 JUMP ~outgoingValues: [] destination: B0 -> B1  <||@
  Comment 148 block B2 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 148 68 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 160 70 NOP  <||@
  Comment 161 72 NOP  <||@
  Comment 162 74 NOP  <||@
  Comment 163 76 NOP  <||@
  Comment 164 78 NOP  <||@
  Comment 165 80 NOP  <||@
  Comment 166 82 NOP  <||@
  Comment 167 84 NOP  <||@
  Comment 168 86 NOP  <||@
  Comment 169 88 NOP  <||@
  Comment 170 90 xmm6|DOUBLE = CVTSI2SD value: r8|DWORD size: DWORD  <||@
  Comment 175 92 xmm6|DOUBLE = VMULSD (x: xmm6|DOUBLE, y: xmm4|DOUBLE) size: XMM  <||@
  Comment 179 94 xmm6|DOUBLE = VDIVSD (x: xmm6|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 183 96 xmm6|DOUBLE = VSUBSD (x: xmm6|DOUBLE, y: xmm1|DOUBLE) size: XMM  <||@
  Comment 187 98 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 193 100 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 193 block B3 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 193 102 [] = LABEL alignment: 16 numbPhis: 4 label: ?  <||@
  Comment 208 104 NOP  <||@
  Comment 209 106 NOP  <||@
  Comment 210 108 NOP  <||@
  Comment 211 110 NOP  <||@
  Comment 212 112 CMPBRANCH (x: rdx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9986685024954288 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD  <||@
  Comment 221 block B4 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 221 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 221 116 NOP  <||@
  Comment 222 118 NOP  <||@
  Comment 223 120 NOP  <||@
  Comment 224 122 NOP  <||@
  Comment 225 124 NOP  <||@
  Comment 226 126 NOP  <||@
  Comment 227 128 NOP  <||@
  Comment 228 130 NOP  <||@
  Comment 229 132 NOP  <||@
  Comment 230 134 NOP  <||@
  Comment 231 136 NOP  <||@
  Comment 232 138 NOP  <||@
  Comment 233 140 NOP  <||@
  Comment 234 142 NOP  <||@
  Comment 235 144 NOP  <||@
  Comment 236 146 NOP  <||@
  Comment 237 148 NOP  <||@
  Comment 238 150 NOP  <||@
  Comment 239 152 NOP  <||@
  Comment 240 154 NOP  <||@
  Comment 241 156 NOP  <||@
  Comment 242 158 NOP  <||@
  Comment 243 160 NOP  <||@
  Comment 244 162 NOP  <||@
  Comment 245 164 NOP  <||@
  Comment 246 166 xmm7|DOUBLE = CVTSI2SD value: r9|DWORD size: DWORD  <||@
  Comment 251 168 xmm7|DOUBLE = VMULSD (x: xmm7|DOUBLE, y: xmm4|DOUBLE) size: XMM  <||@
  Comment 255 170 xmm7|DOUBLE = VDIVSD (x: xmm7|DOUBLE, y: xmm2|DOUBLE) size: XMM  <||@
  Comment 259 172 xmm7|DOUBLE = VSUBSD (x: xmm7|DOUBLE, y: xmm3|DOUBLE) size: XMM  <||@
  Comment 263 174 xmm8|DOUBLE = VADDSD (x: xmm7|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 267 176 xmm9|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 272 178 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM  <||@
  Comment 276 180 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm5|DOUBLE) size: XMM  <||@
  Comment 280 182 xmm8|DOUBLE = VADDSD (x: xmm6|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 285 184 xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 290 186 xmm11|DOUBLE = VADDSD (x: xmm9|DOUBLE, y: xmm10|DOUBLE) size: XMM  <||@
  Comment 295 188 UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD  <||@
  Comment 299 190 FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 305 block B6 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 305 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 305 208 NOP  <||@
  Comment 306 210 NOP  <||@
  Comment 307 212 NOP  <||@
  Comment 308 214 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 313 216 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 318 218 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 318 block B7 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 318 220 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 318 222 NOP  <||@
  Comment 319 224 NOP  <||@
  Comment 320 226 NOP  <||@
  Comment 321 228 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 326 230 stack:32|DOUBLE = MOVE input: xmm10|DOUBLE moveKind: DOUBLE  <||@
  Comment 331 232 xmm10|DOUBLE = MOVE input: xmm9|DOUBLE moveKind: DOUBLE  <||@
  Comment 336 234 xmm9|DOUBLE = MOVE input: xmm8|DOUBLE moveKind: DOUBLE  <||@
  Comment 341 236 xmm8|DOUBLE = MOVE input: stack:32|DOUBLE moveKind: DOUBLE  <||@
  Comment 346 238 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 346 block B8 loop 2 depth 3 outer 1 header:53|LoopBegin  <||@
  Comment 346 240 [] = LABEL alignment: 16 numbPhis: 6 label: ?  <||@
  Comment 352 242 NOP  <||@
  Comment 353 244 NOP  <||@
  Comment 354 246 NOP  <||@
  Comment 355 248 NOP  <||@
  Comment 356 250 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.02535382384964502 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B9 size: DWORD  <||@
  Comment 364 block B9 loop 2 depth 3 outer 1 header:53|LoopBegin  <||@
  Comment 364 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 364 254 NOP  <||@
  Comment 365 256 NOP  <||@
  Comment 366 258 NOP  <||@
  Comment 367 260 NOP  <||@
  Comment 368 262 CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.9608307931740957 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B13 y: 50 size: DWORD inlinedY: null  <||@
  Comment 377 block B10 loop 2 depth 3 outer 1 header:53|LoopBegin  <||@
  Comment 377 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 377 266 NOP  <||@
  Comment 378 268 NOP  <||@
  Comment 379 270 NOP  <||@
  Comment 380 272 NOP  <||@
  Comment 381 274 NOP  <||@
  Comment 382 276 NOP  <||@
  Comment 383 278 NOP  <||@
  Comment 384 280 NOP  <||@
  Comment 385 282 NOP  <||@
  Comment 386 284 NOP  <||@
  Comment 387 286 NOP  <||@
  Comment 388 288 NOP  <||@
  Comment 389 290 NOP  <||@
  Comment 390 292 NOP  <||@
  Comment 391 294 NOP  <||@
  Comment 392 296 NOP  <||@
  Comment 393 298 NOP  <||@
  Comment 394 300 NOP  <||@
  Comment 395 302 NOP  <||@
  Comment 396 304 NOP  <||@
  Comment 397 306 NOP  <||@
  Comment 398 308 NOP  <||@
  Comment 399 310 NOP  <||@
  Comment 400 312 SAFEPOINT temp: rbp|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:73]  <||@
  Comment 407 []at Mandelbrot.mandelbrot(int) [bci: 73, duringCall: false, rethrow: false]
              |0  |1          |2          |3          |4          |5         |6            |7  |8         |9             |10  |11           |12  |13           |14  |15           |16  |17         |18         |19         |20  |21 
     locals:  |-  |rdx|DWORD  |r10|DWORD  |rcx|DWORD  |r11|DWORD  |r8|DWORD  |xmm6|DOUBLE  |-  |r9|DWORD  |xmm10|DOUBLE  |-   |xmm9|DOUBLE  |-   |xmm8|DOUBLE  |-   |xmm7|DOUBLE  |-   |rsi|DWORD  |rdi|DWORD  |rbx|DWORD  |-   |-    <||@
  Comment 407 {infopoint: SAFEPOINT}  <||@
  Comment 407 POLL_FAR  <||@
  Comment 410 314 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 412 316 xmm8|DOUBLE = VSUBSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 417 318 xmm8|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm7|DOUBLE) size: XMM  <||@
  Comment 421 320 xmm10|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 426 322 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm4|DOUBLE) size: XMM  <||@
  Comment 430 324 xmm8|DOUBLE = VMULSD (x: xmm8|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 435 326 xmm9|DOUBLE = VADDSD (x: xmm8|DOUBLE, y: xmm6|DOUBLE) size: XMM  <||@
  Comment 439 328 xmm8|DOUBLE = VMULSD (x: xmm9|DOUBLE, y: xmm9|DOUBLE) size: XMM  <||@
  Comment 444 330 xmm11|DOUBLE = VADDSD (x: xmm10|DOUBLE, y: xmm8|DOUBLE) size: XMM  <||@
  Comment 449 332 UCOMIS (x: xmm11|DOUBLE, y: xmm0|DOUBLE) size: PD  <||@
  Comment 453 334 FLOATBRANCH trueDestinationProbability: 0.027073822189681906 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 unorderedIsTrue: false isSelfEqualsCheck: false  <||@
  Comment 459 block B12 loop 2 depth 3 outer 1 header:53|LoopBegin  <||@
  Comment 459 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 459 352 NOP  <||@
  Comment 460 354 NOP  <||@
  Comment 461 356 NOP  <||@
  Comment 462 358 JUMP ~outgoingValues: [] destination: B12 -> B8  <||@
  Comment 464 block B11 loop 2 depth 3 outer 1 header:53|LoopBegin  <||@
  Comment 464 336 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 464 338 NOP  <||@
  Comment 465 340 NOP  <||@
  Comment 466 342 NOP  <||@
  Comment 467 344 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 472 346 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 477 348 JUMP ~outgoingValues: [] destination: B11 -> B8  <||@
  Comment 479 block B13 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 479 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 479 362 NOP  <||@
  Comment 480 364 NOP  <||@
  Comment 481 366 NOP  <||@
  Comment 482 368 JUMP ~outgoingValues: [] destination: B13 -> B15  <||@
  Comment 482 block B15 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 482 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 482 382 NOP  <||@
  Comment 483 384 NOP  <||@
  Comment 484 386 NOP  <||@
  Comment 485 388 NOP  <||@
  Comment 486 390 NOP  <||@
  Comment 487 392 NOP  <||@
  Comment 488 394 NOP  <||@
  Comment 489 396 NOP  <||@
  Comment 490 398 NOP  <||@
  Comment 491 400 SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:147]  <||@
  Comment 498 []at Mandelbrot.mandelbrot(int) [bci: 147, duringCall: false, rethrow: false]
              |0  |1          |2          |3          |4          |5         |6            |7  |8         |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19         |20  |21 
     locals:  |-  |rdx|DWORD  |r10|DWORD  |rcx|DWORD  |r11|DWORD  |r8|DWORD  |xmm6|DOUBLE  |-  |r9|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |rbx|DWORD  |-   |-    <||@
  Comment 498 {infopoint: SAFEPOINT}  <||@
  Comment 498 POLL_FAR  <||@
  Comment 500 402 rcx|DWORD = SHL value: rcx|DWORD size: DWORD  <||@
  Comment 502 404 rbx|DWORD = ADD (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 504 406 rdi|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 509 408 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.12400000016818269 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 7 size: DWORD inlinedY: null  <||@
  Comment 519 block B17 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 519 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 519 432 NOP  <||@
  Comment 520 434 NOP  <||@
  Comment 521 436 NOP  <||@
  Comment 522 438 NOP  <||@
  Comment 523 440 CMPBRANCH (x: rax|DWORD, y: r9|DWORD) trueDestinationProbability: 0.001522000963316561 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 532 block B19 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 532 476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 532 478 NOP  <||@
  Comment 533 480 NOP  <||@
  Comment 534 482 NOP  <||@
  Comment 535 484 NOP  <||@
  Comment 536 486 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 539 488 r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 542 490 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 544 492 JUMP ~outgoingValues: [] destination: B19 -> B3  <||@
  Comment 549 block B14 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 549 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 549 372 NOP  <||@
  Comment 550 374 NOP  <||@
  Comment 551 376 NOP  <||@
  Comment 552 378 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 554 block B16 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 554 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 554 412 NOP  <||@
  Comment 555 414 NOP  <||@
  Comment 556 416 NOP  <||@
  Comment 557 418 NOP  <||@
  Comment 558 420 r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 561 422 r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 564 424 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 570 426 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 575 428 JUMP ~outgoingValues: [] destination: B16 -> B3  <||@
  Comment 580 block B5 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 580 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 580 194 NOP  <||@
  Comment 581 196 NOP  <||@
  Comment 582 198 NOP  <||@
  Comment 583 200 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 588 202 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 593 204 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 598 block B18 loop 1 depth 2 outer 0 header:29|LoopBegin  <||@
  Comment 598 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 598 444 NOP  <||@
  Comment 599 446 NOP  <||@
  Comment 600 448 NOP  <||@
  Comment 601 450 NOP  <||@
  Comment 602 452 NOP  <||@
  Comment 603 454 NOP  <||@
  Comment 604 456 NOP  <||@
  Comment 605 458 NOP  <||@
  Comment 606 460 rcx|DWORD = MOVE input: int[7|0x7]  <||@
  Comment 611 462 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 614 464 rbx|DWORD = SHL (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 616 466 r10|DWORD = XOR (x: r10|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 619 468 r9|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 622 470 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 628 472 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 633 474 JUMP ~outgoingValues: [] destination: B18 -> B3  <||@
  Comment 638 block B20 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 638 494 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 638 496 NOP  <||@
  Comment 639 498 NOP  <||@
  Comment 640 500 NOP  <||@
  Comment 641 502 NOP  <||@
  Comment 642 504 NOP  <||@
  Comment 643 506 NOP  <||@
  Comment 644 508 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:207]  <||@
  Comment 651 []at Mandelbrot.mandelbrot(int) [bci: 207, duringCall: false, rethrow: false]
              |0  |1          |2          |3          |4          |5         |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21 
     locals:  |-  |rdx|DWORD  |r10|DWORD  |rcx|DWORD  |r11|DWORD  |r8|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 651 {infopoint: SAFEPOINT}  <||@
  Comment 651 POLL_FAR  <||@
  Comment 654 510 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 657 512 JUMP ~outgoingValues: [] destination: B20 -> B1  <||@
  Comment 657 block B1 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 657 56 [] = LABEL alignment: 0 numbPhis: 4 label: ?  <||@
  Comment 657 58 NOP  <||@
  Comment 658 60 NOP  <||@
  Comment 659 62 NOP  <||@
  Comment 660 64 NOP  <||@
  Comment 661 66 CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9986710293853668 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 size: DWORD  <||@
  Comment 670 block B21 null  <||@
  Comment 670 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 670 516 NOP  <||@
  Comment 671 518 NOP  <||@
  Comment 672 520 NOP  <||@
  Comment 673 522 NOP  <||@
  Comment 674 524 NOP  <||@
  Comment 675 526 NOP  <||@
  Comment 676 528 NOP  <||@
  Comment 677 530 NOP  <||@
  Comment 678 532 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 681 534 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 690 POLL_RETURN_FAR  <||@
  Comment 709 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 734 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 740 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 740 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 746 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 746 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
