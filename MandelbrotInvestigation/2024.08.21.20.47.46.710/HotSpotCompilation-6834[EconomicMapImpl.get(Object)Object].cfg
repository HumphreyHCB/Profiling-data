begin_compilation
  name " HotSpotCompilation-6834[org.graalvm.collections.EconomicMapImpl.get(Object)]"
  method "HotSpotCompilation-6834[org.graalvm.collections.EconomicMapImpl.get(Object)]"
  date 1724269744067
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?9 ?238 ?251 v833 ?33 v835 ?44 v370 v834 v838 ?661 ?83 ?662 ?663 ?194 ?173 ?206 ?122 ?122 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?238 v850 ?33 ?44 v370 v439 ?194 ?206 v333 v481 i459 ?122 v150 v215 v384 ?173 v856 v329 v380 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.get(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 242
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v860 v770 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-156179|0xfffffffffffd9ded]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v856 
lastLocationAccess: - 
=== Succesors ===
next: a771 
=== Usages ===
v742 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v856 lastLocationAccess: - #next: a771  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a771 a780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a771 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.hashArray
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:616) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:252) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v833 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
v501 
=== Predecessor ===
v770 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v833 lastLocationAccess: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:616) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:252) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a771 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a771  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v770 
=== Succesors ===
=== Usages ===
v99 v844 v851 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v742 
index: - 
=== Succesors ===
=== Usages ===
v377 v325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v742 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 v826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245) [bci: 12]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 i35 i88 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a504 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: Equivalence$3@441713316
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$3
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$3@441713316]
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 v509 v512 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a506 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: Equivalence$1@811395695
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$1
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$1@811395695]
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 v508 v513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a776 a777 a786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i42 i117 i136 i140 i272 i182 i202 i213 i271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.get(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 244
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?246 ?184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a773 a778 a787 a791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 v45 ?206 ?44 i193 v207 v452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:252) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.17237102083151978
stamp: void
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
a771 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v25 #falseSuccessor: v24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
tid ?246 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
localsSize: 2
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 255
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?251 
=== Succesors ===
=== Usages ===
?194 ?238 ?206 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?251  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v192 
values: i36 i213 
=== Succesors ===
=== Usages ===
?194 v196 i202 ?206 i254 i213 ?238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v192 values: i36 i213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 192
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v191 
=== Succesors ===
next: i772 
=== Usages ===
i193 v197 v208 v214 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v191 #next: i772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i772 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.totalEntries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v834 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
v196 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v834 lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i772 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i193 y: i772  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.718851632535015
stamp: void
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
i772 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v199 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a773 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a773 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: i774 
=== Usages ===
a298 v836 
=== Predecessor ===
v199 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: i774  <|@  <|@
tid ?194 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: iload_2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
localsSize: 4
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?246 
values: a1 a2 i193 
=== Succesors ===
=== Usages ===
v864 i774 v832 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?246 values: a1 a2 i193  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a773 
=== Succesors ===
=== Usages ===
i774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i774 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-76811|0xfffffffffffed3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?194 
guard: - 
address: v836 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
v304 
=== Predecessor ===
a773 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?194 guard: - address: v836 lastLocationAccess: - #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i193 
y: i34 
=== Succesors ===
=== Usages ===
j502 v304 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i193 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i202 
y: i774 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i202 y: i774  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v565 
falseSuccessor: v567 
=== Usages ===
=== Predecessor ===
i774 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v565 #falseSuccessor: v567  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a775 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a775  <|@  <|@
f <@~|@floating>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a773 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a773  <|@  <|@
f <@~|@floating>@ <|@
tid j502 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i202 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i202  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a298 
index: j502 
=== Succesors ===
=== Usages ===
a775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: j502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a775 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v837 
lastLocationAccess: - 
=== Succesors ===
next: v832 
=== Usages ===
a314 v859 
=== Predecessor ===
v565 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v837 lastLocationAccess: - #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a775 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?194 
object: v859 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
a775 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?194 object: v859 #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid a314 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a775 
=== Succesors ===
=== Usages ===
v333 v215 v329 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a775  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a314 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a314  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.18927935443945054
stamp: void
=== Inputs ===
condition: v215 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v215 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v217 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a776 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a776 <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v838 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
a319 v330 v505 v507 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v838 lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a776 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a776  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9022127795497026
stamp: void
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v221 
=== Usages ===
=== Predecessor ===
a776 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v222 #falseSuccessor: v221  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a776 
y: a506 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a776 y: a506  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
localsSize: 4
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?246 
values: a1 a2 i193 
=== Succesors ===
=== Usages ===
?659 ?660 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?246 values: a1 a2 i193  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.7598352089306695
stamp: void
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v225 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v230 #falseSuccessor: v225  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v844 
lastLocationAccess: - 
=== Succesors ===
next: j328 
=== Usages ===
v839 v329 
=== Predecessor ===
v230 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v844 lastLocationAccess: - #next: j328  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v325 
index: - 
=== Succesors ===
=== Usages ===
j328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j328 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v839 
lastLocationAccess: - 
=== Succesors ===
next: i233 
=== Usages ===
v329 
=== Predecessor ===
v325 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v839 lastLocationAccess: - #next: i233  <|@  <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j328 
metaspaceMethod: v325 
arguments: a2 a314 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j328 metaspaceMethod: v325 arguments: a2 a314  <|@  <|@
tid ?659 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v329 
stateDuring: ?659 
=== Succesors ===
next: v242 
=== Usages ===
i241 
=== Predecessor ===
j328 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v329 stateDuring: ?659 #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
i233 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a776 
y: a504 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a776 y: a504  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.0010475646703995735
stamp: void
=== Inputs ===
condition: v505 
=== Succesors ===
trueSuccessor: v226 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v505 #trueSuccessor: v226 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i236 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i236  <|@  <|@
f <@~|@floating>@ <|@
tid a319 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a776 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a776  <|@  <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a319 a2 a314 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a319 a2 a314  <|@  <|@
tid ?660 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v333 
stateDuring: ?660 
=== Succesors ===
next: v243 
=== Usages ===
i241 
=== Predecessor ===
v229 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v333 stateDuring: ?660 #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
i236 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v239 
values: i233 i236 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v239 values: i233 i236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v242 v243 
=== Succesors ===
next: v212 
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v242 v243 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i241 
y: i36 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i241 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.8576642535728738
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v813 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v817 #falseSuccessor: v813  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
v817 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v818 v244 v245 
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v818 v244 v245 #next: v609  <|@  <|@
tid ?206 <|@
d <@d|@=== Debug Properties ===
bci: 29
bytecode: ifeq
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?246 
values: i36 a1 a2 i193 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?246 values: i36 a1 a2 i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateBefore: ?206 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?206 #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
=== Inputs ===
x: i193 
y: i34 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i193 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v813 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v814 v240 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v814 v240 #next: v208  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:266) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v864  <|@  <|@
f <@*|@fixed>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 305
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a777 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a777 <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v838 
lastLocationAccess: - 
=== Succesors ===
next: v63 
=== Usages ===
a336 v436 v508 v509 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v838 lastLocationAccess: - #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a777 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a777  <|@  <|@
tid ?184 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
localsSize: 2
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 253
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?251 
=== Succesors ===
=== Usages ===
?33 ?44 ?666 ?122 ?173 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?251  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
localsSize: 5
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 284
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?184 
values: a1 a1 a2 
=== Succesors ===
=== Usages ===
?662 ?663 ?83 ?87 ?661 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?184 values: a1 a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 j450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.8680541035860417
stamp: void
=== Inputs ===
condition: v436 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
a777 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v436 #trueSuccessor: v62 #falseSuccessor: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a777 
y: a506 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a777 y: a506  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.919390461591214
stamp: void
=== Inputs ===
condition: v508 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v508 #trueSuccessor: v70 #falseSuccessor: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v69 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v69 #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}]
keySuccessors: [I@3d9d6346
keys: [HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>, HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>]
profileData: PROFILED keyProbabilities: [0.36497081587777636, 0.0142997155556751, 0.0027504690305357373, 0.0010849903504112001, 0.0010849903504112001, 0.6158090188351903]
stamp: void
=== Inputs ===
value: v742 
=== Succesors ===
successors: v90 v94 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v742 #successors: v90 v94  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: j463 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:55) [bci: 7]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v850 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
j445 j450 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v850 lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:74) [bci: 18]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 3
stableDimension: 0
stamp: i64 [3]
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:74) [bci: 18]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64 [0 - 3] bits:0...0xx
=== Inputs ===
x: j463 
y: j460 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j463 y: j460  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:76) [bci: 60]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:76) [bci: 66]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j445 
y: j461 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j445 y: j461  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:75) [bci: 72]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v447 
falseSuccessor: v448 
=== Usages ===
=== Predecessor ===
j463 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v447 #falseSuccessor: v448  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 75]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 82]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64 [0 - 72057594037927935] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j463 
y: i143 
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j463 y: i143  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 88]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 32
stamp: i32
=== Inputs ===
value: j450 
=== Succesors ===
=== Usages ===
v452 i82 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j450  <|@  <|@
f <@~|@floating>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:78) [bci: 102]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i451 
y: i36 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i451 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:78) [bci: 113]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v452 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v452 #trueSuccessor: v457 #falseSuccessor: v453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:79) [bci: 116]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v448 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v456 
=== Succesors ===
next: i459 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v456 #next: i459  <|@  <|@
tid ?662 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a1 
=== Succesors ===
=== Usages ===
i459 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i459 <|@
d <@d|@=== Debug Properties ===
bci: 48
descriptor: HotSpotForeignCallDescriptor{identity_hashcode(Object)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[MarkWord], transition=SAFEPOINT}
descriptorName: identity_hashcode
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 123]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?662 
arguments: a2 
=== Succesors ===
next: v521 
=== Usages ===
i82 
=== Predecessor ===
v455 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?662 arguments: a2 #next: v521  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
i459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v742 
index: - 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v742 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
lastLocationAccess: - 
=== Succesors ===
next: j480 
=== Usages ===
v852 v481 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v851 lastLocationAccess: - #next: j480  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v478 
index: - 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v478 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j480 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v852 
lastLocationAccess: - 
=== Succesors ===
next: i91 
=== Usages ===
v481 
=== Predecessor ===
v478 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v852 lastLocationAccess: - #next: i91  <|@  <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j480 
metaspaceMethod: v478 
arguments: a2 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j480 metaspaceMethod: v478 arguments: a2  <|@  <|@
tid ?661 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a1 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
bci: 48
identity: ANY_LOCATION
inlineControl: Never
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v481 
stateDuring: ?661 
=== Succesors ===
next: v123 
=== Usages ===
i82 
=== Predecessor ===
j480 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v481 stateDuring: ?661 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
i91 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a777 
y: a504 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a777 y: a504  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v509 
=== Succesors ===
trueSuccessor: v642 
falseSuccessor: v643 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v509 #trueSuccessor: v642 #falseSuccessor: v643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 641
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.checkKeyNonNull(EconomicMapImpl.java:639) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x3f5cb787]: UnreachedCode@6[HotSpotMethod<EconomicMapImpl.getHashIndex(Object)>, 27]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i76 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i76  <|@  <|@
f <@~|@floating>@ <|@
tid a336 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a777 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a777  <|@  <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a336 a2 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a336 a2  <|@  <|@
tid ?663 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a1 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v439 
stateDuring: ?663 
=== Succesors ===
next: v79 
=== Usages ===
i82 
=== Predecessor ===
v643 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v439 stateDuring: ?663 #next: v79  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
i76 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v80 
values: i76 i451 i91 i459 
=== Succesors ===
=== Usages ===
?83 i85 i86 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v80 values: i76 i451 i91 i459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v79 v81 v123 v521 
=== Succesors ===
next: a778 
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v79 v81 v123 v521 #next: a778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a778 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: i779 
=== Usages ===
a338 v840 
=== Predecessor ===
v80 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: i779  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: iload_2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 415
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a1 - i82 
=== Succesors ===
=== Usages ===
v863 i779 i781 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a1 - i82  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a778 
=== Succesors ===
=== Usages ===
i779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i779 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-87051|0xfffffffffffeabf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v840 
lastLocationAccess: - 
=== Succesors ===
next: a780 
=== Usages ===
v106 v113 v345 
=== Predecessor ===
a778 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v840 lastLocationAccess: - #next: a780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a780 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.hashArray
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:533) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v833 
lastLocationAccess: - 
=== Succesors ===
next: i781 
=== Usages ===
v849 v846 v847 v848 
=== Predecessor ===
i779 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v833 lastLocationAccess: - #next: i781  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a780 
=== Succesors ===
=== Usages ===
i781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i781 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-143115|0xfffffffffffdd0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: v109 
=== Usages ===
v403 v413 i120 i117 v390 
=== Predecessor ===
a780 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v847 lastLocationAccess: - #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072]
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i779 
y: i112 
=== Succesors ===
=== Usages ===
v640 v623 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i779 y: i112  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 512
stableDimension: 0
stamp: i32 [512]
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i779 
y: i105 
=== Succesors ===
=== Usages ===
v109 v129 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i779 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9276714352646118
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v108 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
i781 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v108 #falseSuccessor: v107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:533) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v638 #falseSuccessor: v639  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:535) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:535) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i781 
y: i34 
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i781 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v118 
values: i781 i117 
=== Succesors ===
=== Usages ===
?87 i88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v118 values: i781 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v119 v121 
=== Succesors ===
next: v129 
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v119 v121 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
=== Inputs ===
x: i82 
y: i84 
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i82 y: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
=== Inputs ===
x: i82 
y: i85 
=== Succesors ===
=== Usages ===
?87 i89 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i82 y: i85  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i120 
y: i10 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i120 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
=== Inputs ===
x: i86 
y: i88 
=== Succesors ===
=== Usages ===
j514 i136 v390 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i86 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 23]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:55) [bci: 7]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j719 j719 j719 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:322) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9265104511094792
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v128 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i89 
y: i781 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i89 y: i781  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v577 
falseSuccessor: v579 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v577 #falseSuccessor: v579  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i782 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i782  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i89 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j514 
index: a780 
=== Succesors ===
=== Usages ===
i782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: a780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i782 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
i515 
=== Predecessor ===
v577 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v846 lastLocationAccess: - #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i782 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i782  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
i782 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: -100123
stableDimension: 0
stamp: i32 [-100123]
stampKind: i32
value: int[-100123|0xfffffffffffe78e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:325) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i89 
y: i34 
=== Succesors ===
=== Usages ===
j516 i140 v403 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i89 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i136 
y: i781 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i136 y: i781  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v583 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v581 #falseSuccessor: v583  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i136 
y: i34 
=== Succesors ===
=== Usages ===
j518 v413 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i136 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i140 
y: i781 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i140 y: i781  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v413 
=== Succesors ===
trueSuccessor: v585 
falseSuccessor: v587 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v413 #trueSuccessor: v585 #falseSuccessor: v587  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v621 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v621 #falseSuccessor: v622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:325) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i783 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i783  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i140 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i140  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j518 
index: a780 
=== Succesors ===
=== Usages ===
i783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: a780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i783 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
lastLocationAccess: - 
=== Succesors ===
next: i784 
=== Usages ===
i519 
=== Predecessor ===
v621 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v849 lastLocationAccess: - #next: i784  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i136 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i136  <|@  <|@
f <@~|@floating>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j516 
index: a780 
=== Succesors ===
=== Usages ===
i784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j516 index: a780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i784 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v848 
lastLocationAccess: - 
=== Succesors ===
next: v149 
=== Usages ===
i517 
=== Predecessor ===
i783 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v848 lastLocationAccess: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i783 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i783  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 65280] bits:0...0xxxxxxxx00000000
=== Inputs ===
x: i519 
y: i143 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i519 y: i143  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i784 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i784  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
=== Inputs ===
x: i144 
y: i517 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i144 y: i517  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
i784 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v146 
values: i515 i145 
=== Succesors ===
=== Usages ===
?33 i35 v37 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v146 values: i515 i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v147 v149 
=== Succesors ===
next: v40 
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v147 v149 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i36 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i148 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.70573922299302
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v39 #falseSuccessor: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:297) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i148 
y: i10 
=== Succesors ===
=== Usages ===
i42 ?44 ?173 i254 i254 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i148 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-2 - 131068] bits:x...x0
=== Inputs ===
x: i35 
y: i34 
=== Succesors ===
=== Usages ===
j510 i182 v345 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i35 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i779 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i779  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v345 
=== Succesors ===
trueSuccessor: v589 
falseSuccessor: v591 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v345 #trueSuccessor: v589 #falseSuccessor: v591  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a785 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a785  <|@  <|@
f <@~|@floating>@ <|@
tid a338 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a778 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a778  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i42 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a338 
index: j510 
=== Succesors ===
=== Usages ===
a785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a338 index: j510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a785 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v841 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
a353 
=== Predecessor ===
v589 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v841 lastLocationAccess: - #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a785 
=== Succesors ===
=== Usages ===
v150 v380 v384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a785  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a353 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a353  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.18927935443945054
stamp: void
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v152 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
a785 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v152 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@*|@fixed>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
v152 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a786 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a786 <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v838 
lastLocationAccess: - 
=== Succesors ===
next: v158 
=== Usages ===
a372 v381 v512 v513 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v838 lastLocationAccess: - #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a786 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a786  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9022127795497026
stamp: void
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
a786 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v157 #falseSuccessor: v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a786 
y: a506 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a786 y: a506  <|@  <|@
tid ?173 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
localsSize: 5
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 287
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?184 
values: a1 a2 i35 
=== Succesors ===
=== Usages ===
?664 ?665 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?184 values: a1 a2 i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.7598352089306695
stamp: void
=== Inputs ===
condition: v513 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v513 #trueSuccessor: v165 #falseSuccessor: v160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v844 
lastLocationAccess: - 
=== Succesors ===
next: j379 
=== Usages ===
v845 v380 
=== Predecessor ===
v165 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v844 lastLocationAccess: - #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v377 
index: - 
=== Succesors ===
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v845 
lastLocationAccess: - 
=== Succesors ===
next: i168 
=== Usages ===
v380 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v845 lastLocationAccess: - #next: i168  <|@  <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j379 
metaspaceMethod: v377 
arguments: a2 a353 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j379 metaspaceMethod: v377 arguments: a2 a353  <|@  <|@
tid ?664 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v380 
stateDuring: ?664 
=== Succesors ===
next: v177 
=== Usages ===
i176 
=== Predecessor ===
j379 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v380 stateDuring: ?664 #next: v177  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
i168 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a786 
y: a504 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a786 y: a504  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.0010475646703995735
stamp: void
=== Inputs ===
condition: v512 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v512 #trueSuccessor: v161 #falseSuccessor: v164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
v161 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i171 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i171  <|@  <|@
f <@~|@floating>@ <|@
tid a372 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a786 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a786  <|@  <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a372 a2 a353 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a372 a2 a353  <|@  <|@
tid ?665 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v384 
stateDuring: ?665 
=== Succesors ===
next: v178 
=== Usages ===
i176 
=== Predecessor ===
v164 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v384 stateDuring: ?665 #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
i171 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v174 
values: i168 i171 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v174 values: i168 i171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v177 v178 
=== Succesors ===
next: v48 
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v177 v178 #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i36 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i176 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.2900663694179227
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v805 
falseSuccessor: v801 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v805 #falseSuccessor: v801  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v806  <|@  <|@
f <@*|@fixed>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v806 v179 v180 
=== Succesors ===
next: a787 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v806 v179 v180 #next: a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a787 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: i788 
=== Usages ===
a355 v842 
=== Predecessor ===
v804 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: i788  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 29
bytecode: ifeq
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
sourceFile: EconomicMapImpl.java
sourceLine: 287
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?184 
values: i36 a1 a2 i35 
=== Succesors ===
=== Usages ===
v862 i788 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?184 values: i36 a1 a2 i35  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a787 
=== Succesors ===
=== Usages ===
i788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i788 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-91403|0xfffffffffffe9af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?44 
guard: - 
address: v842 
lastLocationAccess: - 
=== Succesors ===
next: v600 
=== Usages ===
v361 
=== Predecessor ===
a787 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?44 guard: - address: v842 lastLocationAccess: - #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-1 - 131069] bits:x...x1
=== Inputs ===
x: i42 
y: i34 
=== Succesors ===
=== Usages ===
j511 v361 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i42 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i788 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i182 y: i788  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v361 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v599 
=== Usages ===
=== Predecessor ===
i788 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v361 #trueSuccessor: v597 #falseSuccessor: v599  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a789 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a789  <|@  <|@
f <@~|@floating>@ <|@
tid a355 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a787 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a787  <|@  <|@
f <@~|@floating>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i182 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i182  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a355 
index: j511 
=== Succesors ===
=== Usages ===
a789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a355 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a789 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v843 
lastLocationAccess: - 
=== Succesors ===
next: v750 
=== Usages ===
a369 v745 v857 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v843 lastLocationAccess: - #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a789 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a789  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v745 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
a789 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v745 #trueSuccessor: v748 #falseSuccessor: v749  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v828  <|@  <|@
f <@*|@fixed>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a789 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
lastLocationAccess: - 
=== Succesors ===
next: v52 
=== Usages ===
v825 
=== Predecessor ===
v749 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 lastLocationAccess: - #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v790 
y: v824 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v790 y: v824  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.23445247169918648
stamp: void
=== Inputs ===
condition: v825 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v809 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v825 #trueSuccessor: v50 #falseSuccessor: v809  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 49]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i57 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i57  <|@  <|@
f <@~|@floating>@ <|@
tid a369 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a789 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a789  <|@  <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;>]
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
=== Inputs ===
arguments: a1 a2 a369 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a369  <|@  <|@
tid ?666 <|@
d <@d|@=== Debug Properties ===
bci: 56
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
localsSize: 5
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 292
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?184 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
bci: 56
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findWithCollision
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v370 
stateDuring: ?666 
=== Succesors ===
next: v258 
=== Usages ===
i254 
=== Predecessor ===
v50 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v370 stateDuring: ?666 #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
i57 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:297) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:297) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v862 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v862  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 362
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?44 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:288) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
v801 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v252 
values: i35 i193 i57 i35 
=== Succesors ===
=== Usages ===
?9 v11 i271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v252 values: i35 i193 i57 i35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v253 v255 v258 v827 
=== Succesors ===
next: v14 
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v253 v255 v258 v827 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i254 
y: i10 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i254 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 0.8477799890999939
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v797 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v797 #falseSuccessor: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:248) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v798  <|@  <|@
f <@*|@fixed>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v797 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v798 v256 v257 v259 v828 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v798 v256 v257 v259 v828 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:248) [bci: 22]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:248) [bci: 23]
stamp: void
=== Inputs ===
memoryMap: - 
result: a19 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a791 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a791 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: i792 
=== Usages ===
a483 v853 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: i792  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: istore_2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.get(Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
sourceFile: EconomicMapImpl.java
sourceLine: 244
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i254 a1 
=== Succesors ===
=== Usages ===
v861 i792 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i254 a1  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a791 
=== Succesors ===
=== Usages ===
i792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i792 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-124171|0xfffffffffffe1af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?9 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: v608 
=== Usages ===
v489 
=== Predecessor ===
a791 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?9 guard: - address: v853 lastLocationAccess: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid i271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i254 
y: i34 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i254 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i271 
y: i34 
=== Succesors ===
=== Usages ===
j522 v489 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i271 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i272 
y: i792 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i272 y: i792  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v489 
=== Succesors ===
trueSuccessor: v605 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
i792 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v489 #trueSuccessor: v605 #falseSuccessor: v607  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a793 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a793  <|@  <|@
f <@~|@floating>@ <|@
tid a483 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a791 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a791  <|@  <|@
f <@~|@floating>@ <|@
tid j522 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i272 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i272  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a483 
index: j522 
=== Succesors ===
=== Usages ===
a793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a483 index: j522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a793 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v854 
lastLocationAccess: - 
=== Succesors ===
next: v763 
=== Usages ===
a497 v758 v855 v858 
=== Predecessor ===
v605 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v854 lastLocationAccess: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid a497 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a793 
=== Succesors ===
=== Usages ===
a276 a276 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a793  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a793 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a793  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v761 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
a793 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v761 #falseSuccessor: v762  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v829  <|@  <|@
f <@*|@fixed>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v761 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a793 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
lastLocationAccess: - 
=== Succesors ===
next: v263 
=== Usages ===
v826 
=== Predecessor ===
v762 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 lastLocationAccess: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v794 
y: v824 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v794 y: v824  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.06058171590776673
stamp: void
=== Inputs ===
condition: v826 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v821 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v826 #trueSuccessor: v262 #falseSuccessor: v821  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:826) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a795 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a795  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a793 
=== Succesors ===
=== Usages ===
a795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a795 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:826) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v855 
lastLocationAccess: - 
=== Succesors ===
next: v275 
=== Usages ===
a500 
=== Predecessor ===
v262 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v855 lastLocationAccess: - #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid a500 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:826) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a795 
=== Succesors ===
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a795  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
a795 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:828) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v821 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a276 <|@
d <@d|@=== Debug Properties ===
stamp: a java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v274 
values: a500 a497 a497 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v274 values: a500 a497 a497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v275 v277 v829 
=== Succesors ===
next: v18 
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v275 v277 v829 #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 21]
stamp: void
=== Inputs ===
memoryMap: - 
result: a276 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a276  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v861  <|@  <|@
f <@*|@fixed>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 490
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
sourceFile: EconomicMapImpl.java
sourceLine: 284
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?184 
values: i148 a1 a2 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?184 values: i148 a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 346
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v725  <|@  <|@
f <@~|@floating>@ <|@
tid j727 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j719 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i726 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: -158739
stableDimension: 0
stamp: i32 [-158739]
stampKind: i32
value: int[-158739|0xfffffffffffd93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid i724 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: -106011
stableDimension: 0
stamp: i32 [-106011]
stampKind: i32
value: int[-106011|0xfffffffffffe61e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v587 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid i722 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: -103451
stableDimension: 0
stamp: i32 [-103451]
stampKind: i32
value: int[-103451|0xfffffffffffe6be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v583 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-158739 - -100123] bits:1...1xxxxxxx0xx1110x101
valueDescription: i32
=== Inputs ===
merge: v715 
values: i717 i722 i724 i726 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v715 values: i717 i722 i724 i726  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64 [0 - 2580] bits:0...0x0x0000x0x00
valueDescription: i64
=== Inputs ===
merge: v715 
values: j444 j444 j444 j727 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v715 values: j444 j444 j444 j727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v716 v721 v723 v725 
=== Succesors ===
next: v720 
=== Usages ===
i718 j719 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v716 v721 v723 v725 #next: v720  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 64
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
sourceFile: EconomicMapImpl.java
sourceLine: 416
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: i86 i120 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i86 i120  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateBefore: ?87 
actionAndReason: i718 
speculation: j719 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?87 actionAndReason: i718 speculation: j719  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 637
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
reason: UnreachedCode
speculation: {0x0000000000000794[index: 60, len: 20, hash: 0x49ee584f]: UnreachedCode@6[HotSpotMethod<EconomicMapImpl.getHashTableSize()>, 35]}
stamp: void
=== Inputs ===
stateBefore: ?83 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?83  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?9 ?238 ?251 v833 ?33 v835 ?44 v370 v834 v838 ?661 ?83 ?662 ?663 ?194 ?173 ?206 ?122 ?122 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?238 v850 ?33 ?44 v370 v439 ?194 ?206 v333 v481 i459 ?122 v150 v215 v384 ?173 v856 v329 v380 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.get(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 242
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v860 v770 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v770 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-156179|0xfffffffffffd9ded]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v856 
lastLocationAccess: - 
=== Succesors ===
next: a771 
=== Usages ===
v742 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v856 lastLocationAccess: - #next: a771  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a771 a780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a771 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.hashArray
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:616) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:252) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v833 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
v501 
=== Predecessor ===
v770 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v833 lastLocationAccess: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:616) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:252) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a771 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a771  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v770 
=== Succesors ===
=== Usages ===
v99 v844 v851 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
result [v4|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
stamp: void*
stride: S1
=== Inputs ===
base: v742 
index: - 
=== Succesors ===
=== Usages ===
v377 v325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v742 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 v826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245) [bci: 12]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 i35 i88 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a504 <|@
result NarrowOop[Equivalence$3@441713316] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: Equivalence$3@441713316
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$3
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$3@441713316]
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 v509 v512 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a506 <|@
result NarrowOop[Equivalence$1@811395695] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: Equivalence$1@811395695
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$1
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$1@811395695]
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 v508 v513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a776 a777 a786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i42 i117 i136 i140 i272 i182 i202 i213 i271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.get(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 244
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?246 ?184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a773 a778 a787 a791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 v45 ?206 ?44 i193 v207 v452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:252) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.17237102083151978
stamp: void
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
a771 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v25 #falseSuccessor: v24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
tid ?246 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
localsSize: 2
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 255
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?251 
=== Succesors ===
=== Usages ===
?194 ?238 ?206 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?251  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i193 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v192 
values: i36 i213 
=== Succesors ===
=== Usages ===
?194 v196 i202 ?206 i254 i213 ?238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v192 values: i36 i213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 192
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v191 
=== Succesors ===
next: i772 
=== Usages ===
i193 v197 v208 v214 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v191 #next: i772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i772 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.totalEntries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v834 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
v196 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v834 lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i772 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i193 y: i772  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.718851632535015
stamp: void
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
i772 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v199 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a773 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a773 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: i774 
=== Usages ===
a298 v836 
=== Predecessor ===
v199 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: i774  <|@  <|@
tid ?194 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: iload_2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
localsSize: 4
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?246 
values: a1 a2 i193 
=== Succesors ===
=== Usages ===
v864 i774 v832 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?246 values: a1 a2 i193  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
result [v7|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a773 
=== Succesors ===
=== Usages ===
i774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i774 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-76811|0xfffffffffffed3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?194 
guard: - 
address: v836 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
v304 
=== Predecessor ===
a773 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?194 guard: - address: v836 lastLocationAccess: - #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i193 
y: i34 
=== Succesors ===
=== Usages ===
j502 v304 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i193 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i202 
y: i774 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i202 y: i774  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v565 
falseSuccessor: v567 
=== Usages ===
=== Predecessor ===
i774 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v565 #falseSuccessor: v567  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a775 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a775  <|@  <|@
f <@~|@floating>@ <|@
tid a298 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a773 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a773  <|@  <|@
f <@~|@floating>@ <|@
tid j502 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i202 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i202  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
result [v9|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a298 
index: j502 
=== Succesors ===
=== Usages ===
a775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: j502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a775 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v837 
lastLocationAccess: - 
=== Succesors ===
next: v832 
=== Usages ===
a314 v859 
=== Predecessor ===
v565 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v837 lastLocationAccess: - #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
result [v10|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a775 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?194 
object: v859 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
a775 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?194 object: v859 #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid a314 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a775 
=== Succesors ===
=== Usages ===
v333 v215 v329 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a775  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a314 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a314  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.18927935443945054
stamp: void
=== Inputs ===
condition: v215 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v215 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v217 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a776 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a776 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v838 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
a319 v330 v505 v507 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v838 lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a776 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a776  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9022127795497026
stamp: void
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v221 
=== Usages ===
=== Predecessor ===
a776 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v222 #falseSuccessor: v221  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a776 
y: a506 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a776 y: a506  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
localsSize: 4
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?246 
values: a1 a2 i193 
=== Succesors ===
=== Usages ===
?659 ?660 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?246 values: a1 a2 i193  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.7598352089306695
stamp: void
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v225 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v230 #falseSuccessor: v225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v325 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v844 
lastLocationAccess: - 
=== Succesors ===
next: j328 
=== Usages ===
v839 v329 
=== Predecessor ===
v230 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v844 lastLocationAccess: - #next: j328  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
result [v13|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v325 
index: - 
=== Succesors ===
=== Usages ===
j328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j328 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v839 
lastLocationAccess: - 
=== Succesors ===
next: i233 
=== Usages ===
v329 
=== Predecessor ===
v325 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v839 lastLocationAccess: - #next: i233  <|@  <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j328 
metaspaceMethod: v325 
arguments: a2 a314 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j328 metaspaceMethod: v325 arguments: a2 a314  <|@  <|@
tid ?659 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i233 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v329 
stateDuring: ?659 
=== Succesors ===
next: v242 
=== Usages ===
i241 
=== Predecessor ===
j328 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v329 stateDuring: ?659 #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
i233 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a776 
y: a504 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a776 y: a504  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.0010475646703995735
stamp: void
=== Inputs ===
condition: v505 
=== Succesors ===
trueSuccessor: v226 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v505 #trueSuccessor: v226 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i236 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i236  <|@  <|@
f <@~|@floating>@ <|@
tid a319 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a776 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a776  <|@  <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a319 a2 a314 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a319 a2 a314  <|@  <|@
tid ?660 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i236 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v333 
stateDuring: ?660 
=== Succesors ===
next: v243 
=== Usages ===
i241 
=== Predecessor ===
v229 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v333 stateDuring: ?660 #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
i236 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i241 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v239 
values: i233 i236 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v239 values: i233 i236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v242 v243 
=== Succesors ===
next: v212 
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v242 v243 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i241 
y: i36 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i241 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.8576642535728738
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v813 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v817 #falseSuccessor: v813  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
v817 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v818 v244 v245 
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v818 v244 v245 #next: v609  <|@  <|@
tid ?206 <|@
d <@d|@=== Debug Properties ===
bci: 29
bytecode: ifeq
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?246 
values: i36 a1 a2 i193 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?246 values: i36 a1 a2 i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateBefore: ?206 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?206 #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
=== Inputs ===
x: i193 
y: i34 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i193 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v813 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v814 v240 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v814 v240 #next: v208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:266) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v864  <|@  <|@
f <@*|@fixed>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 305
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a777 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a777 <|@
result v21|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v838 
lastLocationAccess: - 
=== Succesors ===
next: v63 
=== Usages ===
a336 v436 v508 v509 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v838 lastLocationAccess: - #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a777 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a777  <|@  <|@
tid ?184 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
localsSize: 2
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 253
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?251 
=== Succesors ===
=== Usages ===
?33 ?44 ?666 ?122 ?173 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?251  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
localsSize: 5
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 284
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?184 
values: a1 a1 a2 
=== Succesors ===
=== Usages ===
?662 ?663 ?83 ?87 ?661 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?184 values: a1 a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 j450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.8680541035860417
stamp: void
=== Inputs ===
condition: v436 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
a777 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v436 #trueSuccessor: v62 #falseSuccessor: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a777 
y: a506 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a777 y: a506  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.919390461591214
stamp: void
=== Inputs ===
condition: v508 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v508 #trueSuccessor: v70 #falseSuccessor: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v69 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v69 #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}]
keySuccessors: [I@3d9d6346
keys: [HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>, HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>]
profileData: PROFILED keyProbabilities: [0.36497081587777636, 0.0142997155556751, 0.0027504690305357373, 0.0010849903504112001, 0.0010849903504112001, 0.6158090188351903]
stamp: void
=== Inputs ===
value: v742 
=== Succesors ===
successors: v90 v94 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v742 #successors: v90 v94  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: j463 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:55) [bci: 7]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v850 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
j445 j450 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v850 lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
result long[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:74) [bci: 18]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 3
stableDimension: 0
stamp: i64 [3]
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:74) [bci: 18]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64 [0 - 3] bits:0...0xx
=== Inputs ===
x: j463 
y: j460 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j463 y: j460  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:76) [bci: 60]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:76) [bci: 66]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j445 
y: j461 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j445 y: j461  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:75) [bci: 72]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v447 
falseSuccessor: v448 
=== Usages ===
=== Predecessor ===
j463 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v447 #falseSuccessor: v448  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 75]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 82]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64 [0 - 72057594037927935] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j463 
y: i143 
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j463 y: i143  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 88]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 32
stamp: i32
=== Inputs ===
value: j450 
=== Succesors ===
=== Usages ===
v452 i82 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j450  <|@  <|@
f <@~|@floating>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:78) [bci: 102]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i451 
y: i36 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i451 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:78) [bci: 113]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v452 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v452 #trueSuccessor: v457 #falseSuccessor: v453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:79) [bci: 116]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v448 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v456 
=== Succesors ===
next: i459 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v456 #next: i459  <|@  <|@
tid ?662 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a1 
=== Succesors ===
=== Usages ===
i459 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i459 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
descriptor: HotSpotForeignCallDescriptor{identity_hashcode(Object)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[MarkWord], transition=SAFEPOINT}
descriptorName: identity_hashcode
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 123]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?662 
arguments: a2 
=== Succesors ===
next: v521 
=== Usages ===
i82 
=== Predecessor ===
v455 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?662 arguments: a2 #next: v521  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
i459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
result [v4|QWORD + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v742 
index: - 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v742 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
lastLocationAccess: - 
=== Succesors ===
next: j480 
=== Usages ===
v852 v481 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v851 lastLocationAccess: - #next: j480  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
result [v27|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v478 
index: - 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v478 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j480 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v852 
lastLocationAccess: - 
=== Succesors ===
next: i91 
=== Usages ===
v481 
=== Predecessor ===
v478 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v852 lastLocationAccess: - #next: i91  <|@  <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j480 
metaspaceMethod: v478 
arguments: a2 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j480 metaspaceMethod: v478 arguments: a2  <|@  <|@
tid ?661 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a1 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
identity: ANY_LOCATION
inlineControl: Never
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v481 
stateDuring: ?661 
=== Succesors ===
next: v123 
=== Usages ===
i82 
=== Predecessor ===
j480 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v481 stateDuring: ?661 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
i91 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a777 
y: a504 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a777 y: a504  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v509 
=== Succesors ===
trueSuccessor: v642 
falseSuccessor: v643 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v509 #trueSuccessor: v642 #falseSuccessor: v643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 641
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.checkKeyNonNull(EconomicMapImpl.java:639) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x3f5cb787]: UnreachedCode@6[HotSpotMethod<EconomicMapImpl.getHashIndex(Object)>, 27]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i76 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i76  <|@  <|@
f <@~|@floating>@ <|@
tid a336 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a777 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a777  <|@  <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a336 a2 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a336 a2  <|@  <|@
tid ?663 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a1 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i76 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v439 
stateDuring: ?663 
=== Succesors ===
next: v79 
=== Usages ===
i82 
=== Predecessor ===
v643 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v439 stateDuring: ?663 #next: v79  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
i76 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i82 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v80 
values: i76 i451 i91 i459 
=== Succesors ===
=== Usages ===
?83 i85 i86 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v80 values: i76 i451 i91 i459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v79 v81 v123 v521 
=== Succesors ===
next: a778 
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v79 v81 v123 v521 #next: a778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a778 <|@
result v33|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: i779 
=== Usages ===
a338 v840 
=== Predecessor ===
v80 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: i779  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: iload_2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 415
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: a1 - i82 
=== Succesors ===
=== Usages ===
v863 i779 i781 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: a1 - i82  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
result [v33|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a778 
=== Succesors ===
=== Usages ===
i779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i779 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-87051|0xfffffffffffeabf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v840 
lastLocationAccess: - 
=== Succesors ===
next: a780 
=== Usages ===
v106 v113 v345 
=== Predecessor ===
a778 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v840 lastLocationAccess: - #next: a780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a780 <|@
result v35|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.hashArray
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:533) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v833 
lastLocationAccess: - 
=== Succesors ===
next: i781 
=== Usages ===
v849 v846 v847 v848 
=== Predecessor ===
i779 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v833 lastLocationAccess: - #next: i781  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
result [v35|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a780 
=== Succesors ===
=== Usages ===
i781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i781 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-143115|0xfffffffffffdd0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: v109 
=== Usages ===
v403 v413 i120 i117 v390 
=== Predecessor ===
a780 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v847 lastLocationAccess: - #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072]
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i779 
y: i112 
=== Succesors ===
=== Usages ===
v640 v623 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i779 y: i112  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 512
stableDimension: 0
stamp: i32 [512]
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i779 
y: i105 
=== Succesors ===
=== Usages ===
v109 v129 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i779 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9276714352646118
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v108 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
i781 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v108 #falseSuccessor: v107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:533) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v638 #falseSuccessor: v639  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:535) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:535) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i781 
y: i34 
=== Succesors ===
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i781 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i120 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v118 
values: i781 i117 
=== Succesors ===
=== Usages ===
?87 i88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v118 values: i781 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v119 v121 
=== Succesors ===
next: v129 
=== Usages ===
i120 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v119 v121 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
=== Inputs ===
x: i82 
y: i84 
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i82 y: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
=== Inputs ===
x: i82 
y: i85 
=== Succesors ===
=== Usages ===
?87 i89 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i82 y: i85  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i120 
y: i10 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i120 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32
=== Inputs ===
x: i86 
y: i88 
=== Succesors ===
=== Usages ===
j514 i136 v390 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i86 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 23]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:55) [bci: 7]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j719 j719 j719 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:322) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9265104511094792
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v128 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i89 
y: i781 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i89 y: i781  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v577 
falseSuccessor: v579 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v577 #falseSuccessor: v579  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i782 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i782  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i89 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
result [v42|DWORD + v35|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j514 
index: a780 
=== Succesors ===
=== Usages ===
i782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: a780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i782 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
i515 
=== Predecessor ===
v577 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v846 lastLocationAccess: - #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i782 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i782  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
i782 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
result int[-100123|0xfffffffffffe78e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: -100123
stableDimension: 0
stamp: i32 [-100123]
stampKind: i32
value: int[-100123|0xfffffffffffe78e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:325) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i89 
y: i34 
=== Succesors ===
=== Usages ===
j516 i140 v403 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i89 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i136 
y: i781 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i136 y: i781  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v583 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v581 #falseSuccessor: v583  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i136 
y: i34 
=== Succesors ===
=== Usages ===
j518 v413 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i136 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i140 
y: i781 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i140 y: i781  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v413 
=== Succesors ===
trueSuccessor: v585 
falseSuccessor: v587 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v413 #trueSuccessor: v585 #falseSuccessor: v587  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v621 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v621 #falseSuccessor: v622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:325) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i783 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i783  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i140 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i140  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
result [v45|DWORD + v35|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j518 
index: a780 
=== Succesors ===
=== Usages ===
i783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: a780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i783 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
lastLocationAccess: - 
=== Succesors ===
next: i784 
=== Usages ===
i519 
=== Predecessor ===
v621 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v849 lastLocationAccess: - #next: i784  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i136 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i136  <|@  <|@
f <@~|@floating>@ <|@
tid v848 <|@
result [v44|DWORD + v35|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j516 
index: a780 
=== Succesors ===
=== Usages ===
i784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j516 index: a780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i784 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v848 
lastLocationAccess: - 
=== Succesors ===
next: v149 
=== Usages ===
i517 
=== Predecessor ===
i783 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v848 lastLocationAccess: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i783 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i783  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 65280] bits:0...0xxxxxxxx00000000
=== Inputs ===
x: i519 
y: i143 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i519 y: i143  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i784 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i784  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
=== Inputs ===
x: i144 
y: i517 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i144 y: i517  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
i784 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i148 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v146 
values: i515 i145 
=== Succesors ===
=== Usages ===
?33 i35 v37 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v146 values: i515 i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v147 v149 
=== Succesors ===
next: v40 
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v147 v149 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i36 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i148 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.70573922299302
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v39 #falseSuccessor: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:297) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i148 
y: i10 
=== Succesors ===
=== Usages ===
i42 ?44 ?173 i254 i254 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i148 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-2 - 131068] bits:x...x0
=== Inputs ===
x: i35 
y: i34 
=== Succesors ===
=== Usages ===
j510 i182 v345 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i35 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i779 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i779  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v345 
=== Succesors ===
trueSuccessor: v589 
falseSuccessor: v591 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v345 #trueSuccessor: v589 #falseSuccessor: v591  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a785 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a785  <|@  <|@
f <@~|@floating>@ <|@
tid a338 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a778 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a778  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i42 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
result [v53|QWORD[.] + v52|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a338 
index: j510 
=== Succesors ===
=== Usages ===
a785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a338 index: j510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a785 <|@
result v54|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v841 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
a353 
=== Predecessor ===
v589 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v841 lastLocationAccess: - #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a785 
=== Succesors ===
=== Usages ===
v150 v380 v384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a785  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a353 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a353  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:270) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.18927935443945054
stamp: void
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v152 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
a785 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v152 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:271) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v827  <|@  <|@
f <@*|@fixed>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
v152 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a786 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a786 <|@
result v56|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v838 
lastLocationAccess: - 
=== Succesors ===
next: v158 
=== Usages ===
a372 v381 v512 v513 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v838 lastLocationAccess: - #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a786 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a786  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.9022127795497026
stamp: void
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
a786 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v157 #falseSuccessor: v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a786 
y: a506 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a786 y: a506  <|@  <|@
tid ?173 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
localsSize: 5
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 287
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?184 
values: a1 a2 i35 
=== Succesors ===
=== Usages ===
?664 ?665 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?184 values: a1 a2 i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.7598352089306695
stamp: void
=== Inputs ===
condition: v513 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v513 #trueSuccessor: v165 #falseSuccessor: v160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v844 
lastLocationAccess: - 
=== Succesors ===
next: j379 
=== Usages ===
v845 v380 
=== Predecessor ===
v165 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v844 lastLocationAccess: - #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
result [v57|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v377 
index: - 
=== Succesors ===
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v845 
lastLocationAccess: - 
=== Succesors ===
next: i168 
=== Usages ===
v380 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v845 lastLocationAccess: - #next: i168  <|@  <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/lang/Object;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j379 
metaspaceMethod: v377 
arguments: a2 a353 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j379 metaspaceMethod: v377 arguments: a2 a353  <|@  <|@
tid ?664 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 275
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i168 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Object.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v380 
stateDuring: ?664 
=== Succesors ===
next: v177 
=== Usages ===
i176 
=== Predecessor ===
j379 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v380 stateDuring: ?664 #next: v177  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
i168 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a786 
y: a504 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a786 y: a504  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.0010475646703995735
stamp: void
=== Inputs ===
condition: v512 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v512 #trueSuccessor: v161 #falseSuccessor: v164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:280) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
v161 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:274) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i171 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i171  <|@  <|@
f <@~|@floating>@ <|@
tid a372 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:273) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a786 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a786  <|@  <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a372 a2 a353 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a372 a2 a353  <|@  <|@
tid ?665 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 277
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i171 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Equivalence.equals
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v384 
stateDuring: ?665 
=== Succesors ===
next: v178 
=== Usages ===
i176 
=== Predecessor ===
v164 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v384 stateDuring: ?665 #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
i171 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i176 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v174 
values: i168 i171 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v174 values: i168 i171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v177 v178 
=== Succesors ===
next: v48 
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v177 v178 #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i36 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i176 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.2900663694179227
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v805 
falseSuccessor: v801 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v805 #falseSuccessor: v801  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v806  <|@  <|@
f <@*|@fixed>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v806 v179 v180 
=== Succesors ===
next: a787 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v806 v179 v180 #next: a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a787 <|@
result v63|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: i788 
=== Usages ===
a355 v842 
=== Predecessor ===
v804 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: i788  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 29
bytecode: ifeq
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
sourceFile: EconomicMapImpl.java
sourceLine: 287
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?184 
values: i36 a1 a2 i35 
=== Succesors ===
=== Usages ===
v862 i788 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?184 values: i36 a1 a2 i35  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
result [v63|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a787 
=== Succesors ===
=== Usages ===
i788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i788 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-91403|0xfffffffffffe9af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?44 
guard: - 
address: v842 
lastLocationAccess: - 
=== Succesors ===
next: v600 
=== Usages ===
v361 
=== Predecessor ===
a787 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?44 guard: - address: v842 lastLocationAccess: - #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-1 - 131069] bits:x...x1
=== Inputs ===
x: i42 
y: i34 
=== Succesors ===
=== Usages ===
j511 v361 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i42 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i182 
y: i788 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i182 y: i788  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v361 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v599 
=== Usages ===
=== Predecessor ===
i788 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v361 #trueSuccessor: v597 #falseSuccessor: v599  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a789 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a789  <|@  <|@
f <@~|@floating>@ <|@
tid a355 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a787 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a787  <|@  <|@
f <@~|@floating>@ <|@
tid j511 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i182 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i182  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
result [v65|QWORD[.] + v64|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a355 
index: j511 
=== Succesors ===
=== Usages ===
a789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a355 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a789 <|@
result v66|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v843 
lastLocationAccess: - 
=== Succesors ===
next: v750 
=== Usages ===
a369 v745 v857 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v843 lastLocationAccess: - #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a789 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a789  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v745 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
a789 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v745 #trueSuccessor: v748 #falseSuccessor: v749  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v828  <|@  <|@
f <@*|@fixed>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
result [v66|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a789 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
lastLocationAccess: - 
=== Succesors ===
next: v52 
=== Usages ===
v825 
=== Predecessor ===
v749 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 lastLocationAccess: - #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v790 
y: v824 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v790 y: v824  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:291) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.23445247169918648
stamp: void
=== Inputs ===
condition: v825 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v809 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v825 #trueSuccessor: v50 #falseSuccessor: v809  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 49]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i57 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i57  <|@  <|@
f <@~|@floating>@ <|@
tid a369 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a789 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a789  <|@  <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, UnresolvedJavaType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;>]
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
=== Inputs ===
arguments: a1 a2 a369 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 a369  <|@  <|@
tid ?666 <|@
d <@d|@=== Debug Properties ===
bci: 56
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
localsSize: 5
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 292
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?184 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i57 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 56
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findWithCollision
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v370 
stateDuring: ?666 
=== Succesors ===
next: v258 
=== Usages ===
i254 
=== Predecessor ===
v50 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v370 stateDuring: ?666 #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
i57 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:297) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:297) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v862 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v862  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 362
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:290) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?44 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:288) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
v801 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i254 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v252 
values: i35 i193 i57 i35 
=== Succesors ===
=== Usages ===
?9 v11 i271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v252 values: i35 i193 i57 i35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v253 v255 v258 v827 
=== Succesors ===
next: v14 
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v253 v255 v258 v827 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i254 
y: i10 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i254 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245) [bci: 13]
profileData: PROFILED designatedSuccessorProbability: 0.8477799890999939
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v797 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v797 #falseSuccessor: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:248) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v798  <|@  <|@
f <@*|@fixed>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v797 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v798 v256 v257 v259 v828 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v798 v256 v257 v259 v828 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a19 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:248) [bci: 22]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:248) [bci: 23]
stamp: void
=== Inputs ===
memoryMap: - 
result: a19 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a791 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a791 <|@
result v70|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: i792 
=== Usages ===
a483 v853 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: i792  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: istore_2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.get(Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
sourceFile: EconomicMapImpl.java
sourceLine: 244
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i254 a1 
=== Succesors ===
=== Usages ===
v861 i792 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i254 a1  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
result [v70|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a791 
=== Succesors ===
=== Usages ===
i792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i792 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-124171|0xfffffffffffe1af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?9 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: v608 
=== Usages ===
v489 
=== Predecessor ===
a791 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?9 guard: - address: v853 lastLocationAccess: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid i271 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i254 
y: i34 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i254 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i271 
y: i34 
=== Succesors ===
=== Usages ===
j522 v489 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i271 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i272 
y: i792 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i272 y: i792  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v489 
=== Succesors ===
trueSuccessor: v605 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
i792 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v489 #trueSuccessor: v605 #falseSuccessor: v607  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a793 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a793  <|@  <|@
f <@~|@floating>@ <|@
tid a483 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a791 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a791  <|@  <|@
f <@~|@floating>@ <|@
tid j522 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i272 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i272  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
result [v73|QWORD[.] + v72|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a483 
index: j522 
=== Succesors ===
=== Usages ===
a793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a483 index: j522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a793 <|@
result v74|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v854 
lastLocationAccess: - 
=== Succesors ===
next: v763 
=== Usages ===
a497 v758 v855 v858 
=== Predecessor ===
v605 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v854 lastLocationAccess: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid a497 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a793 
=== Succesors ===
=== Usages ===
a276 a276 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a793  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a793 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a793  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v761 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
a793 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v761 #falseSuccessor: v762  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v829  <|@  <|@
f <@*|@fixed>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v761 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result [v74|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a793 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
lastLocationAccess: - 
=== Succesors ===
next: v263 
=== Usages ===
v826 
=== Predecessor ===
v762 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 lastLocationAccess: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v794 
y: v824 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v794 y: v824  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:825) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.06058171590776673
stamp: void
=== Inputs ===
condition: v826 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v821 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v826 #trueSuccessor: v262 #falseSuccessor: v821  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:826) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a795 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a795  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
result [v74|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a793 
=== Succesors ===
=== Usages ===
a795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a795 <|@
result v76|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:826) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v855 
lastLocationAccess: - 
=== Succesors ===
next: v275 
=== Usages ===
a500 
=== Predecessor ===
v262 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v855 lastLocationAccess: - #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid a500 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:826) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a795 
=== Succesors ===
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a795  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
a795 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:828) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v821 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a276 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v274 
values: a500 a497 a497 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v274 values: a500 a497 a497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v275 v277 v829 
=== Succesors ===
next: v18 
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v275 v277 v829 #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 21]
stamp: void
=== Inputs ===
memoryMap: - 
result: a276 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a276  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v861  <|@  <|@
f <@*|@fixed>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 490
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:824) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:246) [bci: 18]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findHash(Object)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
sourceFile: EconomicMapImpl.java
sourceLine: 284
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?184 
values: i148 a1 a2 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?184 values: i148 a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 346
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:798) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:286) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v725  <|@  <|@
f <@~|@floating>@ <|@
tid j727 <|@
result long[2580|0xa14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j719 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i726 <|@
result int[-158739|0xfffffffffffd93ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: -158739
stableDimension: 0
stamp: i32 [-158739]
stampKind: i32
value: int[-158739|0xfffffffffffd93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid i724 <|@
result int[-106011|0xfffffffffffe61e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: -106011
stableDimension: 0
stamp: i32 [-106011]
stampKind: i32
value: int[-106011|0xfffffffffffe61e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v587 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid i722 <|@
result int[-103451|0xfffffffffffe6be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
rawvalue: -103451
stableDimension: 0
stamp: i32 [-103451]
stampKind: i32
value: int[-103451|0xfffffffffffe6be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i718 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v583 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i718 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i32 [-158739 - -100123] bits:1...1xxxxxxx0xx1110x101
valueDescription: i32
=== Inputs ===
merge: v715 
values: i717 i722 i724 i726 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v715 values: i717 i722 i724 i726  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: i64 [0 - 2580] bits:0...0x0x0000x0x00
valueDescription: i64
=== Inputs ===
merge: v715 
values: j444 j444 j444 j727 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v715 values: j444 j444 j444 j727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v716 v721 v723 v725 
=== Succesors ===
next: v720 
=== Usages ===
i718 j719 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v716 v721 v723 v725 #next: v720  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 64
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
sourceFile: EconomicMapImpl.java
sourceLine: 416
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: i86 i120 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i86 i120  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
stateBefore: ?87 
actionAndReason: i718 
speculation: j719 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?87 actionAndReason: i718 speculation: j719  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 637
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
reason: UnreachedCode
speculation: {0x0000000000000794[index: 60, len: 20, hash: 0x49ee584f]: UnreachedCode@6[HotSpotMethod<EconomicMapImpl.getHashTableSize()>, 35]}
stamp: void
=== Inputs ===
stateBefore: ?83 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   82  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  142  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  188  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  234  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  246  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  300  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  304  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr  420  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  430  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  450  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr  452  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr  470  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  484  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  506  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  522  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr  542  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  576  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  688  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr  766  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  798  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr  800  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  802  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr  908  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  954  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr  966  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr 1026  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1080  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1084  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1106  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1168  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1196  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1198  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1200  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr 1284  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1314  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1318  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1370  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr 1390  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1392  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1424  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1508  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1522  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   82  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  142  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  188  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  234  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  246  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  300  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  304  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr  420  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  430  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  450  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr  452  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr  470  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  484  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  506  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  522  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr  542  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  576  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  688  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr  766  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  798  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr  800  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  802  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr  908  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  954  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr  966  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr 1026  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1080  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1084  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1106  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1168  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1196  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1198  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1200  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr 1284  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1314  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1318  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1370  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr 1390  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1392  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1424  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1508  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1522  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[242, 246[[298, 300[[426, 430[[906, 908[[962, 966[[1024, 1026[[1078, 1080[[1146, 1148[[1282, 1284[[1336, 1338[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|q [0, 1[[244, 245[[296, 299[[428, 429[[904, 907[[964, 965[[1024, 1025[[1076, 1079[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v11|q [0, 34[[238, 245[[294, 299[[428, 429[[902, 907[[958, 965[[1022, 1025[[1074, 1079[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v13|q [0, 1[[240, 245[[298, 299[[424, 429[[906, 907[[960, 965[[1024, 1025[[1078, 1079[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 32[[236, 245[[292, 299[[422, 429[[900, 907[[956, 965[[1020, 1025[[1072, 1079[[1280, 1282[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[[1282, 1283[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [32, 336[[346, 588[[598, 726[[736, 970[[980, 1118[[1150, 1174[[1224, 1288[[1340, 1371[[1372, 1393[[1394, 1425[[1426, 1447[[1448, 1479[[1480, 1511[[1512, 1543[32 MustHaveRegister 38 MustHaveRegister 58 MustHaveRegister 92 MustHaveRegister 108 MustHaveRegister 158 MustHaveRegister 191 LiveAtLoopEnd 502 MustHaveRegister 506 MustHaveRegister 658 MustHaveRegister 686 MustHaveRegister 900 ShouldHaveRegister 1166 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [34, 336[[346, 588[[598, 726[[736, 832[[872, 902[[912, 970[[980, 1096[[1224, 1234[[1244, 1288[[1340, 1350[[1372, 1393[[1394, 1425[[1426, 1447[[1448, 1479[[1480, 1511[[1512, 1543[34 MustHaveRegister 36 MustHaveRegister 144 ShouldHaveRegister 191 LiveAtLoopEnd 236 ShouldHaveRegister 294 ShouldHaveRegister 422 ShouldHaveRegister 448 MustHaveRegister 644 ShouldHaveRegister 902 ShouldHaveRegister 956 ShouldHaveRegister 1022 ShouldHaveRegister 1074 ShouldHaveRegister 1280 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [36, 42[36 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [38, 44[38 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v2|d [42, 336[[346, 588[[598, 662[[736, 832[[912, 952[[980, 1030[[1244, 1288[42 MustHaveRegister 191 LiveAtLoopEnd 232 MustHaveRegister 390 MustHaveRegister 418 MustHaveRegister 952 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [40, 43[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v20|d [82, 188[[192, 336[[832, 861[[1234, 1244[[1458, 1479[92 MustHaveRegister 110 ShouldHaveRegister 188 ShouldHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [108, 136[108 MustHaveRegister 112 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v6|d [110, 138[110 MustHaveRegister 112 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v7|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [138, 142[138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|d [142, 162[[192, 238[[250, 296[142 MustHaveRegister 144 MustHaveRegister 238 ShouldHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [158, 162[[192, 204[[250, 290[158 MustHaveRegister 160 MustHaveRegister 202 ShouldHaveRegister 260 ShouldHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [232, 240[232 MustHaveRegister 234 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [234, 242[234 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d rax|q [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v12|d [290, 292[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d rax|q [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v15|d [304, 314[314 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [186, 187[186 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[v20|d]" v20|d v6|d [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [58, 62[[346, 358[[980, 1018[58 MustHaveRegister 60 MustHaveRegister 356 ShouldHaveRegister 990 ShouldHaveRegister 1018 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [448, 468[448 MustHaveRegister 450 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|q [450, 452[450 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v22|q [468, 470[468 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [470, 483[470 MustHaveRegister 472 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d rax|q [1284, 1287[1284 MustHaveRegister 1286 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [418, 424[418 MustHaveRegister 420 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [420, 426[420 MustHaveRegister 426 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d rax|q [430, 433[430 MustHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v21|d [1018, 1020[1018 MustHaveRegister 1020 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d rax|q [1026, 1029[1026 MustHaveRegister 1028 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v29|d [484, 542[[806, 832[[1490, 1511[540 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [502, 588[[598, 638[[736, 832[502 MustHaveRegister 504 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [504, 588[[598, 616[[736, 832[504 MustHaveRegister 510 ShouldHaveRegister 548 ShouldHaveRegister 616 MustHaveRegister 778 ShouldHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [506, 572[[736, 800[[806, 832[506 MustHaveRegister 508 MustHaveRegister 572 MustHaveRegister 796 MustHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [508, 560[[736, 766[[806, 832[508 MustHaveRegister 520 ShouldHaveRegister 560 MustHaveRegister 750 MustHaveRegister 766 MustHaveRegister 828 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v36|d [828, 831[828 MustHaveRegister 830 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v37|d [522, 562[[736, 780[[1394, 1404[[1448, 1458[[1480, 1490[[1512, 1543[544 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d v32|d [540, 542[540 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v32|d [542, 562[[736, 780[[1394, 1404[[1448, 1458[[1480, 1490[[1512, 1543[542 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v38|d [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d v40|d [546, 572[[736, 748[546 MustHaveRegister 560 ShouldHaveRegister 572 MustHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d v50|d [572, 575[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d v42|d [748, 800[748 MustHaveRegister 750 ShouldHaveRegister 764 ShouldHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d v44|d [764, 796[764 MustHaveRegister 766 ShouldHaveRegister 796 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d -1 [796, 798[796 MustHaveRegister 798 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d v46|d [798, 802[798 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [800, 802[800 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d v47|d [802, 805[802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d v43|d [576, 588[[598, 618[[1404, 1425[586 MustHaveRegister 612 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v50|d [612, 692[[862, 871[[912, 970[[1030, 1105[[1224, 1234[[1340, 1350[[1426, 1447[612 MustHaveRegister 614 ShouldHaveRegister 870 ShouldHaveRegister 1104 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d v51|d [614, 688[[912, 970[[1030, 1096[[1224, 1234[[1340, 1350[614 MustHaveRegister 616 ShouldHaveRegister 640 MustHaveRegister 688 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v33|d [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v54|d [642, 662[[912, 958[[1030, 1076[642 MustHaveRegister 644 MustHaveRegister 958 ShouldHaveRegister 1076 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [658, 662[[912, 924[[1030, 1070[658 MustHaveRegister 660 MustHaveRegister 922 ShouldHaveRegister 1040 ShouldHaveRegister 1070 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [952, 960[952 MustHaveRegister 954 MustHaveRegister 960 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [954, 962[954 MustHaveRegister 962 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d rax|q [966, 969[966 MustHaveRegister 968 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v56|d [1070, 1072[1070 MustHaveRegister 1072 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d rax|q [1080, 1083[1080 MustHaveRegister 1082 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d v59|d [1084, 1094[1094 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d -1 [686, 708[686 MustHaveRegister 690 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d v52|d [688, 710[688 MustHaveRegister 690 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v63|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d -1 [710, 726[[872, 898[710 MustHaveRegister 712 MustHaveRegister 724 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v66|d [898, 904[898 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d rax|q [908, 911[908 MustHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d v6|d [1106, 1118[[1150, 1174[[1350, 1371[1116 ShouldHaveRegister 1168 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d -1 [1166, 1194[1166 MustHaveRegister 1172 MustHaveRegister 1194 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d v69|d [1168, 1170[1168 MustHaveRegister 1170 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d v71|d [1170, 1196[1170 MustHaveRegister 1172 MustHaveRegister 1196 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q v70|d [1194, 1196[1194 MustHaveRegister 1196 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d -1 [1196, 1214[[1298, 1312[1196 MustHaveRegister 1198 MustHaveRegister 1200 MustHaveRegister 1212 MustHaveRegister 1312 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q v74|d [1198, 1223[[1288, 1297[1198 MustHaveRegister 1222 ShouldHaveRegister 1296 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d -1 [1312, 1314[1312 MustHaveRegister 1314 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q v76|d [1314, 1317[1314 MustHaveRegister 1316 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v75|q [1318, 1336[1336 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d -1 [1522, 1538[1538 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q -1 [1522, 1540[1540 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[242, 246[[298, 300[[426, 430[[906, 908[[962, 966[[1024, 1026[[1078, 1080[[1146, 1148[[1282, 1284[[1336, 1338[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|q [0, 1[[244, 245[[296, 299[[428, 429[[904, 907[[964, 965[[1024, 1025[[1076, 1079[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v11|q [0, 34[[238, 245[[294, 299[[428, 429[[902, 907[[958, 965[[1022, 1025[[1074, 1079[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v13|q [0, 1[[240, 245[[298, 299[[424, 429[[906, 907[[960, 965[[1024, 1025[[1078, 1079[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 32[[236, 245[[292, 299[[422, 429[[900, 907[[956, 965[[1020, 1025[[1072, 1079[[1280, 1282[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[[1282, 1283[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 204[32 MustHaveRegister 38 MustHaveRegister 58 MustHaveRegister 92 MustHaveRegister 108 MustHaveRegister 158 MustHaveRegister 191 LiveAtLoopEnd  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [34, 237[34 MustHaveRegister 36 MustHaveRegister 144 ShouldHaveRegister 191 LiveAtLoopEnd 236 ShouldHaveRegister  "SpillInDominator"
  v2|d DWORD "[rbx|d]" v2|d -1 [36, 42[36 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [38, 44[38 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rbx|q]" v4|q v2|d [42, 239[42 MustHaveRegister 191 LiveAtLoopEnd 232 MustHaveRegister  "SpillInDominator"
  v5|q QWORD "[r10|q]" v5|q -1 [40, 43[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d v20|d [82, 188[[192, 204[92 MustHaveRegister 110 ShouldHaveRegister 188 ShouldHaveRegister  "OneSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [108, 136[108 MustHaveRegister 112 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v6|d [110, 138[110 MustHaveRegister 112 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v7|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [138, 142[138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v10|d [142, 162[[192, 238[[250, 296[142 MustHaveRegister 144 MustHaveRegister 238 ShouldHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d -1 [158, 162[[192, 204[[250, 290[158 MustHaveRegister 160 MustHaveRegister 202 ShouldHaveRegister 260 ShouldHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q -1 [232, 240[232 MustHaveRegister 234 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r8|q]" v14|q -1 [234, 242[234 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d rax|q [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q v12|d [290, 292[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|q [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v15|d [304, 314[314 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [186, 187[186 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[r10|d]" v20|d v6|d [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [58, 62[[346, 358[[980, 1018[58 MustHaveRegister 60 MustHaveRegister 356 ShouldHaveRegister 990 ShouldHaveRegister 1018 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [448, 468[448 MustHaveRegister 450 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|q [450, 452[450 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v22|q [468, 470[468 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [470, 483[470 MustHaveRegister 472 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|q [1284, 1287[1284 MustHaveRegister 1286 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q -1 [418, 424[418 MustHaveRegister 420 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q -1 [420, 426[420 MustHaveRegister 426 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d rax|q [430, 433[430 MustHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r10|q]" v30|q v21|d [1018, 1020[1018 MustHaveRegister 1020 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d rax|q [1026, 1029[1026 MustHaveRegister 1028 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d v29|d [484, 542[[806, 832[[1490, 1511[540 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rcx|d]" v33|d -1 [502, 588[[598, 638[[736, 832[502 MustHaveRegister 504 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [504, 588[[598, 616[[736, 832[504 MustHaveRegister 510 ShouldHaveRegister 548 ShouldHaveRegister 616 MustHaveRegister 778 ShouldHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r11|d]" v35|d -1 [506, 572[[736, 800[[806, 832[506 MustHaveRegister 508 MustHaveRegister 572 MustHaveRegister 796 MustHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r8|d]" v36|d -1 [508, 560[[736, 766[[806, 832[508 MustHaveRegister 520 ShouldHaveRegister 560 MustHaveRegister 750 MustHaveRegister 766 MustHaveRegister 828 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r9|d]" v37|d v36|d [828, 831[828 MustHaveRegister 830 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r9|d]" v38|d v37|d [522, 562[[736, 780[[1394, 1404[[1448, 1458[[1480, 1490[[1512, 1543[544 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbx|d]" v39|d v32|d [540, 542[540 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d v32|d [542, 562[[736, 780[[1394, 1404[[1448, 1458[[1480, 1490[[1512, 1543[542 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rbx|d]" v41|d v38|d [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d v40|d [546, 572[[736, 748[546 MustHaveRegister 560 ShouldHaveRegister 572 MustHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d v50|d [572, 575[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rbx|d]" v44|d v42|d [748, 800[748 MustHaveRegister 750 ShouldHaveRegister 764 ShouldHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdi|d]" v45|d v44|d [764, 796[764 MustHaveRegister 766 ShouldHaveRegister 796 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r8|d]" v46|d -1 [796, 798[796 MustHaveRegister 798 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d v46|d [798, 802[798 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[r11|d]" v48|d -1 [800, 802[800 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[r8|d]" v49|d v47|d [802, 805[802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v43|d [576, 588[[598, 618[[1404, 1425[586 MustHaveRegister 612 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d v50|d [612, 692[[862, 871[[912, 924[612 MustHaveRegister 614 ShouldHaveRegister 870 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[r9|d]" v52|d v51|d [614, 688[[912, 924[614 MustHaveRegister 616 ShouldHaveRegister 640 MustHaveRegister 688 ShouldHaveRegister  "OneSpillStore"
  v53|q QWORD "[rcx|q]" v53|q v33|d [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rcx|d]" v54|d -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q v54|d [642, 662[[912, 958[[1030, 1076[642 MustHaveRegister 644 MustHaveRegister 958 ShouldHaveRegister 1076 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r10|d]" v56|d -1 [658, 662[[912, 924[[1030, 1070[658 MustHaveRegister 660 MustHaveRegister 922 ShouldHaveRegister 1040 ShouldHaveRegister 1070 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rbx|q]" v57|q -1 [952, 960[952 MustHaveRegister 954 MustHaveRegister 960 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rax|q]" v58|q -1 [954, 962[954 MustHaveRegister 962 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[rax|d]" v59|d rax|q [966, 969[966 MustHaveRegister 968 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[r10|q]" v60|q v56|d [1070, 1072[1070 MustHaveRegister 1072 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rax|d]" v61|d rax|q [1080, 1083[1080 MustHaveRegister 1082 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d v59|d [1084, 1094[1094 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rcx|d]" v63|d -1 [686, 708[686 MustHaveRegister 690 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[r9|d]" v64|d v52|d [688, 710[688 MustHaveRegister 690 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rcx|q]" v65|q v63|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rcx|d]" v66|d -1 [710, 726[[872, 898[710 MustHaveRegister 712 MustHaveRegister 724 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rcx|q]" v67|q v66|d [898, 904[898 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rax|d]" v68|d rax|q [908, 911[908 MustHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[r10|d]" v69|d v6|d [1106, 1118[[1150, 1174[[1350, 1371[1116 ShouldHaveRegister 1168 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rsi|d]" v70|d -1 [1166, 1194[1166 MustHaveRegister 1172 MustHaveRegister 1194 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rax|d]" v71|d v69|d [1168, 1170[1168 MustHaveRegister 1170 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rax|d]" v72|d v71|d [1170, 1196[1170 MustHaveRegister 1172 MustHaveRegister 1196 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v70|d [1194, 1196[1194 MustHaveRegister 1196 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r10|d]" v74|d -1 [1196, 1214[[1298, 1312[1196 MustHaveRegister 1198 MustHaveRegister 1200 MustHaveRegister 1212 MustHaveRegister 1312 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r11|q]" v75|q v74|d [1198, 1223[[1288, 1297[1198 MustHaveRegister 1222 ShouldHaveRegister 1296 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rax|d]" v76|d -1 [1312, 1314[1312 MustHaveRegister 1314 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v76|d [1314, 1317[1314 MustHaveRegister 1316 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[r11|q]" v78|q v75|q [1318, 1336[1336 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[r10|d]" v79|d -1 [1522, 1538[1538 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r11|q]" v80|q -1 [1522, 1540[1540 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[vstack:2|q]" v0|q v0|q [204, 235[ "SpillInDominator"
  v82|q QWORD "[vstack:0|q]" v1|q v1|q [237, 243[ "SpillInDominator"
  v83|q QWORD "[vstack:1|q]" v4|q v4|q [239, 243[ "SpillInDominator"
  v84|d DWORD "[vstack:3|d]" v6|d v6|d [204, 243[ "OneSpillStore"
  v85|q QWORD "[vstack:2|q]" v0|q v0|q [235, 243[ "SpillInDominator"
  v86|d DWORD "[vstack:3|d]" v6|d v6|d [243, 336[[832, 861[[1234, 1244[860 ShouldHaveRegister  "OneSpillStore"
  v87|q QWORD "[vstack:2|q]" v0|q v0|q [243, 336[[346, 484[ "SpillInDominator"
  v88|q QWORD "[vstack:0|q]" v1|q v1|q [243, 336[[346, 434[294 ShouldHaveRegister 422 ShouldHaveRegister  "SpillInDominator"
  v89|q QWORD "[vstack:1|q]" v4|q v4|q [243, 336[[346, 368[ "SpillInDominator"
  v90|q QWORD "[rdx|q]" v1|q v1|q [434, 588[[598, 726[[736, 832[[872, 902[[912, 957[448 MustHaveRegister 644 ShouldHaveRegister 902 ShouldHaveRegister 956 ShouldHaveRegister  "SpillInDominator"
  v91|q QWORD "[rbx|q]" v4|q v4|q [368, 423[390 MustHaveRegister 418 MustHaveRegister  "SpillInDominator"
  v92|q QWORD "[rsi|q]" v0|q v0|q [484, 588[[598, 726[[736, 899[502 MustHaveRegister 506 MustHaveRegister 658 MustHaveRegister 686 MustHaveRegister  "SpillInDominator"
  v93|d DWORD "[r10|d]" v6|d v6|d [1458, 1479[ "OneSpillStore"
  v94|q QWORD "[vstack:1|q]" v4|q v4|q [423, 427[ "SpillInDominator"
  v95|q QWORD "[vstack:1|q]" v4|q v4|q [427, 588[[598, 662[[736, 832[[912, 924[ "SpillInDominator"
  v96|q QWORD "[rbx|q]" v4|q v4|q [924, 952[[980, 992[952 MustHaveRegister  "SpillInDominator"
  v97|q QWORD "[vstack:0|q]" v1|q v1|q [957, 963[ "SpillInDominator"
  v98|q QWORD "[r10|q]" v0|q v0|q [899, 905[900 ShouldHaveRegister  "SpillInDominator"
  v99|d DWORD "[vstack:6|d]" v51|d v51|d [924, 963[ "OneSpillStore"
  v100|d DWORD "[vstack:7|d]" v52|d v52|d [924, 963[ "OneSpillStore"
  v101|q QWORD "[vstack:2|q]" v0|q v0|q [905, 970[[980, 1118[ "SpillInDominator"
  v102|q QWORD "[r8|q]" v0|q v0|q [1150, 1174[[1224, 1288[[1340, 1371[[1372, 1393[[1394, 1425[[1426, 1447[[1448, 1479[[1480, 1511[[1512, 1543[1166 MustHaveRegister  "SpillInDominator"
  v103|q QWORD "[vstack:1|q]" v4|q v4|q [992, 1023[ "SpillInDominator"
  v104|d DWORD "[vstack:6|d]" v51|d v51|d [963, 970[[1030, 1105[[1224, 1234[[1340, 1350[1104 ShouldHaveRegister  "OneSpillStore"
  v105|d DWORD "[vstack:7|d]" v52|d v52|d [963, 970[[1030, 1096[[1224, 1234[[1340, 1350[ "OneSpillStore"
  v106|q QWORD "[vstack:0|q]" v1|q v1|q [963, 970[[980, 1096[[1224, 1234[[1244, 1288[[1340, 1350[[1372, 1393[[1394, 1425[[1426, 1447[[1448, 1479[[1480, 1511[[1512, 1522[1022 ShouldHaveRegister 1074 ShouldHaveRegister 1280 ShouldHaveRegister  "SpillInDominator"
  v107|q QWORD "[rdx|q]" v1|q v1|q [1522, 1543[ "SpillInDominator"
  v108|d DWORD "[r10|d]" v51|d v51|d [1426, 1447[ "OneSpillStore"
  v109|q QWORD "[vstack:1|q]" v4|q v4|q [1023, 1030[[1244, 1288[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   82  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  142  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  188  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  234  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: v4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = STACKMOVE (input: v84|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = STACKMOVE (input: v85|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = STACKMOVE (input: v83|QWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = STACKMOVE (input: v82|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  246  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  300  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  304  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr  420  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOVE input: v91|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = STACKMOVE (input: v94|QWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  430  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  450  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr  452  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr  470  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  484  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  506  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  522  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr  542  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  576  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  688  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr  766  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  798  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr  800  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  802  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr  908  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  954  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = STACKMOVE (input: v100|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = STACKMOVE (input: v99|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = STACKMOVE (input: v97|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr  966  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = STACKMOVE (input: v103|QWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr 1026  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1080  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1084  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1106  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1168  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1196  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1198  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1200  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr 1284  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1314  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1318  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1370  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr 1390  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1392  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1424  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1508  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1522  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[242, 246[[298, 300[[426, 430[[906, 908[[962, 966[[1024, 1026[[1078, 1080[[1146, 1148[[1282, 1284[[1336, 1338[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|q [0, 1[[244, 245[[296, 299[[428, 429[[904, 907[[964, 965[[1024, 1025[[1076, 1079[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v11|q [0, 34[[238, 245[[294, 299[[428, 429[[902, 907[[958, 965[[1022, 1025[[1074, 1079[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v13|q [0, 1[[240, 245[[298, 299[[424, 429[[906, 907[[960, 965[[1024, 1025[[1078, 1079[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 32[[236, 245[[292, 299[[422, 429[[900, 907[[956, 965[[1020, 1025[[1072, 1079[[1280, 1282[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[[1282, 1283[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 204[32 MustHaveRegister 38 MustHaveRegister 58 MustHaveRegister 92 MustHaveRegister 108 MustHaveRegister 158 MustHaveRegister 191 LiveAtLoopEnd  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [34, 237[34 MustHaveRegister 36 MustHaveRegister 144 ShouldHaveRegister 191 LiveAtLoopEnd 236 ShouldHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rbx|d]" v2|d -1 [36, 42[36 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [38, 44[38 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rbx|q]" v4|q v2|d [42, 239[42 MustHaveRegister 191 LiveAtLoopEnd 232 MustHaveRegister  "StoreAtDefinition"
  v5|q QWORD "[r10|q]" v5|q -1 [40, 43[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d v20|d [82, 188[[192, 204[92 MustHaveRegister 110 ShouldHaveRegister 188 ShouldHaveRegister  "OneSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [108, 136[108 MustHaveRegister 112 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v6|d [110, 138[110 MustHaveRegister 112 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v7|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [138, 142[138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v10|d [142, 162[[192, 238[[250, 296[142 MustHaveRegister 144 MustHaveRegister 238 ShouldHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d -1 [158, 162[[192, 204[[250, 290[158 MustHaveRegister 160 MustHaveRegister 202 ShouldHaveRegister 260 ShouldHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q -1 [232, 240[232 MustHaveRegister 234 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r8|q]" v14|q -1 [234, 242[234 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d rax|q [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q v12|d [290, 292[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|q [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v15|d [304, 314[314 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [186, 187[186 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[r10|d]" v20|d v6|d [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [58, 62[[346, 358[[980, 1018[58 MustHaveRegister 60 MustHaveRegister 356 ShouldHaveRegister 990 ShouldHaveRegister 1018 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [448, 468[448 MustHaveRegister 450 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|q [450, 452[450 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v22|q [468, 470[468 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [470, 483[470 MustHaveRegister 472 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|q [1284, 1287[1284 MustHaveRegister 1286 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q -1 [418, 424[418 MustHaveRegister 420 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q -1 [420, 426[420 MustHaveRegister 426 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d rax|q [430, 433[430 MustHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r10|q]" v30|q v21|d [1018, 1020[1018 MustHaveRegister 1020 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d rax|q [1026, 1029[1026 MustHaveRegister 1028 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d v29|d [484, 542[[806, 832[[1490, 1511[540 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rcx|d]" v33|d -1 [502, 588[[598, 638[[736, 832[502 MustHaveRegister 504 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [504, 588[[598, 616[[736, 832[504 MustHaveRegister 510 ShouldHaveRegister 548 ShouldHaveRegister 616 MustHaveRegister 778 ShouldHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r11|d]" v35|d -1 [506, 572[[736, 800[[806, 832[506 MustHaveRegister 508 MustHaveRegister 572 MustHaveRegister 796 MustHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r8|d]" v36|d -1 [508, 560[[736, 766[[806, 832[508 MustHaveRegister 520 ShouldHaveRegister 560 MustHaveRegister 750 MustHaveRegister 766 MustHaveRegister 828 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r9|d]" v37|d v36|d [828, 831[828 MustHaveRegister 830 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r9|d]" v38|d v37|d [522, 562[[736, 780[[1394, 1404[[1448, 1458[[1480, 1490[[1512, 1543[544 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbx|d]" v39|d v32|d [540, 542[540 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d v32|d [542, 562[[736, 780[[1394, 1404[[1448, 1458[[1480, 1490[[1512, 1543[542 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rbx|d]" v41|d v38|d [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d v40|d [546, 572[[736, 748[546 MustHaveRegister 560 ShouldHaveRegister 572 MustHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d v50|d [572, 575[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rbx|d]" v44|d v42|d [748, 800[748 MustHaveRegister 750 ShouldHaveRegister 764 ShouldHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdi|d]" v45|d v44|d [764, 796[764 MustHaveRegister 766 ShouldHaveRegister 796 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r8|d]" v46|d -1 [796, 798[796 MustHaveRegister 798 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d v46|d [798, 802[798 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[r11|d]" v48|d -1 [800, 802[800 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[r8|d]" v49|d v47|d [802, 805[802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v43|d [576, 588[[598, 618[[1404, 1425[586 MustHaveRegister 612 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d v50|d [612, 692[[862, 871[[912, 924[612 MustHaveRegister 614 ShouldHaveRegister 870 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[r9|d]" v52|d v51|d [614, 688[[912, 924[614 MustHaveRegister 616 ShouldHaveRegister 640 MustHaveRegister 688 ShouldHaveRegister  "OneSpillStore"
  v53|q QWORD "[rcx|q]" v53|q v33|d [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rcx|d]" v54|d -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q v54|d [642, 662[[912, 958[[1030, 1076[642 MustHaveRegister 644 MustHaveRegister 958 ShouldHaveRegister 1076 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r10|d]" v56|d -1 [658, 662[[912, 924[[1030, 1070[658 MustHaveRegister 660 MustHaveRegister 922 ShouldHaveRegister 1040 ShouldHaveRegister 1070 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rbx|q]" v57|q -1 [952, 960[952 MustHaveRegister 954 MustHaveRegister 960 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rax|q]" v58|q -1 [954, 962[954 MustHaveRegister 962 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[rax|d]" v59|d rax|q [966, 969[966 MustHaveRegister 968 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[r10|q]" v60|q v56|d [1070, 1072[1070 MustHaveRegister 1072 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rax|d]" v61|d rax|q [1080, 1083[1080 MustHaveRegister 1082 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d v59|d [1084, 1094[1094 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rcx|d]" v63|d -1 [686, 708[686 MustHaveRegister 690 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[r9|d]" v64|d v52|d [688, 710[688 MustHaveRegister 690 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rcx|q]" v65|q v63|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rcx|d]" v66|d -1 [710, 726[[872, 898[710 MustHaveRegister 712 MustHaveRegister 724 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rcx|q]" v67|q v66|d [898, 904[898 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rax|d]" v68|d rax|q [908, 911[908 MustHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[r10|d]" v69|d v6|d [1106, 1118[[1150, 1174[[1350, 1371[1116 ShouldHaveRegister 1168 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rsi|d]" v70|d -1 [1166, 1194[1166 MustHaveRegister 1172 MustHaveRegister 1194 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rax|d]" v71|d v69|d [1168, 1170[1168 MustHaveRegister 1170 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rax|d]" v72|d v71|d [1170, 1196[1170 MustHaveRegister 1172 MustHaveRegister 1196 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v70|d [1194, 1196[1194 MustHaveRegister 1196 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r10|d]" v74|d -1 [1196, 1214[[1298, 1312[1196 MustHaveRegister 1198 MustHaveRegister 1200 MustHaveRegister 1212 MustHaveRegister 1312 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r11|q]" v75|q v74|d [1198, 1223[[1288, 1297[1198 MustHaveRegister 1222 ShouldHaveRegister 1296 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rax|d]" v76|d -1 [1312, 1314[1312 MustHaveRegister 1314 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v76|d [1314, 1317[1314 MustHaveRegister 1316 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[r11|q]" v78|q v75|q [1318, 1336[1336 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[r10|d]" v79|d -1 [1522, 1538[1538 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r11|q]" v80|q -1 [1522, 1540[1540 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[vstack:2|q]" v0|q v0|q [204, 235[ "StoreAtDefinition"
  v82|q QWORD "[vstack:0|q]" v1|q v1|q [237, 243[ "StoreAtDefinition"
  v83|q QWORD "[vstack:1|q]" v4|q v4|q [239, 243[ "StoreAtDefinition"
  v84|d DWORD "[vstack:3|d]" v6|d v6|d [204, 243[ "OneSpillStore"
  v85|q QWORD "[vstack:2|q]" v0|q v0|q [235, 243[ "StoreAtDefinition"
  v86|d DWORD "[vstack:3|d]" v6|d v6|d [243, 336[[832, 861[[1234, 1244[860 ShouldHaveRegister  "OneSpillStore"
  v87|q QWORD "[vstack:2|q]" v0|q v0|q [243, 336[[346, 484[ "StoreAtDefinition"
  v88|q QWORD "[vstack:0|q]" v1|q v1|q [243, 336[[346, 434[294 ShouldHaveRegister 422 ShouldHaveRegister  "StoreAtDefinition"
  v89|q QWORD "[vstack:1|q]" v4|q v4|q [243, 336[[346, 368[ "StoreAtDefinition"
  v90|q QWORD "[rdx|q]" v1|q v1|q [434, 588[[598, 726[[736, 832[[872, 902[[912, 957[448 MustHaveRegister 644 ShouldHaveRegister 902 ShouldHaveRegister 956 ShouldHaveRegister  "StoreAtDefinition"
  v91|q QWORD "[rbx|q]" v4|q v4|q [368, 423[390 MustHaveRegister 418 MustHaveRegister  "StoreAtDefinition"
  v92|q QWORD "[rsi|q]" v0|q v0|q [484, 588[[598, 726[[736, 899[502 MustHaveRegister 506 MustHaveRegister 658 MustHaveRegister 686 MustHaveRegister  "StoreAtDefinition"
  v93|d DWORD "[r10|d]" v6|d v6|d [1458, 1479[ "OneSpillStore"
  v94|q QWORD "[vstack:1|q]" v4|q v4|q [423, 427[ "StoreAtDefinition"
  v95|q QWORD "[vstack:1|q]" v4|q v4|q [427, 588[[598, 662[[736, 832[[912, 924[ "StoreAtDefinition"
  v96|q QWORD "[rbx|q]" v4|q v4|q [924, 952[[980, 992[952 MustHaveRegister  "StoreAtDefinition"
  v97|q QWORD "[vstack:0|q]" v1|q v1|q [957, 963[ "StoreAtDefinition"
  v98|q QWORD "[r10|q]" v0|q v0|q [899, 905[900 ShouldHaveRegister  "StoreAtDefinition"
  v99|d DWORD "[vstack:6|d]" v51|d v51|d [924, 963[ "OneSpillStore"
  v100|d DWORD "[vstack:7|d]" v52|d v52|d [924, 963[ "OneSpillStore"
  v101|q QWORD "[vstack:2|q]" v0|q v0|q [905, 970[[980, 1118[ "StoreAtDefinition"
  v102|q QWORD "[r8|q]" v0|q v0|q [1150, 1174[[1224, 1288[[1340, 1371[[1372, 1393[[1394, 1425[[1426, 1447[[1448, 1479[[1480, 1511[[1512, 1543[1166 MustHaveRegister  "StoreAtDefinition"
  v103|q QWORD "[vstack:1|q]" v4|q v4|q [992, 1023[ "StoreAtDefinition"
  v104|d DWORD "[vstack:6|d]" v51|d v51|d [963, 970[[1030, 1105[[1224, 1234[[1340, 1350[1104 ShouldHaveRegister  "OneSpillStore"
  v105|d DWORD "[vstack:7|d]" v52|d v52|d [963, 970[[1030, 1096[[1224, 1234[[1340, 1350[ "OneSpillStore"
  v106|q QWORD "[vstack:0|q]" v1|q v1|q [963, 970[[980, 1096[[1224, 1234[[1244, 1288[[1340, 1350[[1372, 1393[[1394, 1425[[1426, 1447[[1448, 1479[[1480, 1511[[1512, 1522[1022 ShouldHaveRegister 1074 ShouldHaveRegister 1280 ShouldHaveRegister  "StoreAtDefinition"
  v107|q QWORD "[rdx|q]" v1|q v1|q [1522, 1543[ "StoreAtDefinition"
  v108|d DWORD "[r10|d]" v51|d v51|d [1426, 1447[ "OneSpillStore"
  v109|q QWORD "[vstack:1|q]" v4|q v4|q [1023, 1030[[1244, 1288[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   82  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  142  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  188  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [v20|DWORD] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  234  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: v4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = STACKMOVE (input: v84|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = STACKMOVE (input: v85|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = STACKMOVE (input: v83|QWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = STACKMOVE (input: v82|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  246  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  300  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  304  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr  420  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOVE input: v91|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = STACKMOVE (input: v94|QWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  430  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  450  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr  452  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr  470  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  484  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  506  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [v36|DWORD] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  522  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr  542  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [v43|DWORD] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  576  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  688  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr  766  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  798  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr  800  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  802  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [v49|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [v6|DWORD] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr  908  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [v68|DWORD] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  954  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = STACKMOVE (input: v100|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = STACKMOVE (input: v99|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = STACKMOVE (input: v97|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr  966  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [v59|DWORD] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = STACKMOVE (input: v103|QWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr 1026  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1080  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [v61|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1084  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1106  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1168  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1196  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1198  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1200  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr 1284  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [v26|DWORD] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [v75|QWORD[.]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1314  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [v77|QWORD[.]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1318  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1370  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr 1390  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1392  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [int[-100123|0xfffffffffffe78e5], long[0|0x0]] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1424  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [int[-106011|0xfffffffffffe61e5], long[0|0x0]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[2580|0xa14]] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1508  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [int[-103451|0xfffffffffffe6be5], long[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1522  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[242, 246[[298, 300[[426, 430[[906, 908[[962, 966[[1024, 1026[[1078, 1080[[1146, 1148[[1282, 1284[[1336, 1338[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v11|q [0, 1[[244, 245[[296, 299[[428, 429[[904, 907[[964, 965[[1024, 1025[[1076, 1079[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v11|q [0, 34[[238, 245[[294, 299[[428, 429[[902, 907[[958, 965[[1022, 1025[[1074, 1079[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v13|q [0, 1[[240, 245[[298, 299[[424, 429[[906, 907[[960, 965[[1024, 1025[[1078, 1079[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 32[[236, 245[[292, 299[[422, 429[[900, 907[[956, 965[[1020, 1025[[1072, 1079[[1280, 1282[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[[1282, 1283[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[244, 245[[298, 299[[428, 429[[906, 907[[964, 965[[1024, 1025[[1078, 1079[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 204[32 MustHaveRegister 38 MustHaveRegister 58 MustHaveRegister 92 MustHaveRegister 108 MustHaveRegister 158 MustHaveRegister 191 LiveAtLoopEnd  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [34, 237[34 MustHaveRegister 36 MustHaveRegister 144 ShouldHaveRegister 191 LiveAtLoopEnd 236 ShouldHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rbx|d]" v2|d -1 [36, 42[36 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [38, 44[38 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rbx|q]" v4|q v2|d [42, 239[42 MustHaveRegister 191 LiveAtLoopEnd 232 MustHaveRegister  "StoreAtDefinition"
  v5|q QWORD "[r10|q]" v5|q -1 [40, 43[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d v20|d [82, 188[[192, 204[92 MustHaveRegister 110 ShouldHaveRegister 188 ShouldHaveRegister  "OneSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [108, 136[108 MustHaveRegister 112 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v6|d [110, 138[110 MustHaveRegister 112 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v7|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d -1 [138, 142[138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q v10|d [142, 162[[192, 238[[250, 296[142 MustHaveRegister 144 MustHaveRegister 238 ShouldHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d -1 [158, 162[[192, 204[[250, 290[158 MustHaveRegister 160 MustHaveRegister 202 ShouldHaveRegister 260 ShouldHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q -1 [232, 240[232 MustHaveRegister 234 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r8|q]" v14|q -1 [234, 242[234 MustHaveRegister 242 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d rax|q [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q v12|d [290, 292[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|q [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v15|d [304, 314[314 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rax|q]" v19|q -1 [186, 187[186 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[r10|d]" v20|d v6|d [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [58, 62[[346, 358[[980, 1018[58 MustHaveRegister 60 MustHaveRegister 356 ShouldHaveRegister 990 ShouldHaveRegister 1018 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [448, 468[448 MustHaveRegister 450 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|q [450, 452[450 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v22|q [468, 470[468 MustHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [470, 483[470 MustHaveRegister 472 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d rax|q [1284, 1287[1284 MustHaveRegister 1286 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q -1 [418, 424[418 MustHaveRegister 420 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q -1 [420, 426[420 MustHaveRegister 426 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d rax|q [430, 433[430 MustHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r10|q]" v30|q v21|d [1018, 1020[1018 MustHaveRegister 1020 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d rax|q [1026, 1029[1026 MustHaveRegister 1028 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d v29|d [484, 542[[806, 832[[1490, 1511[540 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rcx|d]" v33|d -1 [502, 588[[598, 638[[736, 832[502 MustHaveRegister 504 MustHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d -1 [504, 588[[598, 616[[736, 832[504 MustHaveRegister 510 ShouldHaveRegister 548 ShouldHaveRegister 616 MustHaveRegister 778 ShouldHaveRegister 816 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r11|d]" v35|d -1 [506, 572[[736, 800[[806, 832[506 MustHaveRegister 508 MustHaveRegister 572 MustHaveRegister 796 MustHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r8|d]" v36|d -1 [508, 560[[736, 766[[806, 832[508 MustHaveRegister 520 ShouldHaveRegister 560 MustHaveRegister 750 MustHaveRegister 766 MustHaveRegister 828 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r9|d]" v37|d v36|d [828, 831[828 MustHaveRegister 830 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r9|d]" v38|d v37|d [522, 562[[736, 780[[1394, 1404[[1448, 1458[[1480, 1490[[1512, 1543[544 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rbx|d]" v39|d v32|d [540, 542[540 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d v32|d [542, 562[[736, 780[[1394, 1404[[1448, 1458[[1480, 1490[[1512, 1543[542 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rbx|d]" v41|d v38|d [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d v40|d [546, 572[[736, 748[546 MustHaveRegister 560 ShouldHaveRegister 572 MustHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d v50|d [572, 575[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rbx|d]" v44|d v42|d [748, 800[748 MustHaveRegister 750 ShouldHaveRegister 764 ShouldHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdi|d]" v45|d v44|d [764, 796[764 MustHaveRegister 766 ShouldHaveRegister 796 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r8|d]" v46|d -1 [796, 798[796 MustHaveRegister 798 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d v46|d [798, 802[798 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[r11|d]" v48|d -1 [800, 802[800 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[r8|d]" v49|d v47|d [802, 805[802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v43|d [576, 588[[598, 618[[1404, 1425[586 MustHaveRegister 612 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d v50|d [612, 692[[862, 871[[912, 924[612 MustHaveRegister 614 ShouldHaveRegister 870 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[r9|d]" v52|d v51|d [614, 688[[912, 924[614 MustHaveRegister 616 ShouldHaveRegister 640 MustHaveRegister 688 ShouldHaveRegister  "OneSpillStore"
  v53|q QWORD "[rcx|q]" v53|q v33|d [638, 640[638 MustHaveRegister 640 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rcx|d]" v54|d -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q v54|d [642, 662[[912, 958[[1030, 1076[642 MustHaveRegister 644 MustHaveRegister 958 ShouldHaveRegister 1076 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r10|d]" v56|d -1 [658, 662[[912, 924[[1030, 1070[658 MustHaveRegister 660 MustHaveRegister 922 ShouldHaveRegister 1040 ShouldHaveRegister 1070 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rbx|q]" v57|q -1 [952, 960[952 MustHaveRegister 954 MustHaveRegister 960 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rax|q]" v58|q -1 [954, 962[954 MustHaveRegister 962 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[rax|d]" v59|d rax|q [966, 969[966 MustHaveRegister 968 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[r10|q]" v60|q v56|d [1070, 1072[1070 MustHaveRegister 1072 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rax|d]" v61|d rax|q [1080, 1083[1080 MustHaveRegister 1082 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d v59|d [1084, 1094[1094 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rcx|d]" v63|d -1 [686, 708[686 MustHaveRegister 690 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[r9|d]" v64|d v52|d [688, 710[688 MustHaveRegister 690 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rcx|q]" v65|q v63|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rcx|d]" v66|d -1 [710, 726[[872, 898[710 MustHaveRegister 712 MustHaveRegister 724 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rcx|q]" v67|q v66|d [898, 904[898 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rax|d]" v68|d rax|q [908, 911[908 MustHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[r10|d]" v69|d v6|d [1106, 1118[[1150, 1174[[1350, 1371[1116 ShouldHaveRegister 1168 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rsi|d]" v70|d -1 [1166, 1194[1166 MustHaveRegister 1172 MustHaveRegister 1194 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rax|d]" v71|d v69|d [1168, 1170[1168 MustHaveRegister 1170 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rax|d]" v72|d v71|d [1170, 1196[1170 MustHaveRegister 1172 MustHaveRegister 1196 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v70|d [1194, 1196[1194 MustHaveRegister 1196 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r10|d]" v74|d -1 [1196, 1214[[1298, 1312[1196 MustHaveRegister 1198 MustHaveRegister 1200 MustHaveRegister 1212 MustHaveRegister 1312 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r11|q]" v75|q v74|d [1198, 1223[[1288, 1297[1198 MustHaveRegister 1222 ShouldHaveRegister 1296 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rax|d]" v76|d -1 [1312, 1314[1312 MustHaveRegister 1314 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v76|d [1314, 1317[1314 MustHaveRegister 1316 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[r11|q]" v78|q v75|q [1318, 1336[1336 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[r10|d]" v79|d -1 [1522, 1538[1538 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r11|q]" v80|q -1 [1522, 1540[1540 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[vstack:2|q]" v0|q v0|q [204, 235[ "StoreAtDefinition"
  v82|q QWORD "[vstack:0|q]" v1|q v1|q [237, 243[ "StoreAtDefinition"
  v83|q QWORD "[vstack:1|q]" v4|q v4|q [239, 243[ "StoreAtDefinition"
  v84|d DWORD "[vstack:3|d]" v6|d v6|d [204, 243[ "OneSpillStore"
  v85|q QWORD "[vstack:2|q]" v0|q v0|q [235, 243[ "StoreAtDefinition"
  v86|d DWORD "[vstack:3|d]" v6|d v6|d [243, 336[[832, 861[[1234, 1244[860 ShouldHaveRegister  "OneSpillStore"
  v87|q QWORD "[vstack:2|q]" v0|q v0|q [243, 336[[346, 484[ "StoreAtDefinition"
  v88|q QWORD "[vstack:0|q]" v1|q v1|q [243, 336[[346, 434[294 ShouldHaveRegister 422 ShouldHaveRegister  "StoreAtDefinition"
  v89|q QWORD "[vstack:1|q]" v4|q v4|q [243, 336[[346, 368[ "StoreAtDefinition"
  v90|q QWORD "[rdx|q]" v1|q v1|q [434, 588[[598, 726[[736, 832[[872, 902[[912, 957[448 MustHaveRegister 644 ShouldHaveRegister 902 ShouldHaveRegister 956 ShouldHaveRegister  "StoreAtDefinition"
  v91|q QWORD "[rbx|q]" v4|q v4|q [368, 423[390 MustHaveRegister 418 MustHaveRegister  "StoreAtDefinition"
  v92|q QWORD "[rsi|q]" v0|q v0|q [484, 588[[598, 726[[736, 899[502 MustHaveRegister 506 MustHaveRegister 658 MustHaveRegister 686 MustHaveRegister  "StoreAtDefinition"
  v93|d DWORD "[r10|d]" v6|d v6|d [1458, 1479[ "OneSpillStore"
  v94|q QWORD "[vstack:1|q]" v4|q v4|q [423, 427[ "StoreAtDefinition"
  v95|q QWORD "[vstack:1|q]" v4|q v4|q [427, 588[[598, 662[[736, 832[[912, 924[ "StoreAtDefinition"
  v96|q QWORD "[rbx|q]" v4|q v4|q [924, 952[[980, 992[952 MustHaveRegister  "StoreAtDefinition"
  v97|q QWORD "[vstack:0|q]" v1|q v1|q [957, 963[ "StoreAtDefinition"
  v98|q QWORD "[r10|q]" v0|q v0|q [899, 905[900 ShouldHaveRegister  "StoreAtDefinition"
  v99|d DWORD "[vstack:6|d]" v51|d v51|d [924, 963[ "OneSpillStore"
  v100|d DWORD "[vstack:7|d]" v52|d v52|d [924, 963[ "OneSpillStore"
  v101|q QWORD "[vstack:2|q]" v0|q v0|q [905, 970[[980, 1118[ "StoreAtDefinition"
  v102|q QWORD "[r8|q]" v0|q v0|q [1150, 1174[[1224, 1288[[1340, 1371[[1372, 1393[[1394, 1425[[1426, 1447[[1448, 1479[[1480, 1511[[1512, 1543[1166 MustHaveRegister  "StoreAtDefinition"
  v103|q QWORD "[vstack:1|q]" v4|q v4|q [992, 1023[ "StoreAtDefinition"
  v104|d DWORD "[vstack:6|d]" v51|d v51|d [963, 970[[1030, 1105[[1224, 1234[[1340, 1350[1104 ShouldHaveRegister  "OneSpillStore"
  v105|d DWORD "[vstack:7|d]" v52|d v52|d [963, 970[[1030, 1096[[1224, 1234[[1340, 1350[ "OneSpillStore"
  v106|q QWORD "[vstack:0|q]" v1|q v1|q [963, 970[[980, 1096[[1224, 1234[[1244, 1288[[1340, 1350[[1372, 1393[[1394, 1425[[1426, 1447[[1448, 1479[[1480, 1511[[1512, 1522[1022 ShouldHaveRegister 1074 ShouldHaveRegister 1280 ShouldHaveRegister  "StoreAtDefinition"
  v107|q QWORD "[rdx|q]" v1|q v1|q [1522, 1543[ "StoreAtDefinition"
  v108|d DWORD "[r10|d]" v51|d v51|d [1426, 1447[ "OneSpillStore"
  v109|q QWORD "[vstack:1|q]" v4|q v4|q [1023, 1030[[1244, 1288[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   82  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  142  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  188  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  234  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: v4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = STACKMOVE (input: v84|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = STACKMOVE (input: v85|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = STACKMOVE (input: v83|QWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = STACKMOVE (input: v82|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  246  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVE input: v4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  300  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  304  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v86|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: v89|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v86|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: v89|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVE input: v4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOVE input: v89|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr  420  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOVE input: v91|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = STACKMOVE (input: v94|QWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  430  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: v91|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  450  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr  452  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr  470  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  484  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  506  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: v36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  522  <|@ instruction [v38|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr  542  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  576  <|@ instruction [v50|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  688  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr  766  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  798  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr  800  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  802  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v86|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr  908  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVE input: v95|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  954  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = STACKMOVE (input: v100|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = STACKMOVE (input: v99|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = STACKMOVE (input: v97|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr  966  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVE input: v89|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: v96|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = STACKMOVE (input: v103|QWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr 1026  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1080  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1084  <|@ instruction [v62|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v104|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1106  <|@ instruction [v69|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1168  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1196  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1198  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1200  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: v105|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v104|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr 1284  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1314  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1318  <|@ instruction [v78|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: v105|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v104|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1370  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr 1390  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1392  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1424  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1508  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1522  <|@ instruction [v79|DWORD, v80|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD = MOVE input: rbx|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v21|DWORD[_], y: v21|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v8|DWORD, y: [v7|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction v10|DWORD[_] = MOV input: [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v10|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  142  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v11|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v12|DWORD[_], y: v12|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: v19|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  188  <|@ instruction v20|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction v13|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  234  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  238  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  240  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = STACKMOVE (input: v84|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  246  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: v12|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  300  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v86|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: v89|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v86|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: v89|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOVE input: v89|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v4|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction v27|QWORD = MOV input: [v4|QWORD + 480] size: QWORD <|@ <|@
      nr  420  <|@ instruction v28|QWORD = MOV input: [v27|QWORD + 64] size: QWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  424  <|@ instruction rbx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  430  <|@ instruction v29|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v22|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  450  <|@ instruction v23|QWORD = AND x: v22|QWORD y: 3 size: QWORD <|@ <|@
      nr  452  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v24|QWORD = SHR x: v22|QWORD y: 8 size: QWORD <|@ <|@
      nr  470  <|@ instruction v25|DWORD = MOV value: v24|QWORD size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  506  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v36|DWORD = MOV input: [v35|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: v36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction v39|DWORD = SHR x: v32|DWORD y: 16 size: DWORD <|@ <|@
      nr  542  <|@ instruction v40|DWORD = XOR (x: v32|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction v41|DWORD = DEC value: v38|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction v42|DWORD = AND (x: v40|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction v43|DWORD = MOVZXB input: [v42|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v51|DWORD = DEC value: v50|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction v52|DWORD = SHL value: v51|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v52|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction v54|DWORD[_] = MOV input: [v53|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction CMPBRANCH (x: v55|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction v56|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction v63|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  688  <|@ instruction v64|DWORD = INC value: v52|DWORD size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v64|DWORD, y: [v63|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction v66|DWORD[_] = MOV input: [v65|QWORD[.] + v64|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: v66|DWORD[_], y: v66|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH x: [v66|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction v44|DWORD = SHL value: v42|DWORD size: DWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v45|DWORD = INC value: v44|DWORD size: DWORD <|@ <|@
      nr  766  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v45|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction v46|DWORD = MOVZXB input: [v45|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  798  <|@ instruction v47|DWORD = SHL x: v46|DWORD y: 8 size: DWORD <|@ <|@
      nr  800  <|@ instruction v48|DWORD = MOVZXB input: [v44|DWORD + v35|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  802  <|@ instruction v49|DWORD = OR (x: v47|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: v49|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: v34|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v37|DWORD = SHR value: v36|DWORD size: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v86|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr  908  <|@ instruction v68|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVE input: v95|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction v57|QWORD = MOV input: [v4|QWORD + 464] size: QWORD <|@ <|@
      nr  954  <|@ instruction v58|QWORD = MOV input: [v57|QWORD + 64] size: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  958  <|@ instruction rdx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rbx|QWORD = MOVE input: v57|QWORD moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rax|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = STACKMOVE (input: v100|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = STACKMOVE (input: v99|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr  966  <|@ instruction v59|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVE input: v89|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v21|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction rsi|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr 1026  <|@ instruction v31|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction CMPCONSTBRANCH x: v56|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1080  <|@ instruction v61|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction TESTBRANCH (x: v62|DWORD, y: v62|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v104|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction v70|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1168  <|@ instruction v71|DWORD = SHL value: v69|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: v72|DWORD, y: [v70|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1196  <|@ instruction v74|DWORD[_] = MOV input: [v73|QWORD[.] + v72|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1198  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1200  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction CMPCONSTBRANCH x: [v74|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: v105|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v104|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr 1284  <|@ instruction v26|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction v76|DWORD[_] = MOV input: [v74|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1314  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction rax|QWORD[.] = MOVE input: v78|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: v105|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v104|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1370  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: v69|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr 1390  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1392  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1424  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: v50|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v51|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1508  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v32|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v80|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v40|DWORD v38|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD = MOVE input: rbx|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  188  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  420  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: vstack:2|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: vstack:2|QWORD[.] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  452  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  506  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  542  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  688  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  766  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  800  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  802  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:6|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: vstack:2|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: vstack:2|QWORD[.] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:6|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1168  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1196  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1198  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1200  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1314  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1370  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr 1390  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1392  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] vstack:0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1424  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] vstack:0|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] vstack:0|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1508  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD = MOVE input: rbx|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   44  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  110  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  188  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  248  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  420  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: vstack:2|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: vstack:2|QWORD[.] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  452  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  472  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  506  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  542  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  614  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  640  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  688  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  766  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  798  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  800  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  802  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  870  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  954  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:6|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: vstack:2|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: vstack:2|QWORD[.] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:6|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1148  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1168  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1170  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1172  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1196  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1198  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1200  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1314  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1370  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr 1390  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1392  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] vstack:0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1402  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1424  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] vstack:0|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] vstack:0|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1508  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1510  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1540  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction vstack:1|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: vstack:2|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: vstack:2|QWORD[.] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:6|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction rbx|QWORD = MOVE input: vstack:1|QWORD moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: vstack:2|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: vstack:2|QWORD[.] 
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: vstack:2|QWORD[.] vstack:0|QWORD[.] vstack:6|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] vstack:0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] vstack:0|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] vstack:0|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1580  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] vstack:0|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1616  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [34, 1664[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [44, 1050[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [32, 1392[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [126, 374[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [1048, 1342[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [1046, 1186[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:56|q]" vstack:0|q -1 [34, 1664[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:32|q]" vstack:1|q -1 [44, 1050[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:48|q]" vstack:2|q -1 [32, 1392[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:36|d]" vstack:3|d -1 [126, 374[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:40|d]" vstack:6|d -1 [1048, 1342[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:36|d]" vstack:7|d -1 [1046, 1186[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1580  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1616  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1598  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1580  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1616  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r11:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [r8:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@reference-map: [rdx:0, r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4605629838669644799
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4604646232266855376
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B26" "B32" 
    xhandlers
    flags 
    probability 4605550550611540017
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602717014932776902
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7] <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B29" "B32" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  736  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  738  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r11:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7] <|@ <|@
      nr  740  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4605090656767730257
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  800  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr  804  <|@ instruction rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4605082002073044316
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4605629838669644798
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B72" 
    xhandlers
    flags 
    probability 4603436236653817065
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B67" "B49" "B19" "B64" 
    successors 
    xhandlers
    flags 
    probability 4606967160045712006
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1388  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4599338691275432148
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  506  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4599282020561856886
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4599225916555417376
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B81" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction r8|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r9|DWORD = SHL value: r8|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4597942428353846354
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  990  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4596281614060034552
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B62" 
    xhandlers
    flags 
    probability 4595585995497902679
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B54" "B58" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4595787895293769692
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4595125907793446265
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593729066342283124
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4595378340812025860
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction r11|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598919763897718385
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7] <|@ <|@
      nr  120  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597677577641151970
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596845451680572781
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B7" "B11" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597559166169851498
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7] <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B15" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600972353118309175
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582314229093057448
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580715450233330513
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582312554268808216
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581365262498404439
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573045137592590685
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573038438295593758
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:36|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7] <|@ <|@
      nr  290  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4528474106004830834
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B72" 
    xhandlers
    flags 
    probability 4592874777545528088
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B33" 
    xhandlers
    flags 
    probability 4592533271885480311
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591898967420642056
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" "B84" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rbx|DWORD = SHL value: rbx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B83" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B82" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4588926206581402142
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  914  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B86" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4588787731466427092
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction r9|DWORD = SHR value: r8|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4588107743471827969
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B5" 
    successors "B18" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B70" 
    xhandlers
    flags 
    probability 4588581389357029858
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B18" "B66" "B52" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4594824536882084084
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4593963501864862481
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B70" 
    xhandlers
    flags 
    probability 4586804078211041641
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4585748186840446995
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1288  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7] <|@ <|@
      nr 1294  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B80" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1392  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1410  <|@ instruction rax|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1438  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1442  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4581856673532419475
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4581481100085059776
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" "B75" 
    successors 
    xhandlers
    flags 
    probability 4582545501546196757
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4581222169905478923
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4579610509388949822
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1048  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1082  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B69" 
    xhandlers
    flags 
    probability 4581220769830380601
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B70" 
    xhandlers
    flags 
    probability 4579053122041291205
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" 
    xhandlers
    flags 
    probability 4580953121411011349
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576228057499759479
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:48|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573105215321034075
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4571996040926110128
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4571990440625716840
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:40|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7] <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569724756689542667
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569400273863946026
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573867604234628354
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [r8:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: r8|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7] <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569327735350569691
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4567657046636530704
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4563651998056697133
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1482  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3 <|@ <|@
      nr 1484  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4527348733482704502
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10]
stack: r10|DWORD 
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2]
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5] <|@ <|@
      nr  850  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B43" "B84" "B83" "B82" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ st <@st|@reference-map: [rdx:0, r8:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r9|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] rdx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:64, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1644  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD <|@ <|@
      nr 1662  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1664  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: r8|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3]
stack: r8|QWORD[.] 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:52, 3, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1614  <|@ instruction r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1578  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B82 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD <|@ <|@
      nr 1562  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1564  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9]
stack: r11|DWORD 
locals: r8|QWORD[.] stack:56|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:9, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0]
locals: r8|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1310  <|@ instruction r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD <|@ <|@
      nr 1330  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29]
stack: int[0|0x0] 
locals: r8|QWORD[.] stack:56|QWORD[.] r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7]
locals: r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:29, 9, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1596  <|@ instruction r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #21         // checkKeyNonNull:(java.lang.Object)void
     5: aload_0       
     6: aload_1       
     7: invokevirtual #22         // find:(java.lang.Object)int
    10: istore_2      
    11: iload_2       
    12: iconst_m1     
    13: if_icmpeq     22
    16: aload_0       
    17: iload_2       
    18: invokevirtual #23         // getValue:(int)java.lang.Object
    21: areturn       
    22: aconst_null   
    23: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f855b0800009090909090909090909090909048896c2430488974241048895424088b5a088b461c49ba0000002b787f0000498d1c1a48895c242085c00f841b0200009090909090448b56204585d20f856803000090909090909090909090909090483b1d000000000f840f010000483b1d000000000f8402010000483b1d000000000f84f5000000483b1d000000000f84e8000000483b1d000000000f84db000000909090909090909090909090488b83e00100004c8b5040488b742408488bd8498bc2ffd00f1f840000000000488b542408488b74241090909090909090908b4e18448b14cd0c000000448b5e1c468b04dd0c0000004181fa000200000f8326030000909090458bc890909090909090908bd8c1eb1033c3418bd9ffcb23d84181fa000200000f83a802000090909090443bc30f86f105000090909090460fb65cdb10909090904585db0f856e000000909090909090909090909048c7c000000000488b6c24304883c438493ba7500400000f87f7060000c5f877c3488b542408909090909090488b32488bce4883e1034883f9010f85c404000090909090909048c1ee088bf685f60f84de0400009090908bc6488b742410e919ffffff909090909090458bc341ffc8458bc841d1e1453bd10f86e205000090909090909090909048c1e103428b4c891048c1e103483bca0f847a0200009090909090448b56204585d20f85190300009090909090909090908b4e1841ffc1443b0ccd0c0000000f83f00500009090909090909048c1e103428b4c891085c90f844503000090909090813ccd08000000addeadde0f8426020000909090e9f7feffff90909041ba00000000e96b0000009090909090908b4618458bda41d1e3443b1cc50c0000000f83760400009090909090909090909048c1e003428b4498108504c50000000048c1e003483bc20f849b0100009090909090448b5e204585db0f8524000000909090909090909090498b8758040000850041ffc290909090443b560c7c8be9cf000000909090904181fbaddeadde0f855b000000448954241c909090909090909090909090904c8b9bd00100004d8b4340488bf2488bd0498bdb498bc0ffd00f1f8400000000009090909085c00f851b030000909090448b54241c488b5c2420488b542408488b742410e973ffffff448954241c909090904181fbaddeadde0f84360000009090909090909090909090909049c1e303498bf3488b542408488bc89048b8ffffffffffffffffe8000000000f1f840000000000eb8c909090448b54241c488b542408488b742410e910ffffff909090e998fdffff909090904181faaddeadde0f85c0010000909090e982fcffff9090909090d1e3443bc30f86ad03000090909090908bfbffc7443bc70f8651040000909090904181fa000002000f839f03000090909090909090460fb644df1041c1e008460fb65cdb10450bc3458bd8e91afdffff909090904181fa000002000f832a03000090909090458bc841d1e9e9c0fcffff448954241c909090909090909090448b54241c909090904183faff0f8535000000909090e9e1fcffff909090458bd0ebe290909090909090909090909048c1e1034c8bd6e8000000000f1f840000000000448bd0ebbd4c8b44241090909090909090418b7018418bc2d1e0ffc03b04f50c0000000f831002000090909090909090909048c1e603448b548610458bda49c1e3034585d20f84b20100009090909042813cd508000000addeadde0f84a40100009090909090909090909090498bc3488b6c24304883c438493ba7500400000f8764030000c5f877c3909090904181faaddeadde0f85c800000044894c241c4489442418488b5c242090909090909090909090909090488b9bd0010000488b4340488bf2488bd1ffd00f1f8400000000009090909085c00f8466000000909090448b542418e9d8feffff909090e9c7fbffff909090904181faaddeadde0f844b02000090909090909090909090909049c1e203498bf2488b542408669048b8ffffffffffffffffe8000000000f1f840000000000488b542408488b742410e9fafaffff4c8b442410909090448b4c241c488b542408498bf0448b442418e911fcffff44894c241c4489442418909090904181faaddeadde0f84a20000009090909090909090909090909049c1e203498bf2488b54240866669048b8ffffffffffffffffe8000000000f1f840000000000e91cffffff4c8b442410909090498bf0e9f2fdffff4c8b44241090909090909090909090488b742408e8000000000f1f840000000000488b542408498bf0e94afaffff4c8b442410909090ebd0909090e95ffeffff909090909090428b04d51000000048c1e0034c8bd8e945feffff4c8b442410909090488b542408498bf0448b442418e93afbffff9090909090909041c78784040000e515feff49c7879004000000000000e8000000000f1f8400000000004c8bc69090909090909041c78784040000e5cefeff49c7879004000000000000e8000000000f1f8400000000004c8bc690909049c7c30000000041bae578feff488b54240890909090909090458997840400004d899f90040000e8000000000f1f8400000000004c8bc69090909090909041c78784040000ed82fdff49c7879004000094070000e8000000000f1f8400000000004c8bc690909049c7c30000000041bae56bfeffeb974c8bc690909049c7c3140a000041baed93fdffeb824c8bc69090909090909041c78784040000e5a5feff49c7879004000000000000e8000000000f1f8400000000004c8b4424109090909090909041c78784040000ed7efdff49c7879004000094020000e8000000000f1f840000000000458bd04c8bc69090909090909041c78784040000e595feff49c7879004000000000000e8000000000f1f8400000000004c8bc690909049c7c30000000041bae561feffe9defeffff48896c2430e800000000e996f7fffff4488d0df5f8ffff49898f68040000e948f7fffff4488d0d88fcffff49898f68040000e934f7fffff441c78784040000ed9dfdff49c7879004000014000000e8000000000f1f84000000000041c78784040000f5abfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5d0fdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f59afeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5d3feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f51afeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD  <||@
  Comment 76 32 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 81 34 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 86 36 rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 86 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 86 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 38 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 92 40 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 102 42 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0  <||@
  Comment 106 44 stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 111 46 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD  <||@
  Comment 119 block B21 null  <||@
  Comment 119 412 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 414 NOP  <||@
  Comment 120 416 NOP  <||@
  Comment 121 418 NOP  <||@
  Comment 122 420 NOP  <||@
  Comment 123 422 NOP  <||@
  Comment 124 424 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 128 426 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 137 block B22 null  <||@
  Comment 137 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 430 NOP  <||@
  Comment 138 432 NOP  <||@
  Comment 139 434 NOP  <||@
  Comment 140 436 JUMP ~outgoingValues: [] destination: B22 -> B25  <||@
  Comment 140 block B25 null  <||@
  Comment 140 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 140 464 NOP  <||@
  Comment 141 466 NOP  <||@
  Comment 142 468 NOP  <||@
  Comment 143 470 NOP  <||@
  Comment 144 472 NOP  <||@
  Comment 145 474 NOP  <||@
  Comment 146 476 NOP  <||@
  Comment 147 478 NOP  <||@
  Comment 148 480 NOP  <||@
  Comment 149 482 NOP  <||@
  Comment 150 484 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 150 {DataSection[0x0]}  <||@
  Comment 163 {DataSection[0x8]}  <||@
  Comment 176 {DataSection[0x10]}  <||@
  Comment 189 {DataSection[0x18]}  <||@
  Comment 202 {DataSection[0x20]}  <||@
  Comment 215 block B32 null  <||@
  Comment 215 592 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 215 594 NOP  <||@
  Comment 216 596 NOP  <||@
  Comment 217 598 NOP  <||@
  Comment 218 600 NOP  <||@
  Comment 219 602 NOP  <||@
  Comment 220 604 NOP  <||@
  Comment 221 606 NOP  <||@
  Comment 222 608 NOP  <||@
  Comment 223 610 NOP  <||@
  Comment 224 612 NOP  <||@
  Comment 225 614 NOP  <||@
  Comment 226 616 NOP  <||@
  Comment 227 618 rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD  <||@
  Comment 234 620 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 238 622 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 243 624 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 246 626 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 249 628 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7]  <||@
  Comment 249 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 249 INLINE_INVOKE  <||@
  Comment 251 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 259 630 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 264 632 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 269 634 JUMP ~outgoingValues: [] destination: B32 -> B36  <||@
  Comment 269 block B36 null  <||@
  Comment 269 714 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 269 716 NOP  <||@
  Comment 270 718 NOP  <||@
  Comment 271 720 NOP  <||@
  Comment 272 722 NOP  <||@
  Comment 273 724 NOP  <||@
  Comment 274 726 NOP  <||@
  Comment 275 728 NOP  <||@
  Comment 276 730 NOP  <||@
  Comment 277 732 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 280 734 r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7]  <||@
  Comment 280 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 280 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 288 736 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 292 738 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7]  <||@
  Comment 292 [rcx:0, rdx:0, rsi:0, r11:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 292 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 300 740 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null  <||@
  Comment 313 block B37 null  <||@
  Comment 313 742 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 313 744 NOP  <||@
  Comment 314 746 NOP  <||@
  Comment 315 748 NOP  <||@
  Comment 316 750 r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 319 752 JUMP ~outgoingValues: [] destination: B37 -> B40  <||@
  Comment 319 block B40 null  <||@
  Comment 319 780 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 319 782 NOP  <||@
  Comment 320 784 NOP  <||@
  Comment 321 786 NOP  <||@
  Comment 322 788 NOP  <||@
  Comment 323 790 NOP  <||@
  Comment 324 792 NOP  <||@
  Comment 325 794 NOP  <||@
  Comment 326 796 NOP  <||@
  Comment 327 798 rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD  <||@
  Comment 332 800 rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 334 802 rbx|DWORD = DEC value: r9|DWORD size: DWORD  <||@
  Comment 339 804 rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 341 806 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null  <||@
  Comment 354 block B41 null  <||@
  Comment 354 808 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 354 810 NOP  <||@
  Comment 355 812 NOP  <||@
  Comment 356 814 NOP  <||@
  Comment 357 816 NOP  <||@
  Comment 358 818 CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD  <||@
  Comment 367 block B42 null  <||@
  Comment 367 820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 367 822 NOP  <||@
  Comment 368 824 NOP  <||@
  Comment 369 826 NOP  <||@
  Comment 370 828 NOP  <||@
  Comment 371 830 r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 377 832 JUMP ~outgoingValues: [] destination: B42 -> B48  <||@
  Comment 377 block B48 null  <||@
  Comment 377 924 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 377 926 NOP  <||@
  Comment 378 928 NOP  <||@
  Comment 379 930 NOP  <||@
  Comment 380 932 NOP  <||@
  Comment 381 934 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD  <||@
  Comment 390 block B49 null  <||@
  Comment 390 936 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 390 938 NOP  <||@
  Comment 391 940 NOP  <||@
  Comment 392 942 NOP  <||@
  Comment 393 944 JUMP ~outgoingValues: [] destination: B49 -> B72  <||@
  Comment 393 block B72 null  <||@
  Comment 393 1368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 393 1370 NOP  <||@
  Comment 394 1372 NOP  <||@
  Comment 395 1374 NOP  <||@
  Comment 396 1376 NOP  <||@
  Comment 397 1378 NOP  <||@
  Comment 398 1380 NOP  <||@
  Comment 399 1382 NOP  <||@
  Comment 400 1384 NOP  <||@
  Comment 401 1386 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 408 1388 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 417 POLL_RETURN_FAR  <||@
  Comment 434 block B26 null  <||@
  Comment 434 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 434 488 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 439 490 NOP  <||@
  Comment 440 492 NOP  <||@
  Comment 441 494 NOP  <||@
  Comment 442 496 NOP  <||@
  Comment 443 498 NOP  <||@
  Comment 444 500 NOP  <||@
  Comment 445 502 rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD  <||@
  Comment 448 504 rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD  <||@
  Comment 455 506 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null  <||@
  Comment 465 block B27 null  <||@
  Comment 465 508 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 465 510 NOP  <||@
  Comment 466 512 NOP  <||@
  Comment 467 514 NOP  <||@
  Comment 468 516 NOP  <||@
  Comment 469 518 NOP  <||@
  Comment 470 520 NOP  <||@
  Comment 471 522 rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD  <||@
  Comment 475 524 rsi|DWORD = MOV value: rsi|QWORD size: DWORD  <||@
  Comment 477 526 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 485 block B29 null  <||@
  Comment 485 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 485 542 NOP  <||@
  Comment 486 544 NOP  <||@
  Comment 487 546 NOP  <||@
  Comment 488 548 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 490 550 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 495 552 JUMP ~outgoingValues: [] destination: B29 -> B36  <||@
  Comment 500 block B50 null  <||@
  Comment 500 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 500 948 NOP  <||@
  Comment 501 950 NOP  <||@
  Comment 502 952 NOP  <||@
  Comment 503 954 NOP  <||@
  Comment 504 956 NOP  <||@
  Comment 505 958 NOP  <||@
  Comment 506 960 r8|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 512 962 r9|DWORD = SHL value: r8|DWORD size: DWORD  <||@
  Comment 518 964 CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD  <||@
  Comment 527 block B51 null  <||@
  Comment 527 966 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 527 968 NOP  <||@
  Comment 528 970 NOP  <||@
  Comment 529 972 NOP  <||@
  Comment 530 974 NOP  <||@
  Comment 531 976 NOP  <||@
  Comment 532 978 NOP  <||@
  Comment 533 980 NOP  <||@
  Comment 534 982 NOP  <||@
  Comment 535 984 NOP  <||@
  Comment 536 986 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 540 988 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 545 990 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 549 992 CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD  <||@
  Comment 558 block B53 null  <||@
  Comment 558 1006 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 558 1008 NOP  <||@
  Comment 559 1010 NOP  <||@
  Comment 560 1012 NOP  <||@
  Comment 561 1014 NOP  <||@
  Comment 562 1016 NOP  <||@
  Comment 563 1018 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 567 1020 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD  <||@
  Comment 576 block B54 null  <||@
  Comment 576 1022 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 576 1024 NOP  <||@
  Comment 577 1026 NOP  <||@
  Comment 578 1028 NOP  <||@
  Comment 579 1030 JUMP ~outgoingValues: [] destination: B54 -> B62  <||@
  Comment 579 block B62 null  <||@
  Comment 579 1196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 579 1198 NOP  <||@
  Comment 580 1200 NOP  <||@
  Comment 581 1202 NOP  <||@
  Comment 582 1204 NOP  <||@
  Comment 583 1206 NOP  <||@
  Comment 584 1208 NOP  <||@
  Comment 585 1210 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 588 1212 r9|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 591 1214 CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7]  <||@
  Comment 591 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |- 
     stack:   |int[0|0x0]    |              |          |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 591 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 605 block B63 null  <||@
  Comment 605 1216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 605 1218 NOP  <||@
  Comment 606 1220 NOP  <||@
  Comment 607 1222 NOP  <||@
  Comment 608 1224 NOP  <||@
  Comment 609 1226 NOP  <||@
  Comment 610 1228 NOP  <||@
  Comment 611 1230 NOP  <||@
  Comment 612 1232 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 616 1234 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 621 1236 TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD  <||@
  Comment 629 block B65 null  <||@
  Comment 629 1248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 629 1250 NOP  <||@
  Comment 630 1252 NOP  <||@
  Comment 631 1254 NOP  <||@
  Comment 632 1256 NOP  <||@
  Comment 633 1258 CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 633 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 650 block B67 null  <||@
  Comment 650 1298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 1300 NOP  <||@
  Comment 651 1302 NOP  <||@
  Comment 652 1304 NOP  <||@
  Comment 653 1306 JUMP ~outgoingValues: [] destination: B67 -> B72  <||@
  Comment 658 block B1 null  <||@
  Comment 658 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 658 50 NOP  <||@
  Comment 659 52 NOP  <||@
  Comment 660 54 NOP  <||@
  Comment 661 56 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 667 58 JUMP ~outgoingValues: [] destination: B1 -> B2  <||@
  Comment 672 block B3 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 672 72 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 672 74 NOP  <||@
  Comment 673 76 NOP  <||@
  Comment 674 78 NOP  <||@
  Comment 675 80 NOP  <||@
  Comment 676 82 NOP  <||@
  Comment 677 84 NOP  <||@
  Comment 678 86 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 681 88 r11|DWORD = SHL value: r10|DWORD size: DWORD  <||@
  Comment 687 90 CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7]  <||@
  Comment 687 [rax:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 687 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 701 block B4 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 701 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 701 94 NOP  <||@
  Comment 702 96 NOP  <||@
  Comment 703 98 NOP  <||@
  Comment 704 100 NOP  <||@
  Comment 705 102 NOP  <||@
  Comment 706 104 NOP  <||@
  Comment 707 106 NOP  <||@
  Comment 708 108 NOP  <||@
  Comment 709 110 NOP  <||@
  Comment 710 112 NOP  <||@
  Comment 711 114 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 715 116 rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 720 118 NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7]  <||@
  Comment 720 [rax:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 720 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 727 120 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 731 122 CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 740 block B6 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 740 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 740 138 NOP  <||@
  Comment 741 140 NOP  <||@
  Comment 742 142 NOP  <||@
  Comment 743 144 NOP  <||@
  Comment 744 146 NOP  <||@
  Comment 745 148 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 749 150 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 758 block B7 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 758 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 758 154 NOP  <||@
  Comment 759 156 NOP  <||@
  Comment 760 158 NOP  <||@
  Comment 761 160 JUMP ~outgoingValues: [] destination: B7 -> B15  <||@
  Comment 761 block B15 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 761 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 761 324 NOP  <||@
  Comment 762 326 NOP  <||@
  Comment 763 328 NOP  <||@
  Comment 764 330 NOP  <||@
  Comment 765 332 NOP  <||@
  Comment 766 334 NOP  <||@
  Comment 767 336 SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7]  <||@
  Comment 774 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
     stack:   |int[0|0x0]    |              |           |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 774 {infopoint: SAFEPOINT}  <||@
  Comment 774 POLL_FAR  <||@
  Comment 776 338 r10|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 779 340 JUMP ~outgoingValues: [] destination: B15 -> B2  <||@
  Comment 779 block B2 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 779 60 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 779 62 NOP  <||@
  Comment 780 64 NOP  <||@
  Comment 781 66 NOP  <||@
  Comment 782 68 NOP  <||@
  Comment 783 70 CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD  <||@
  Comment 794 block B8 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 794 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 794 164 NOP  <||@
  Comment 795 166 NOP  <||@
  Comment 796 168 NOP  <||@
  Comment 797 170 NOP  <||@
  Comment 798 172 CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 798 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 811 block B9 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 811 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 811 176 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 816 178 NOP  <||@
  Comment 817 180 NOP  <||@
  Comment 818 182 NOP  <||@
  Comment 819 184 NOP  <||@
  Comment 820 186 NOP  <||@
  Comment 821 188 NOP  <||@
  Comment 822 190 NOP  <||@
  Comment 823 192 NOP  <||@
  Comment 824 194 NOP  <||@
  Comment 825 196 NOP  <||@
  Comment 826 198 NOP  <||@
  Comment 827 200 NOP  <||@
  Comment 828 202 NOP  <||@
  Comment 829 204 r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD  <||@
  Comment 836 206 r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD  <||@
  Comment 840 208 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 843 210 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 846 212 rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 849 214 rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD  <||@
  Comment 852 216 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7]  <||@
  Comment 852 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 852 INLINE_INVOKE  <||@
  Comment 854 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:36|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 862 218 JUMP ~outgoingValues: [] destination: B9 -> B13  <||@
  Comment 862 block B13 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 862 292 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 862 294 NOP  <||@
  Comment 863 296 NOP  <||@
  Comment 864 298 NOP  <||@
  Comment 865 300 NOP  <||@
  Comment 866 302 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD  <||@
  Comment 874 block B14 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 874 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 874 306 NOP  <||@
  Comment 875 308 NOP  <||@
  Comment 876 310 NOP  <||@
  Comment 877 312 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 882 314 rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD  <||@
  Comment 887 316 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 892 318 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 897 320 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 902 block B10 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 902 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 902 222 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 907 224 NOP  <||@
  Comment 908 226 NOP  <||@
  Comment 909 228 NOP  <||@
  Comment 910 230 NOP  <||@
  Comment 911 232 CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 911 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 924 block B12 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 924 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 924 254 NOP  <||@
  Comment 925 256 NOP  <||@
  Comment 926 258 NOP  <||@
  Comment 927 260 NOP  <||@
  Comment 928 262 NOP  <||@
  Comment 929 264 NOP  <||@
  Comment 930 266 NOP  <||@
  Comment 931 268 NOP  <||@
  Comment 932 270 NOP  <||@
  Comment 933 272 NOP  <||@
  Comment 934 274 NOP  <||@
  Comment 935 276 NOP  <||@
  Comment 936 278 NOP  <||@
  Comment 937 280 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 941 282 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 944 284 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 949 286 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 952 288 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7]  <||@
  Comment 953 INVOKEVIRTUAL  <||@
  Comment 963 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 968 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:36|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 976 290 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 978 block B11 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 978 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 978 236 NOP  <||@
  Comment 979 238 NOP  <||@
  Comment 980 240 NOP  <||@
  Comment 981 242 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 986 246 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 991 248 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 996 250 JUMP ~outgoingValues: [] destination: B11 -> B15  <||@
  Comment 1001 block B19 null  <||@
  Comment 1001 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1001 380 NOP  <||@
  Comment 1002 382 NOP  <||@
  Comment 1003 384 NOP  <||@
  Comment 1004 386 JUMP ~outgoingValues: [] destination: B19 -> B72  <||@
  Comment 1009 block B23 null  <||@
  Comment 1009 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1009 440 NOP  <||@
  Comment 1010 442 NOP  <||@
  Comment 1011 444 NOP  <||@
  Comment 1012 446 NOP  <||@
  Comment 1013 448 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 1013 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 1026 block B24 null  <||@
  Comment 1026 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1026 452 NOP  <||@
  Comment 1027 454 NOP  <||@
  Comment 1028 456 NOP  <||@
  Comment 1029 460 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 1034 block B44 null  <||@
  Comment 1034 852 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1034 854 NOP  <||@
  Comment 1035 856 NOP  <||@
  Comment 1036 858 NOP  <||@
  Comment 1037 860 NOP  <||@
  Comment 1038 862 NOP  <||@
  Comment 1039 864 rbx|DWORD = SHL value: rbx|DWORD size: DWORD  <||@
  Comment 1041 866 CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD  <||@
  Comment 1050 block B45 null  <||@
  Comment 1050 868 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1050 870 NOP  <||@
  Comment 1051 872 NOP  <||@
  Comment 1052 874 NOP  <||@
  Comment 1053 876 NOP  <||@
  Comment 1054 878 NOP  <||@
  Comment 1055 880 rdi|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 1059 882 CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD  <||@
  Comment 1068 block B46 null  <||@
  Comment 1068 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1068 886 NOP  <||@
  Comment 1069 888 NOP  <||@
  Comment 1070 890 NOP  <||@
  Comment 1071 892 NOP  <||@
  Comment 1072 894 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null  <||@
  Comment 1085 block B47 null  <||@
  Comment 1085 896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1085 898 NOP  <||@
  Comment 1086 900 NOP  <||@
  Comment 1087 902 NOP  <||@
  Comment 1088 904 NOP  <||@
  Comment 1089 906 NOP  <||@
  Comment 1090 908 NOP  <||@
  Comment 1091 910 NOP  <||@
  Comment 1092 912 r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1098 914 r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD  <||@
  Comment 1102 916 r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1108 918 r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1111 920 r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1114 922 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 1119 block B38 null  <||@
  Comment 1119 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1119 756 NOP  <||@
  Comment 1120 758 NOP  <||@
  Comment 1121 760 NOP  <||@
  Comment 1122 762 NOP  <||@
  Comment 1123 764 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null  <||@
  Comment 1136 block B39 null  <||@
  Comment 1136 766 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1136 768 NOP  <||@
  Comment 1137 770 NOP  <||@
  Comment 1138 772 NOP  <||@
  Comment 1139 774 NOP  <||@
  Comment 1140 776 r9|DWORD = SHR value: r8|DWORD size: DWORD  <||@
  Comment 1146 778 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 1151 block B5 null  <||@
  Comment 1151 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1151 126 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1156 128 NOP  <||@
  Comment 1157 130 NOP  <||@
  Comment 1158 132 NOP  <||@
  Comment 1159 134 JUMP ~outgoingValues: [] destination: B5 -> B17  <||@
  Comment 1159 block B17 null  <||@
  Comment 1159 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1159 358 NOP  <||@
  Comment 1160 360 NOP  <||@
  Comment 1161 362 NOP  <||@
  Comment 1162 364 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 1162 block B18 null  <||@
  Comment 1162 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1162 368 NOP  <||@
  Comment 1163 370 NOP  <||@
  Comment 1164 372 NOP  <||@
  Comment 1165 374 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1170 376 JUMP ~outgoingValues: [] destination: B18 -> B70  <||@
  Comment 1170 block B70 null  <||@
  Comment 1170 1346 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1170 1348 NOP  <||@
  Comment 1171 1350 NOP  <||@
  Comment 1172 1352 NOP  <||@
  Comment 1173 1354 NOP  <||@
  Comment 1174 1356 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null  <||@
  Comment 1184 block B71 null  <||@
  Comment 1184 1358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1184 1360 NOP  <||@
  Comment 1185 1362 NOP  <||@
  Comment 1186 1364 NOP  <||@
  Comment 1187 1366 JUMP ~outgoingValues: [] destination: B71 -> B72  <||@
  Comment 1192 block B52 null  <||@
  Comment 1192 994 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1192 996 NOP  <||@
  Comment 1193 998 NOP  <||@
  Comment 1194 1000 NOP  <||@
  Comment 1195 1002 r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1198 1004 JUMP ~outgoingValues: [] destination: B52 -> B70  <||@
  Comment 1200 block B66 null  <||@
  Comment 1200 1260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1200 1262 NOP  <||@
  Comment 1201 1264 NOP  <||@
  Comment 1202 1266 NOP  <||@
  Comment 1203 1268 NOP  <||@
  Comment 1204 1270 NOP  <||@
  Comment 1205 1272 NOP  <||@
  Comment 1206 1274 NOP  <||@
  Comment 1207 1276 NOP  <||@
  Comment 1208 1278 NOP  <||@
  Comment 1209 1280 NOP  <||@
  Comment 1210 1282 NOP  <||@
  Comment 1211 1284 NOP  <||@
  Comment 1212 1286 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1216 1288 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1219 1292 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7]  <||@
  Comment 1219 {HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>}  <||@
  Comment 1219 INVOKESPECIAL  <||@
  Comment 1224 [stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1232 1294 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1235 1296 JUMP ~outgoingValues: [] destination: B66 -> B70  <||@
  Comment 1237 block B73 null  <||@
  Comment 1237 1390 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1237 1392 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1242 1394 NOP  <||@
  Comment 1243 1396 NOP  <||@
  Comment 1244 1398 NOP  <||@
  Comment 1245 1400 NOP  <||@
  Comment 1246 1402 NOP  <||@
  Comment 1247 1404 NOP  <||@
  Comment 1248 1406 NOP  <||@
  Comment 1249 1408 rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD  <||@
  Comment 1253 1410 rax|DWORD = SHL value: r10|DWORD size: DWORD  <||@
  Comment 1258 1412 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 1260 1414 CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10]  <||@
  Comment 1260 [rsi:0, r8:0]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r10|DWORD    |   |    <||@
  Comment 1260 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1273 block B74 null  <||@
  Comment 1273 1416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1273 1418 NOP  <||@
  Comment 1274 1420 NOP  <||@
  Comment 1275 1422 NOP  <||@
  Comment 1276 1424 NOP  <||@
  Comment 1277 1426 NOP  <||@
  Comment 1278 1428 NOP  <||@
  Comment 1279 1430 NOP  <||@
  Comment 1280 1432 NOP  <||@
  Comment 1281 1434 NOP  <||@
  Comment 1282 1436 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1286 1438 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1291 1440 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1298 1442 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD  <||@
  Comment 1307 block B76 null  <||@
  Comment 1307 1454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1307 1456 NOP  <||@
  Comment 1308 1458 NOP  <||@
  Comment 1309 1460 NOP  <||@
  Comment 1310 1462 NOP  <||@
  Comment 1311 1464 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1311 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1329 block B78 null  <||@
  Comment 1329 1488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1329 1490 NOP  <||@
  Comment 1330 1492 NOP  <||@
  Comment 1331 1494 NOP  <||@
  Comment 1332 1496 JUMP ~outgoingValues: [] destination: B78 -> B79  <||@
  Comment 1332 block B79 null  <||@
  Comment 1332 1498 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1332 1500 NOP  <||@
  Comment 1333 1502 NOP  <||@
  Comment 1334 1504 NOP  <||@
  Comment 1335 1506 NOP  <||@
  Comment 1336 1508 NOP  <||@
  Comment 1337 1510 NOP  <||@
  Comment 1338 1512 NOP  <||@
  Comment 1339 1514 NOP  <||@
  Comment 1340 1516 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 1518 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1352 POLL_RETURN_FAR  <||@
  Comment 1369 block B55 null  <||@
  Comment 1369 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1369 1034 NOP  <||@
  Comment 1370 1036 NOP  <||@
  Comment 1371 1038 NOP  <||@
  Comment 1372 1040 NOP  <||@
  Comment 1373 1042 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 1373 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 1386 block B56 null  <||@
  Comment 1386 1044 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1386 1046 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1391 1048 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1396 1050 rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD  <||@
  Comment 1401 1052 NOP  <||@
  Comment 1402 1054 NOP  <||@
  Comment 1403 1056 NOP  <||@
  Comment 1404 1058 NOP  <||@
  Comment 1405 1060 NOP  <||@
  Comment 1406 1062 NOP  <||@
  Comment 1407 1064 NOP  <||@
  Comment 1408 1066 NOP  <||@
  Comment 1409 1068 NOP  <||@
  Comment 1410 1070 NOP  <||@
  Comment 1411 1072 NOP  <||@
  Comment 1412 1074 NOP  <||@
  Comment 1413 1076 NOP  <||@
  Comment 1414 1078 rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD  <||@
  Comment 1421 1080 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1425 1082 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1428 1084 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1431 1086 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7]  <||@
  Comment 1431 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1431 INLINE_INVOKE  <||@
  Comment 1433 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:40|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1441 1088 JUMP ~outgoingValues: [] destination: B56 -> B60  <||@
  Comment 1441 block B60 null  <||@
  Comment 1441 1164 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1441 1166 NOP  <||@
  Comment 1442 1168 NOP  <||@
  Comment 1443 1170 NOP  <||@
  Comment 1444 1172 NOP  <||@
  Comment 1445 1174 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD  <||@
  Comment 1453 block B69 null  <||@
  Comment 1453 1334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1453 1336 NOP  <||@
  Comment 1454 1338 NOP  <||@
  Comment 1455 1340 NOP  <||@
  Comment 1456 1342 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1461 1344 JUMP ~outgoingValues: [] destination: B69 -> B70  <||@
  Comment 1466 block B64 null  <||@
  Comment 1466 1238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1466 1240 NOP  <||@
  Comment 1467 1242 NOP  <||@
  Comment 1468 1244 NOP  <||@
  Comment 1469 1246 JUMP ~outgoingValues: [] destination: B64 -> B72  <||@
  Comment 1474 block B33 null  <||@
  Comment 1474 636 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1474 640 NOP  <||@
  Comment 1475 642 NOP  <||@
  Comment 1476 644 NOP  <||@
  Comment 1477 646 NOP  <||@
  Comment 1478 648 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 1478 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 1491 block B35 null  <||@
  Comment 1491 674 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1491 676 NOP  <||@
  Comment 1492 678 NOP  <||@
  Comment 1493 680 NOP  <||@
  Comment 1494 682 NOP  <||@
  Comment 1495 684 NOP  <||@
  Comment 1496 686 NOP  <||@
  Comment 1497 688 NOP  <||@
  Comment 1498 690 NOP  <||@
  Comment 1499 692 NOP  <||@
  Comment 1500 694 NOP  <||@
  Comment 1501 696 NOP  <||@
  Comment 1502 698 NOP  <||@
  Comment 1503 700 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1507 702 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1510 704 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1515 706 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7]  <||@
  Comment 1517 INVOKEVIRTUAL  <||@
  Comment 1527 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 1532 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1540 708 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1545 710 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1550 712 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1555 block B61 null  <||@
  Comment 1555 1176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1555 1178 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1560 1180 NOP  <||@
  Comment 1561 1182 NOP  <||@
  Comment 1562 1184 NOP  <||@
  Comment 1563 1186 r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1568 1188 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1573 1190 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1576 1192 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1581 1194 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1586 block B57 null  <||@
  Comment 1586 1090 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1586 1092 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1591 1094 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1596 1096 NOP  <||@
  Comment 1597 1098 NOP  <||@
  Comment 1598 1100 NOP  <||@
  Comment 1599 1102 NOP  <||@
  Comment 1600 1104 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 1600 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 1613 block B59 null  <||@
  Comment 1613 1126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1613 1128 NOP  <||@
  Comment 1614 1130 NOP  <||@
  Comment 1615 1132 NOP  <||@
  Comment 1616 1134 NOP  <||@
  Comment 1617 1136 NOP  <||@
  Comment 1618 1138 NOP  <||@
  Comment 1619 1140 NOP  <||@
  Comment 1620 1142 NOP  <||@
  Comment 1621 1144 NOP  <||@
  Comment 1622 1146 NOP  <||@
  Comment 1623 1148 NOP  <||@
  Comment 1624 1150 NOP  <||@
  Comment 1625 1152 NOP  <||@
  Comment 1626 1154 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1630 1156 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1633 1158 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1638 1160 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7]  <||@
  Comment 1641 INVOKEVIRTUAL  <||@
  Comment 1651 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 1656 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:40|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1664 1162 JUMP ~outgoingValues: [] destination: B59 -> B60  <||@
  Comment 1669 block B16 null  <||@
  Comment 1669 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1669 344 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1674 346 NOP  <||@
  Comment 1675 348 NOP  <||@
  Comment 1676 350 NOP  <||@
  Comment 1677 352 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1680 354 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 1685 block B30 null  <||@
  Comment 1685 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1685 556 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 558 NOP  <||@
  Comment 1691 560 NOP  <||@
  Comment 1692 562 NOP  <||@
  Comment 1693 564 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 1693 block B31 null  <||@
  Comment 1693 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1693 568 NOP  <||@
  Comment 1694 570 NOP  <||@
  Comment 1695 572 NOP  <||@
  Comment 1696 574 NOP  <||@
  Comment 1697 576 NOP  <||@
  Comment 1698 578 NOP  <||@
  Comment 1699 580 NOP  <||@
  Comment 1700 582 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1705 584 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7]  <||@
  Comment 1705 {Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 1710 [r8:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0            |1                  |2  |3  |4 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |- 
     stack:   |r8|QWORD[.]  |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 1718 586 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1723 588 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1726 590 JUMP ~outgoingValues: [] destination: B31 -> B36  <||@
  Comment 1731 block B28 null  <||@
  Comment 1731 528 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1731 530 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1736 532 NOP  <||@
  Comment 1737 534 NOP  <||@
  Comment 1738 536 NOP  <||@
  Comment 1739 538 JUMP ~outgoingValues: [] destination: B28 -> B31  <||@
  Comment 1741 block B75 null  <||@
  Comment 1741 1444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1741 1446 NOP  <||@
  Comment 1742 1448 NOP  <||@
  Comment 1743 1450 NOP  <||@
  Comment 1744 1452 JUMP ~outgoingValues: [] destination: B75 -> B79  <||@
  Comment 1749 block B77 null  <||@
  Comment 1749 1466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1749 1468 NOP  <||@
  Comment 1750 1470 NOP  <||@
  Comment 1751 1472 NOP  <||@
  Comment 1752 1474 NOP  <||@
  Comment 1753 1476 NOP  <||@
  Comment 1754 1478 NOP  <||@
  Comment 1755 1480 rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1763 1482 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1767 1484 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1770 1486 JUMP ~outgoingValues: [] destination: B77 -> B79  <||@
  Comment 1775 block B58 null  <||@
  Comment 1775 1106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1775 1108 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1780 1110 NOP  <||@
  Comment 1781 1112 NOP  <||@
  Comment 1782 1114 NOP  <||@
  Comment 1783 1118 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 1120 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1791 1122 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1796 1124 JUMP ~outgoingValues: [] destination: B58 -> B62  <||@
  Comment 1801 block B80 null  <||@
  Comment 1801 1520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1801 1522 NOP  <||@
  Comment 1802 1524 NOP  <||@
  Comment 1803 1526 NOP  <||@
  Comment 1804 1528 NOP  <||@
  Comment 1805 1530 NOP  <||@
  Comment 1806 1532 NOP  <||@
  Comment 1807 1534 NOP  <||@
  Comment 1808 1536 MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD  <||@
  Comment 1819 1538 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1830 1540 DEOPT info [bci:10]  <||@
  Comment 1830 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1835 [r8:0]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r10|DWORD    |   |    <||@
  Comment 1843 block B20 null  <||@
  Comment 1843 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1843 390 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1846 392 NOP  <||@
  Comment 1847 394 NOP  <||@
  Comment 1848 396 NOP  <||@
  Comment 1849 398 NOP  <||@
  Comment 1850 400 NOP  <||@
  Comment 1851 402 NOP  <||@
  Comment 1852 404 NOP  <||@
  Comment 1853 406 MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD  <||@
  Comment 1864 408 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1875 410 DEOPT info [bci:2, 15, 7]  <||@
  Comment 1875 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1880 [r8:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2, duringCall: false, rethrow: false]
              |0            |1                  |2          |3 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 1888 block B43 null  <||@
  Comment 1888 834 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1888 836 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1891 838 NOP  <||@
  Comment 1892 840 NOP  <||@
  Comment 1893 842 NOP  <||@
  Comment 1894 844 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1901 846 r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5]  <||@
  Comment 1907 850 JUMP ~outgoingValues: [] destination: B43 -> B85  <||@
  Comment 1907 block B85 null  <||@
  Comment 1907 1620 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1907 848 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1912 1622 NOP  <||@
  Comment 1913 1624 NOP  <||@
  Comment 1914 1626 NOP  <||@
  Comment 1915 1628 NOP  <||@
  Comment 1916 1630 NOP  <||@
  Comment 1917 1632 NOP  <||@
  Comment 1918 1634 NOP  <||@
  Comment 1919 1636 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1926 1638 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1933 1640 DEOPT info [bci:64, 3, 9, 7]  <||@
  Comment 1933 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1938 [rdx:0, r8:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64, duringCall: false, rethrow: false]
              |0          |1         |2 
     locals:  |-          |-         |- 
     stack:   |rax|DWORD  |r9|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4 
     locals:  |r8|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |r8|QWORD[.]  |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 1946 block B86 null  <||@
  Comment 1946 1642 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1946 1644 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1949 1646 NOP  <||@
  Comment 1950 1648 NOP  <||@
  Comment 1951 1650 NOP  <||@
  Comment 1952 1652 NOP  <||@
  Comment 1953 1654 NOP  <||@
  Comment 1954 1656 NOP  <||@
  Comment 1955 1658 NOP  <||@
  Comment 1956 1660 MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD  <||@
  Comment 1967 1662 MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD  <||@
  Comment 1978 1664 DEOPT info [bci:52, 3, 9, 7]  <||@
  Comment 1978 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1983 [r8:0, stack:8]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0            |1  |2         
     locals:  |r8|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0            |1                  |2  |3  |4 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |- 
     stack:   |r8|QWORD[.]  |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 1991 block B84 null  <||@
  Comment 1991 1602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1991 1604 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1994 1606 NOP  <||@
  Comment 1995 1608 NOP  <||@
  Comment 1996 1610 NOP  <||@
  Comment 1997 1612 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2004 1614 r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5]  <||@
  Comment 2010 1618 JUMP ~outgoingValues: [] destination: B84 -> B85  <||@
  Comment 2012 block B82 null  <||@
  Comment 2012 1566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2012 1568 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2015 1570 NOP  <||@
  Comment 2016 1572 NOP  <||@
  Comment 2017 1574 NOP  <||@
  Comment 2018 1576 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2025 1578 r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed]  <||@
  Comment 2031 1582 JUMP ~outgoingValues: [] destination: B82 -> B85  <||@
  Comment 2033 block B81 null  <||@
  Comment 2033 1542 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2033 1544 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2036 1546 NOP  <||@
  Comment 2037 1548 NOP  <||@
  Comment 2038 1550 NOP  <||@
  Comment 2039 1552 NOP  <||@
  Comment 2040 1554 NOP  <||@
  Comment 2041 1556 NOP  <||@
  Comment 2042 1558 NOP  <||@
  Comment 2043 1560 MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD  <||@
  Comment 2054 1562 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2065 1564 DEOPT info [bci:9, 9, 7]  <||@
  Comment 2065 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2070 [r8:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9, duringCall: false, rethrow: false]
              |0            |1                  |2  |3  |4 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |- 
     stack:   |r11|DWORD    |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 2078 block B34 null  <||@
  Comment 2078 650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2078 652 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2083 654 NOP  <||@
  Comment 2084 656 NOP  <||@
  Comment 2085 658 NOP  <||@
  Comment 2086 660 NOP  <||@
  Comment 2087 662 NOP  <||@
  Comment 2088 664 NOP  <||@
  Comment 2089 666 NOP  <||@
  Comment 2090 668 MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD  <||@
  Comment 2101 670 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2112 672 DEOPT info [bci:0]  <||@
  Comment 2112 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2117 [r8:0, stack:8]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0, duringCall: false, rethrow: false]
              |0            |1                  |2 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 2125 block B68 null  <||@
  Comment 2125 1308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2125 1310 r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2128 1312 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2131 1314 NOP  <||@
  Comment 2132 1316 NOP  <||@
  Comment 2133 1318 NOP  <||@
  Comment 2134 1320 NOP  <||@
  Comment 2135 1322 NOP  <||@
  Comment 2136 1324 NOP  <||@
  Comment 2137 1326 NOP  <||@
  Comment 2138 1328 MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD  <||@
  Comment 2149 1330 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2160 1332 DEOPT info [bci:29, 9, 7]  <||@
  Comment 2160 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2165 [r8:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29, duringCall: false, rethrow: false]
              |0            |1                  |2          |3  |4 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |r10|DWORD  |-  |- 
     stack:   |int[0|0x0]   |                   |           |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 2173 block B83 null  <||@
  Comment 2173 1584 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2173 1586 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2176 1588 NOP  <||@
  Comment 2177 1590 NOP  <||@
  Comment 2178 1592 NOP  <||@
  Comment 2179 1594 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2186 1596 r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5]  <||@
  Comment 2192 1600 JUMP ~outgoingValues: [] destination: B83 -> B85  <||@
  Comment 2202 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2227 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2247 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2275 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2280 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2310 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2315 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2350 [rcx:0, rdx:0, rsi:0, r11:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2380 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2385 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |- 
     stack:   |int[0|0x0]    |              |          |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2415 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2420 [rax:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2450 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2455 [rsi:0, r8:0]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r10|DWORD    |   |    <||@
  Comment 2463 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2463 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2469 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2469 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6834[org.graalvm.collections.EconomicMapImpl.get(Object)]"
  method "HotSpotCompilation-6834[org.graalvm.collections.EconomicMapImpl.get(Object)]"
  date 1724269744861
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae62fe0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85832092fe66669089842400c0feff4883ec389041817f20030000000f855b0800009090909090909090909090909048896c2430488974241048895424088b5a088b461c49ba0000002b787f0000498d1c1a48895c242085c00f841b0200009090909090448b56204585d20f856803000090909090909090909090909090483b1d23ffffff0f840f010000483b1d1effffff0f8402010000483b1d19ffffff0f84f5000000483b1d14ffffff0f84e8000000483b1d0fffffff0f84db000000909090909090909090909090488b83e00100004c8b5040488b742408488bd8498bc2ffd00f1f840000000000488b542408488b74241090909090909090908b4e18448b14cd0c000000448b5e1c468b04dd0c0000004181fa000200000f8326030000909090458bc890909090909090908bd8c1eb1033c3418bd9ffcb23d84181fa000200000f83a802000090909090443bc30f86f105000090909090460fb65cdb10909090904585db0f856e000000909090909090909090909048c7c000000000488b6c24304883c438493ba7500400000f87f7060000c5f877c3488b542408909090909090488b32488bce4883e1034883f9010f85c404000090909090909048c1ee088bf685f60f84de0400009090908bc6488b742410e919ffffff909090909090458bc341ffc8458bc841d1e1453bd10f86e205000090909090909090909048c1e103428b4c891048c1e103483bca0f847a0200009090909090448b56204585d20f85190300009090909090909090908b4e1841ffc1443b0ccd0c0000000f83f00500009090909090909048c1e103428b4c891085c90f844503000090909090813ccd0800000018ac00010f8426020000909090e9f7feffff90909041ba00000000e96b0000009090909090908b4618458bda41d1e3443b1cc50c0000000f83760400009090909090909090909048c1e003428b4498108504c50000000048c1e003483bc20f849b0100009090909090448b5e204585db0f8524000000909090909090909090498b8758040000850041ffc290909090443b560c7c8be9cf000000909090904181fb86e8bac50f855b000000448954241c909090909090909090909090904c8b9bd00100004d8b4340488bf2488bd0498bdb498bc0ffd00f1f8400000000009090909085c00f851b030000909090448b54241c488b5c2420488b542408488b742410e973ffffff448954241c909090904181fb17c2bcc50f84360000009090909090909090909090909049c1e303498bf3488b542408488bc89048b8ffffffffffffffffe8d82292fe0f1f840018060009eb8c909090448b54241c488b542408488b742410e910ffffff909090e998fdffff909090904181fa86e8bac50f85c0010000909090e982fcffff9090909090d1e3443bc30f86ad03000090909090908bfbffc7443bc70f8651040000909090904181fa000002000f839f03000090909090909090460fb644df1041c1e008460fb65cdb10450bc3458bd8e91afdffff909090904181fa000002000f832a03000090909090458bc841d1e9e9c0fcffff448954241c909090909090909090448b54241c909090904183faff0f8535000000909090e9e1fcffff909090458bd0ebe290909090909090909090909048c1e1034c8bd6e8d81e92fe0f1f84001807000a448bd0ebbd4c8b44241090909090909090418b7018418bc2d1e0ffc03b04f50c0000000f831002000090909090909090909048c1e603448b548610458bda49c1e3034585d20f84b20100009090909042813cd50800000018ac00010f84a40100009090909090909090909090498bc3488b6c24304883c438493ba7500400000f8764030000c5f877c3909090904181fa86e8bac50f85c800000044894c241c4489442418488b5c242090909090909090909090909090488b9bd0010000488b4340488bf2488bd1ffd00f1f8400000000009090909085c00f8466000000909090448b542418e9d8feffff909090e9c7fbffff909090904181fa17c2bcc50f844b02000090909090909090909090909049c1e203498bf2488b542408669048b8ffffffffffffffffe8a42092fe0f1f84004c08000d488b542408488b742410e9fafaffff4c8b442410909090448b4c241c488b542408498bf0448b442418e911fcffff44894c241c4489442418909090904181fa17c2bcc50f84a20000009090909090909090909090909049c1e203498bf2488b54240866669048b8ffffffffffffffffe8282092fe0f1f8400c808000ee91cffffff4c8b442410909090498bf0e9f2fdffff4c8b44241090909090909090909090488b742408e8f29ea7fe0f1f840000000000488b542408498bf0e94afaffff4c8b442410909090ebd0909090e95ffeffff909090909090428b04d51000000048c1e0034c8bd8e945feffff4c8b442410909090488b542408498bf0448b442418e93afbffff9090909090909041c78784040000e515feff49c7879004000000000000e86f7a92fe0f1f8400000000004c8bc69090909090909041c78784040000e5cefeff49c7879004000000000000e8427a92fe0f1f8400000000004c8bc690909049c7c30000000041bae578feff488b54240890909090909090458997840400004d899f90040000e8087a92fe0f1f8400000000004c8bc69090909090909041c78784040000ed82fdff49c7879004000094070000e8db7992fe0f1f8400000000004c8bc690909049c7c30000000041bae56bfeffeb974c8bc690909049c7c3140a000041baed93fdffeb824c8bc69090909090909041c78784040000e5a5feff49c7879004000000000000e8847992fe0f1f8400000000004c8b4424109090909090909041c78784040000ed7efdff49c7879004000094020000e8557992fe0f1f840000000000458bd04c8bc69090909090909041c78784040000e595feff49c7879004000000000000e8257992fe0f1f8400000000004c8bc690909049c7c30000000041bae561feffe9defeffff48896c2430e8a17990fee996f7fffff4488d0df5f8ffff49898f68040000e9688792fef4488d0d88fcffff49898f68040000e9548792fef441c78784040000ed9dfdff49c7879004000014000000e8b27892fe0f1f84000000000041c78784040000f5abfeff49c7879004000000000000e88f7892fe0f1f84000000000041c78784040000f5d0fdff49c7879004000000000000e86c7892fe0f1f84000000000041c78784040000f59afeff49c7879004000000000000e8497892fe0f1f84000000000041c78784040000f5d3feff49c7879004000000000000e8267892fe0f1f84000000000041c78784040000f51afeff49c7879004000000000000e8037892fe0f1f840000000000e87c19a6fef4e8967592fef4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13775792 slotKind: QWORD  <||@
  Comment 76 32 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 81 34 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 86 36 rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 86 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 86 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 38 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 92 40 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 102 42 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 140154094223360 shift: 0  <||@
  Comment 106 44 stack:32|QWORD = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 111 46 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.17237102083151978 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B21 size: DWORD  <||@
  Comment 119 block B21 null  <||@
  Comment 119 412 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 414 NOP  <||@
  Comment 120 416 NOP  <||@
  Comment 121 418 NOP  <||@
  Comment 122 420 NOP  <||@
  Comment 123 422 NOP  <||@
  Comment 124 424 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 128 426 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 137 block B22 null  <||@
  Comment 137 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 430 NOP  <||@
  Comment 138 432 NOP  <||@
  Comment 139 434 NOP  <||@
  Comment 140 436 JUMP ~outgoingValues: [] destination: B22 -> B25  <||@
  Comment 140 block B25 null  <||@
  Comment 140 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 140 464 NOP  <||@
  Comment 141 466 NOP  <||@
  Comment 142 468 NOP  <||@
  Comment 143 470 NOP  <||@
  Comment 144 472 NOP  <||@
  Comment 145 474 NOP  <||@
  Comment 146 476 NOP  <||@
  Comment 147 478 NOP  <||@
  Comment 148 480 NOP  <||@
  Comment 149 482 NOP  <||@
  Comment 150 484 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26, B25 -> B26] defaultTarget: B25 -> B32 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 150 {DataSection[0x0]}  <||@
  Comment 163 {DataSection[0x8]}  <||@
  Comment 176 {DataSection[0x10]}  <||@
  Comment 189 {DataSection[0x18]}  <||@
  Comment 202 {DataSection[0x20]}  <||@
  Comment 215 block B32 null  <||@
  Comment 215 592 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 215 594 NOP  <||@
  Comment 216 596 NOP  <||@
  Comment 217 598 NOP  <||@
  Comment 218 600 NOP  <||@
  Comment 219 602 NOP  <||@
  Comment 220 604 NOP  <||@
  Comment 221 606 NOP  <||@
  Comment 222 608 NOP  <||@
  Comment 223 610 NOP  <||@
  Comment 224 612 NOP  <||@
  Comment 225 614 NOP  <||@
  Comment 226 616 NOP  <||@
  Comment 227 618 rax|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD  <||@
  Comment 234 620 r10|QWORD = MOV input: [rax|QWORD + 64] size: QWORD  <||@
  Comment 238 622 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 243 624 rbx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 246 626 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 249 628 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 3, 9, 7]  <||@
  Comment 249 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 249 INLINE_INVOKE  <||@
  Comment 251 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 259 630 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 264 632 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 269 634 JUMP ~outgoingValues: [] destination: B32 -> B36  <||@
  Comment 269 block B36 null  <||@
  Comment 269 714 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 269 716 NOP  <||@
  Comment 270 718 NOP  <||@
  Comment 271 720 NOP  <||@
  Comment 272 722 NOP  <||@
  Comment 273 724 NOP  <||@
  Comment 274 726 NOP  <||@
  Comment 275 728 NOP  <||@
  Comment 276 730 NOP  <||@
  Comment 277 732 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 280 734 r10|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7]  <||@
  Comment 280 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 280 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 288 736 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 292 738 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 3, 9, 7]  <||@
  Comment 292 [rcx:0, rdx:0, rsi:0, r11:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 292 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 300 740 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B38 y: 512 size: DWORD inlinedY: null  <||@
  Comment 313 block B37 null  <||@
  Comment 313 742 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 313 744 NOP  <||@
  Comment 314 746 NOP  <||@
  Comment 315 748 NOP  <||@
  Comment 316 750 r9|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 319 752 JUMP ~outgoingValues: [] destination: B37 -> B40  <||@
  Comment 319 block B40 null  <||@
  Comment 319 780 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 319 782 NOP  <||@
  Comment 320 784 NOP  <||@
  Comment 321 786 NOP  <||@
  Comment 322 788 NOP  <||@
  Comment 323 790 NOP  <||@
  Comment 324 792 NOP  <||@
  Comment 325 794 NOP  <||@
  Comment 326 796 NOP  <||@
  Comment 327 798 rbx|DWORD = SHR x: rax|DWORD y: 16 size: DWORD  <||@
  Comment 332 800 rax|DWORD = XOR (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 334 802 rbx|DWORD = DEC value: r9|DWORD size: DWORD  <||@
  Comment 339 804 rbx|DWORD = AND (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 341 806 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B44 y: 512 size: DWORD inlinedY: null  <||@
  Comment 354 block B41 null  <||@
  Comment 354 808 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 354 810 NOP  <||@
  Comment 355 812 NOP  <||@
  Comment 356 814 NOP  <||@
  Comment 357 816 NOP  <||@
  Comment 358 818 CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD  <||@
  Comment 367 block B42 null  <||@
  Comment 367 820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 367 822 NOP  <||@
  Comment 368 824 NOP  <||@
  Comment 369 826 NOP  <||@
  Comment 370 828 NOP  <||@
  Comment 371 830 r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 377 832 JUMP ~outgoingValues: [] destination: B42 -> B48  <||@
  Comment 377 block B48 null  <||@
  Comment 377 924 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 377 926 NOP  <||@
  Comment 378 928 NOP  <||@
  Comment 379 930 NOP  <||@
  Comment 380 932 NOP  <||@
  Comment 381 934 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.70573922299302 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: DWORD  <||@
  Comment 390 block B49 null  <||@
  Comment 390 936 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 390 938 NOP  <||@
  Comment 391 940 NOP  <||@
  Comment 392 942 NOP  <||@
  Comment 393 944 JUMP ~outgoingValues: [] destination: B49 -> B72  <||@
  Comment 393 block B72 null  <||@
  Comment 393 1368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 393 1370 NOP  <||@
  Comment 394 1372 NOP  <||@
  Comment 395 1374 NOP  <||@
  Comment 396 1376 NOP  <||@
  Comment 397 1378 NOP  <||@
  Comment 398 1380 NOP  <||@
  Comment 399 1382 NOP  <||@
  Comment 400 1384 NOP  <||@
  Comment 401 1386 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 408 1388 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 417 POLL_RETURN_FAR  <||@
  Comment 434 block B26 null  <||@
  Comment 434 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 434 488 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 439 490 NOP  <||@
  Comment 440 492 NOP  <||@
  Comment 441 494 NOP  <||@
  Comment 442 496 NOP  <||@
  Comment 443 498 NOP  <||@
  Comment 444 500 NOP  <||@
  Comment 445 502 rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD  <||@
  Comment 448 504 rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD  <||@
  Comment 455 506 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: 1 size: QWORD inlinedY: null  <||@
  Comment 465 block B27 null  <||@
  Comment 465 508 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 465 510 NOP  <||@
  Comment 466 512 NOP  <||@
  Comment 467 514 NOP  <||@
  Comment 468 516 NOP  <||@
  Comment 469 518 NOP  <||@
  Comment 470 520 NOP  <||@
  Comment 471 522 rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD  <||@
  Comment 475 524 rsi|DWORD = MOV value: rsi|QWORD size: DWORD  <||@
  Comment 477 526 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 485 block B29 null  <||@
  Comment 485 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 485 542 NOP  <||@
  Comment 486 544 NOP  <||@
  Comment 487 546 NOP  <||@
  Comment 488 548 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 490 550 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 495 552 JUMP ~outgoingValues: [] destination: B29 -> B36  <||@
  Comment 500 block B50 null  <||@
  Comment 500 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 500 948 NOP  <||@
  Comment 501 950 NOP  <||@
  Comment 502 952 NOP  <||@
  Comment 503 954 NOP  <||@
  Comment 504 956 NOP  <||@
  Comment 505 958 NOP  <||@
  Comment 506 960 r8|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 512 962 r9|DWORD = SHL value: r8|DWORD size: DWORD  <||@
  Comment 518 964 CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B81 size: DWORD  <||@
  Comment 527 block B51 null  <||@
  Comment 527 966 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 527 968 NOP  <||@
  Comment 528 970 NOP  <||@
  Comment 529 972 NOP  <||@
  Comment 530 974 NOP  <||@
  Comment 531 976 NOP  <||@
  Comment 532 978 NOP  <||@
  Comment 533 980 NOP  <||@
  Comment 534 982 NOP  <||@
  Comment 535 984 NOP  <||@
  Comment 536 986 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 540 988 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 545 990 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 549 992 CMPBRANCH (x: rcx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD  <||@
  Comment 558 block B53 null  <||@
  Comment 558 1006 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 558 1008 NOP  <||@
  Comment 559 1010 NOP  <||@
  Comment 560 1012 NOP  <||@
  Comment 561 1014 NOP  <||@
  Comment 562 1016 NOP  <||@
  Comment 563 1018 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 567 1020 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD  <||@
  Comment 576 block B54 null  <||@
  Comment 576 1022 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 576 1024 NOP  <||@
  Comment 577 1026 NOP  <||@
  Comment 578 1028 NOP  <||@
  Comment 579 1030 JUMP ~outgoingValues: [] destination: B54 -> B62  <||@
  Comment 579 block B62 null  <||@
  Comment 579 1196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 579 1198 NOP  <||@
  Comment 580 1200 NOP  <||@
  Comment 581 1202 NOP  <||@
  Comment 582 1204 NOP  <||@
  Comment 583 1206 NOP  <||@
  Comment 584 1208 NOP  <||@
  Comment 585 1210 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 588 1212 r9|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 591 1214 CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B68 size: DWORD state [bci:29, 9, 7]  <||@
  Comment 591 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |- 
     stack:   |int[0|0x0]    |              |          |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 591 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 605 block B63 null  <||@
  Comment 605 1216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 605 1218 NOP  <||@
  Comment 606 1220 NOP  <||@
  Comment 607 1222 NOP  <||@
  Comment 608 1224 NOP  <||@
  Comment 609 1226 NOP  <||@
  Comment 610 1228 NOP  <||@
  Comment 611 1230 NOP  <||@
  Comment 612 1232 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 616 1234 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 621 1236 TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD  <||@
  Comment 629 block B65 null  <||@
  Comment 629 1248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 629 1250 NOP  <||@
  Comment 630 1252 NOP  <||@
  Comment 631 1254 NOP  <||@
  Comment 632 1256 NOP  <||@
  Comment 633 1258 CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 0.23445247169918648 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 633 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 650 block B67 null  <||@
  Comment 650 1298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 1300 NOP  <||@
  Comment 651 1302 NOP  <||@
  Comment 652 1304 NOP  <||@
  Comment 653 1306 JUMP ~outgoingValues: [] destination: B67 -> B72  <||@
  Comment 658 block B1 null  <||@
  Comment 658 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 658 50 NOP  <||@
  Comment 659 52 NOP  <||@
  Comment 660 54 NOP  <||@
  Comment 661 56 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 667 58 JUMP ~outgoingValues: [] destination: B1 -> B2  <||@
  Comment 672 block B3 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 672 72 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 672 74 NOP  <||@
  Comment 673 76 NOP  <||@
  Comment 674 78 NOP  <||@
  Comment 675 80 NOP  <||@
  Comment 676 82 NOP  <||@
  Comment 677 84 NOP  <||@
  Comment 678 86 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 681 88 r11|DWORD = SHL value: r10|DWORD size: DWORD  <||@
  Comment 687 90 CMPBRANCH (x: r11|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD state [bci:2, 15, 7]  <||@
  Comment 687 [rax:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 687 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 701 block B4 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 701 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 701 94 NOP  <||@
  Comment 702 96 NOP  <||@
  Comment 703 98 NOP  <||@
  Comment 704 100 NOP  <||@
  Comment 705 102 NOP  <||@
  Comment 706 104 NOP  <||@
  Comment 707 106 NOP  <||@
  Comment 708 108 NOP  <||@
  Comment 709 110 NOP  <||@
  Comment 710 112 NOP  <||@
  Comment 711 114 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 715 116 rax|DWORD[_] = MOV input: [rax|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 720 118 NULLCHECK address: [rax|DWORD[_] * 8] state [bci:2, 15, 7]  <||@
  Comment 720 [rax:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 720 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 727 120 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 731 122 CMPBRANCH (x: rax|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.18927935443945054 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 740 block B6 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 740 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 740 138 NOP  <||@
  Comment 741 140 NOP  <||@
  Comment 742 142 NOP  <||@
  Comment 743 144 NOP  <||@
  Comment 744 146 NOP  <||@
  Comment 745 148 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 749 150 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9022127795497026 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 758 block B7 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 758 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 758 154 NOP  <||@
  Comment 759 156 NOP  <||@
  Comment 760 158 NOP  <||@
  Comment 761 160 JUMP ~outgoingValues: [] destination: B7 -> B15  <||@
  Comment 761 block B15 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 761 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 761 324 NOP  <||@
  Comment 762 326 NOP  <||@
  Comment 763 328 NOP  <||@
  Comment 764 330 NOP  <||@
  Comment 765 332 NOP  <||@
  Comment 766 334 NOP  <||@
  Comment 767 336 SAFEPOINT temp: rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:29, 15, 7]  <||@
  Comment 774 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 29, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
     stack:   |int[0|0x0]    |              |           |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 774 {infopoint: SAFEPOINT}  <||@
  Comment 774 POLL_FAR  <||@
  Comment 776 338 r10|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 779 340 JUMP ~outgoingValues: [] destination: B15 -> B2  <||@
  Comment 779 block B2 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 779 60 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 779 62 NOP  <||@
  Comment 780 64 NOP  <||@
  Comment 781 66 NOP  <||@
  Comment 782 68 NOP  <||@
  Comment 783 70 CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.718851632535015 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 size: DWORD  <||@
  Comment 794 block B8 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 794 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 794 164 NOP  <||@
  Comment 795 166 NOP  <||@
  Comment 796 168 NOP  <||@
  Comment 797 170 NOP  <||@
  Comment 798 172 CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 798 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 811 block B9 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 811 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 811 176 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 816 178 NOP  <||@
  Comment 817 180 NOP  <||@
  Comment 818 182 NOP  <||@
  Comment 819 184 NOP  <||@
  Comment 820 186 NOP  <||@
  Comment 821 188 NOP  <||@
  Comment 822 190 NOP  <||@
  Comment 823 192 NOP  <||@
  Comment 824 194 NOP  <||@
  Comment 825 196 NOP  <||@
  Comment 826 198 NOP  <||@
  Comment 827 200 NOP  <||@
  Comment 828 202 NOP  <||@
  Comment 829 204 r11|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD  <||@
  Comment 836 206 r8|QWORD = MOV input: [r11|QWORD + 64] size: QWORD  <||@
  Comment 840 208 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 843 210 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 846 212 rbx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 849 214 rax|QWORD = MOVE input: r8|QWORD moveKind: QWORD  <||@
  Comment 852 216 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 15, 7]  <||@
  Comment 852 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 852 INLINE_INVOKE  <||@
  Comment 854 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:36|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 862 218 JUMP ~outgoingValues: [] destination: B9 -> B13  <||@
  Comment 862 block B13 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 862 292 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 862 294 NOP  <||@
  Comment 863 296 NOP  <||@
  Comment 864 298 NOP  <||@
  Comment 865 300 NOP  <||@
  Comment 866 302 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.8576642535728738 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD  <||@
  Comment 874 block B14 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 874 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 874 306 NOP  <||@
  Comment 875 308 NOP  <||@
  Comment 876 310 NOP  <||@
  Comment 877 312 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 882 314 rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD  <||@
  Comment 887 316 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 892 318 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 897 320 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 902 block B10 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 902 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 902 222 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 907 224 NOP  <||@
  Comment 908 226 NOP  <||@
  Comment 909 228 NOP  <||@
  Comment 910 230 NOP  <||@
  Comment 911 232 CMPCONSTBRANCH x: r11|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 911 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 924 block B12 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 924 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 924 254 NOP  <||@
  Comment 925 256 NOP  <||@
  Comment 926 258 NOP  <||@
  Comment 927 260 NOP  <||@
  Comment 928 262 NOP  <||@
  Comment 929 264 NOP  <||@
  Comment 930 266 NOP  <||@
  Comment 931 268 NOP  <||@
  Comment 932 270 NOP  <||@
  Comment 933 272 NOP  <||@
  Comment 934 274 NOP  <||@
  Comment 935 276 NOP  <||@
  Comment 936 278 NOP  <||@
  Comment 937 280 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 941 282 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 944 284 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 949 286 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 952 288 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 15, 7]  <||@
  Comment 953 INVOKEVIRTUAL  <||@
  Comment 963 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 968 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:36|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 976 290 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 978 block B11 loop 0 depth 1 header:192|LoopBegin  <||@
  Comment 978 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 978 236 NOP  <||@
  Comment 979 238 NOP  <||@
  Comment 980 240 NOP  <||@
  Comment 981 242 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 986 246 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 991 248 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 996 250 JUMP ~outgoingValues: [] destination: B11 -> B15  <||@
  Comment 1001 block B19 null  <||@
  Comment 1001 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1001 380 NOP  <||@
  Comment 1002 382 NOP  <||@
  Comment 1003 384 NOP  <||@
  Comment 1004 386 JUMP ~outgoingValues: [] destination: B19 -> B72  <||@
  Comment 1009 block B23 null  <||@
  Comment 1009 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1009 440 NOP  <||@
  Comment 1010 442 NOP  <||@
  Comment 1011 444 NOP  <||@
  Comment 1012 446 NOP  <||@
  Comment 1013 448 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B33 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 1013 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 1026 block B24 null  <||@
  Comment 1026 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1026 452 NOP  <||@
  Comment 1027 454 NOP  <||@
  Comment 1028 456 NOP  <||@
  Comment 1029 460 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 1034 block B44 null  <||@
  Comment 1034 852 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1034 854 NOP  <||@
  Comment 1035 856 NOP  <||@
  Comment 1036 858 NOP  <||@
  Comment 1037 860 NOP  <||@
  Comment 1038 862 NOP  <||@
  Comment 1039 864 rbx|DWORD = SHL value: rbx|DWORD size: DWORD  <||@
  Comment 1041 866 CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B84 size: DWORD  <||@
  Comment 1050 block B45 null  <||@
  Comment 1050 868 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1050 870 NOP  <||@
  Comment 1051 872 NOP  <||@
  Comment 1052 874 NOP  <||@
  Comment 1053 876 NOP  <||@
  Comment 1054 878 NOP  <||@
  Comment 1055 880 rdi|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 1059 882 CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B83 size: DWORD  <||@
  Comment 1068 block B46 null  <||@
  Comment 1068 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1068 886 NOP  <||@
  Comment 1069 888 NOP  <||@
  Comment 1070 890 NOP  <||@
  Comment 1071 892 NOP  <||@
  Comment 1072 894 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B82 y: 131072 size: DWORD inlinedY: null  <||@
  Comment 1085 block B47 null  <||@
  Comment 1085 896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1085 898 NOP  <||@
  Comment 1086 900 NOP  <||@
  Comment 1087 902 NOP  <||@
  Comment 1088 904 NOP  <||@
  Comment 1089 906 NOP  <||@
  Comment 1090 908 NOP  <||@
  Comment 1091 910 NOP  <||@
  Comment 1092 912 r8|DWORD = MOVZXB input: [rdi|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1098 914 r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD  <||@
  Comment 1102 916 r11|DWORD = MOVZXB input: [rbx|DWORD + r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1108 918 r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1111 920 r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1114 922 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 1119 block B38 null  <||@
  Comment 1119 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1119 756 NOP  <||@
  Comment 1120 758 NOP  <||@
  Comment 1121 760 NOP  <||@
  Comment 1122 762 NOP  <||@
  Comment 1123 764 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B86 y: 131072 size: DWORD inlinedY: null  <||@
  Comment 1136 block B39 null  <||@
  Comment 1136 766 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1136 768 NOP  <||@
  Comment 1137 770 NOP  <||@
  Comment 1138 772 NOP  <||@
  Comment 1139 774 NOP  <||@
  Comment 1140 776 r9|DWORD = SHR value: r8|DWORD size: DWORD  <||@
  Comment 1146 778 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 1151 block B5 null  <||@
  Comment 1151 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1151 126 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1156 128 NOP  <||@
  Comment 1157 130 NOP  <||@
  Comment 1158 132 NOP  <||@
  Comment 1159 134 JUMP ~outgoingValues: [] destination: B5 -> B17  <||@
  Comment 1159 block B17 null  <||@
  Comment 1159 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1159 358 NOP  <||@
  Comment 1160 360 NOP  <||@
  Comment 1161 362 NOP  <||@
  Comment 1162 364 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 1162 block B18 null  <||@
  Comment 1162 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1162 368 NOP  <||@
  Comment 1163 370 NOP  <||@
  Comment 1164 372 NOP  <||@
  Comment 1165 374 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1170 376 JUMP ~outgoingValues: [] destination: B18 -> B70  <||@
  Comment 1170 block B70 null  <||@
  Comment 1170 1346 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1170 1348 NOP  <||@
  Comment 1171 1350 NOP  <||@
  Comment 1172 1352 NOP  <||@
  Comment 1173 1354 NOP  <||@
  Comment 1174 1356 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.8477799890999939 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 y: -1 size: DWORD inlinedY: null  <||@
  Comment 1184 block B71 null  <||@
  Comment 1184 1358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1184 1360 NOP  <||@
  Comment 1185 1362 NOP  <||@
  Comment 1186 1364 NOP  <||@
  Comment 1187 1366 JUMP ~outgoingValues: [] destination: B71 -> B72  <||@
  Comment 1192 block B52 null  <||@
  Comment 1192 994 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1192 996 NOP  <||@
  Comment 1193 998 NOP  <||@
  Comment 1194 1000 NOP  <||@
  Comment 1195 1002 r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1198 1004 JUMP ~outgoingValues: [] destination: B52 -> B70  <||@
  Comment 1200 block B66 null  <||@
  Comment 1200 1260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1200 1262 NOP  <||@
  Comment 1201 1264 NOP  <||@
  Comment 1202 1266 NOP  <||@
  Comment 1203 1268 NOP  <||@
  Comment 1204 1270 NOP  <||@
  Comment 1205 1272 NOP  <||@
  Comment 1206 1274 NOP  <||@
  Comment 1207 1276 NOP  <||@
  Comment 1208 1278 NOP  <||@
  Comment 1209 1280 NOP  <||@
  Comment 1210 1282 NOP  <||@
  Comment 1211 1284 NOP  <||@
  Comment 1212 1286 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1216 1288 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1219 1292 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:56, 9, 7]  <||@
  Comment 1219 {HotSpotMethod<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>}  <||@
  Comment 1219 INVOKESPECIAL  <||@
  Comment 1224 [stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292) [bci: 56, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1232 1294 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1235 1296 JUMP ~outgoingValues: [] destination: B66 -> B70  <||@
  Comment 1237 block B73 null  <||@
  Comment 1237 1390 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1237 1392 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1242 1394 NOP  <||@
  Comment 1243 1396 NOP  <||@
  Comment 1244 1398 NOP  <||@
  Comment 1245 1400 NOP  <||@
  Comment 1246 1402 NOP  <||@
  Comment 1247 1404 NOP  <||@
  Comment 1248 1406 NOP  <||@
  Comment 1249 1408 rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 24] size: DWORD  <||@
  Comment 1253 1410 rax|DWORD = SHL value: r10|DWORD size: DWORD  <||@
  Comment 1258 1412 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 1260 1414 CMPBRANCH (x: rax|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B73 -> B74 falseDestination: B73 -> B80 size: DWORD state [bci:10]  <||@
  Comment 1260 [rsi:0, r8:0]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r10|DWORD    |   |    <||@
  Comment 1260 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1273 block B74 null  <||@
  Comment 1273 1416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1273 1418 NOP  <||@
  Comment 1274 1420 NOP  <||@
  Comment 1275 1422 NOP  <||@
  Comment 1276 1424 NOP  <||@
  Comment 1277 1426 NOP  <||@
  Comment 1278 1428 NOP  <||@
  Comment 1279 1430 NOP  <||@
  Comment 1280 1432 NOP  <||@
  Comment 1281 1434 NOP  <||@
  Comment 1282 1436 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1286 1438 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1291 1440 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1298 1442 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: DWORD  <||@
  Comment 1307 block B76 null  <||@
  Comment 1307 1454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1307 1456 NOP  <||@
  Comment 1308 1458 NOP  <||@
  Comment 1309 1460 NOP  <||@
  Comment 1310 1462 NOP  <||@
  Comment 1311 1464 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 0.06058171590776673 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1311 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1329 block B78 null  <||@
  Comment 1329 1488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1329 1490 NOP  <||@
  Comment 1330 1492 NOP  <||@
  Comment 1331 1494 NOP  <||@
  Comment 1332 1496 JUMP ~outgoingValues: [] destination: B78 -> B79  <||@
  Comment 1332 block B79 null  <||@
  Comment 1332 1498 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1332 1500 NOP  <||@
  Comment 1333 1502 NOP  <||@
  Comment 1334 1504 NOP  <||@
  Comment 1335 1506 NOP  <||@
  Comment 1336 1508 NOP  <||@
  Comment 1337 1510 NOP  <||@
  Comment 1338 1512 NOP  <||@
  Comment 1339 1514 NOP  <||@
  Comment 1340 1516 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 1518 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1352 POLL_RETURN_FAR  <||@
  Comment 1369 block B55 null  <||@
  Comment 1369 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1369 1034 NOP  <||@
  Comment 1370 1036 NOP  <||@
  Comment 1371 1038 NOP  <||@
  Comment 1372 1040 NOP  <||@
  Comment 1373 1042 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.7598352089306695 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 1373 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 1386 block B56 null  <||@
  Comment 1386 1044 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1386 1046 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1391 1048 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1396 1050 rbx|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD  <||@
  Comment 1401 1052 NOP  <||@
  Comment 1402 1054 NOP  <||@
  Comment 1403 1056 NOP  <||@
  Comment 1404 1058 NOP  <||@
  Comment 1405 1060 NOP  <||@
  Comment 1406 1062 NOP  <||@
  Comment 1407 1064 NOP  <||@
  Comment 1408 1066 NOP  <||@
  Comment 1409 1068 NOP  <||@
  Comment 1410 1070 NOP  <||@
  Comment 1411 1072 NOP  <||@
  Comment 1412 1074 NOP  <||@
  Comment 1413 1076 NOP  <||@
  Comment 1414 1078 rbx|QWORD = MOV input: [rbx|QWORD + 464] size: QWORD  <||@
  Comment 1421 1080 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1425 1082 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1428 1084 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1431 1086 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.equals(Object)> state [bci:36, 26, 9, 7]  <||@
  Comment 1431 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1431 INLINE_INVOKE  <||@
  Comment 1433 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:40|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1441 1088 JUMP ~outgoingValues: [] destination: B56 -> B60  <||@
  Comment 1441 block B60 null  <||@
  Comment 1441 1164 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1441 1166 NOP  <||@
  Comment 1442 1168 NOP  <||@
  Comment 1443 1170 NOP  <||@
  Comment 1444 1172 NOP  <||@
  Comment 1445 1174 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.2900663694179227 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B69 size: DWORD  <||@
  Comment 1453 block B69 null  <||@
  Comment 1453 1334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1453 1336 NOP  <||@
  Comment 1454 1338 NOP  <||@
  Comment 1455 1340 NOP  <||@
  Comment 1456 1342 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1461 1344 JUMP ~outgoingValues: [] destination: B69 -> B70  <||@
  Comment 1466 block B64 null  <||@
  Comment 1466 1238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1466 1240 NOP  <||@
  Comment 1467 1242 NOP  <||@
  Comment 1468 1244 NOP  <||@
  Comment 1469 1246 JUMP ~outgoingValues: [] destination: B64 -> B72  <||@
  Comment 1474 block B33 null  <||@
  Comment 1474 636 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1474 640 NOP  <||@
  Comment 1475 642 NOP  <||@
  Comment 1476 644 NOP  <||@
  Comment 1477 646 NOP  <||@
  Comment 1478 648 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 1478 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 1491 block B35 null  <||@
  Comment 1491 674 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1491 676 NOP  <||@
  Comment 1492 678 NOP  <||@
  Comment 1493 680 NOP  <||@
  Comment 1494 682 NOP  <||@
  Comment 1495 684 NOP  <||@
  Comment 1496 686 NOP  <||@
  Comment 1497 688 NOP  <||@
  Comment 1498 690 NOP  <||@
  Comment 1499 692 NOP  <||@
  Comment 1500 694 NOP  <||@
  Comment 1501 696 NOP  <||@
  Comment 1502 698 NOP  <||@
  Comment 1503 700 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1507 702 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1510 704 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1515 706 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 3, 9, 7]  <||@
  Comment 1517 INVOKEVIRTUAL  <||@
  Comment 1527 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 1532 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1540 708 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1545 710 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1550 712 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1555 block B61 null  <||@
  Comment 1555 1176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1555 1178 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1560 1180 NOP  <||@
  Comment 1561 1182 NOP  <||@
  Comment 1562 1184 NOP  <||@
  Comment 1563 1186 r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1568 1188 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1573 1190 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1576 1192 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1581 1194 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1586 block B57 null  <||@
  Comment 1586 1090 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1586 1092 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1591 1094 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1596 1096 NOP  <||@
  Comment 1597 1098 NOP  <||@
  Comment 1598 1100 NOP  <||@
  Comment 1599 1102 NOP  <||@
  Comment 1600 1104 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0010475646703995735 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 1600 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 1613 block B59 null  <||@
  Comment 1613 1126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1613 1128 NOP  <||@
  Comment 1614 1130 NOP  <||@
  Comment 1615 1132 NOP  <||@
  Comment 1616 1134 NOP  <||@
  Comment 1617 1136 NOP  <||@
  Comment 1618 1138 NOP  <||@
  Comment 1619 1140 NOP  <||@
  Comment 1620 1142 NOP  <||@
  Comment 1621 1144 NOP  <||@
  Comment 1622 1146 NOP  <||@
  Comment 1623 1148 NOP  <||@
  Comment 1624 1150 NOP  <||@
  Comment 1625 1152 NOP  <||@
  Comment 1626 1154 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1630 1156 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1633 1158 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1638 1160 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 26, 9, 7]  <||@
  Comment 1641 INVOKEVIRTUAL  <||@
  Comment 1651 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 1656 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3  |4 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:40|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 1664 1162 JUMP ~outgoingValues: [] destination: B59 -> B60  <||@
  Comment 1669 block B16 null  <||@
  Comment 1669 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1669 344 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1674 346 NOP  <||@
  Comment 1675 348 NOP  <||@
  Comment 1676 350 NOP  <||@
  Comment 1677 352 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1680 354 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 1685 block B30 null  <||@
  Comment 1685 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1685 556 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 558 NOP  <||@
  Comment 1691 560 NOP  <||@
  Comment 1692 562 NOP  <||@
  Comment 1693 564 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 1693 block B31 null  <||@
  Comment 1693 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1693 568 NOP  <||@
  Comment 1694 570 NOP  <||@
  Comment 1695 572 NOP  <||@
  Comment 1696 574 NOP  <||@
  Comment 1697 576 NOP  <||@
  Comment 1698 578 NOP  <||@
  Comment 1699 580 NOP  <||@
  Comment 1700 582 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1705 584 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 3, 9, 7]  <||@
  Comment 1705 {Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 1710 [r8:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0            |1                  |2  |3  |4 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |- 
     stack:   |r8|QWORD[.]  |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 1718 586 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1723 588 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1726 590 JUMP ~outgoingValues: [] destination: B31 -> B36  <||@
  Comment 1731 block B28 null  <||@
  Comment 1731 528 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1731 530 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1736 532 NOP  <||@
  Comment 1737 534 NOP  <||@
  Comment 1738 536 NOP  <||@
  Comment 1739 538 JUMP ~outgoingValues: [] destination: B28 -> B31  <||@
  Comment 1741 block B75 null  <||@
  Comment 1741 1444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1741 1446 NOP  <||@
  Comment 1742 1448 NOP  <||@
  Comment 1743 1450 NOP  <||@
  Comment 1744 1452 JUMP ~outgoingValues: [] destination: B75 -> B79  <||@
  Comment 1749 block B77 null  <||@
  Comment 1749 1466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1749 1468 NOP  <||@
  Comment 1750 1470 NOP  <||@
  Comment 1751 1472 NOP  <||@
  Comment 1752 1474 NOP  <||@
  Comment 1753 1476 NOP  <||@
  Comment 1754 1478 NOP  <||@
  Comment 1755 1480 rax|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1763 1482 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1c215569 encoding: base: 0 shift: 3  <||@
  Comment 1767 1484 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1770 1486 JUMP ~outgoingValues: [] destination: B77 -> B79  <||@
  Comment 1775 block B58 null  <||@
  Comment 1775 1106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1775 1108 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1780 1110 NOP  <||@
  Comment 1781 1112 NOP  <||@
  Comment 1782 1114 NOP  <||@
  Comment 1783 1118 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 1120 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1791 1122 r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1796 1124 JUMP ~outgoingValues: [] destination: B58 -> B62  <||@
  Comment 1801 block B80 null  <||@
  Comment 1801 1520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1801 1522 NOP  <||@
  Comment 1802 1524 NOP  <||@
  Comment 1803 1526 NOP  <||@
  Comment 1804 1528 NOP  <||@
  Comment 1805 1530 NOP  <||@
  Comment 1806 1532 NOP  <||@
  Comment 1807 1534 NOP  <||@
  Comment 1808 1536 MOV x: [r15|QWORD + 1156] y: -125467 size: DWORD  <||@
  Comment 1819 1538 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1830 1540 DEOPT info [bci:10]  <||@
  Comment 1830 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1835 [r8:0]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r10|DWORD    |   |    <||@
  Comment 1843 block B20 null  <||@
  Comment 1843 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1843 390 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1846 392 NOP  <||@
  Comment 1847 394 NOP  <||@
  Comment 1848 396 NOP  <||@
  Comment 1849 398 NOP  <||@
  Comment 1850 400 NOP  <||@
  Comment 1851 402 NOP  <||@
  Comment 1852 404 NOP  <||@
  Comment 1853 406 MOV x: [r15|QWORD + 1156] y: -78107 size: DWORD  <||@
  Comment 1864 408 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1875 410 DEOPT info [bci:2, 15, 7]  <||@
  Comment 1875 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1880 [r8:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2, duringCall: false, rethrow: false]
              |0            |1                  |2          |3 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 1888 block B43 null  <||@
  Comment 1888 834 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1888 836 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1891 838 NOP  <||@
  Comment 1892 840 NOP  <||@
  Comment 1893 842 NOP  <||@
  Comment 1894 844 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1901 846 r10|DWORD = MOVE input: int[-100123|0xfffffffffffe78e5]  <||@
  Comment 1907 850 JUMP ~outgoingValues: [] destination: B43 -> B85  <||@
  Comment 1907 block B85 null  <||@
  Comment 1907 1620 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1907 848 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1912 1622 NOP  <||@
  Comment 1913 1624 NOP  <||@
  Comment 1914 1626 NOP  <||@
  Comment 1915 1628 NOP  <||@
  Comment 1916 1630 NOP  <||@
  Comment 1917 1632 NOP  <||@
  Comment 1918 1634 NOP  <||@
  Comment 1919 1636 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1926 1638 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1933 1640 DEOPT info [bci:64, 3, 9, 7]  <||@
  Comment 1933 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1938 [rdx:0, r8:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64, duringCall: false, rethrow: false]
              |0          |1         |2 
     locals:  |-          |-         |- 
     stack:   |rax|DWORD  |r9|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4 
     locals:  |r8|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |r8|QWORD[.]  |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 1946 block B86 null  <||@
  Comment 1946 1642 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1946 1644 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1949 1646 NOP  <||@
  Comment 1950 1648 NOP  <||@
  Comment 1951 1650 NOP  <||@
  Comment 1952 1652 NOP  <||@
  Comment 1953 1654 NOP  <||@
  Comment 1954 1656 NOP  <||@
  Comment 1955 1658 NOP  <||@
  Comment 1956 1660 MOV x: [r15|QWORD + 1156] y: -163091 size: DWORD  <||@
  Comment 1967 1662 MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD  <||@
  Comment 1978 1664 DEOPT info [bci:52, 3, 9, 7]  <||@
  Comment 1978 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1983 [r8:0, stack:8]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0            |1  |2         
     locals:  |r8|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0            |1                  |2  |3  |4 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |- 
     stack:   |r8|QWORD[.]  |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 1991 block B84 null  <||@
  Comment 1991 1602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1991 1604 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1994 1606 NOP  <||@
  Comment 1995 1608 NOP  <||@
  Comment 1996 1610 NOP  <||@
  Comment 1997 1612 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2004 1614 r10|DWORD = MOVE input: int[-103451|0xfffffffffffe6be5]  <||@
  Comment 2010 1618 JUMP ~outgoingValues: [] destination: B84 -> B85  <||@
  Comment 2012 block B82 null  <||@
  Comment 2012 1566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2012 1568 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2015 1570 NOP  <||@
  Comment 2016 1572 NOP  <||@
  Comment 2017 1574 NOP  <||@
  Comment 2018 1576 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2025 1578 r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed]  <||@
  Comment 2031 1582 JUMP ~outgoingValues: [] destination: B82 -> B85  <||@
  Comment 2033 block B81 null  <||@
  Comment 2033 1542 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2033 1544 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2036 1546 NOP  <||@
  Comment 2037 1548 NOP  <||@
  Comment 2038 1550 NOP  <||@
  Comment 2039 1552 NOP  <||@
  Comment 2040 1554 NOP  <||@
  Comment 2041 1556 NOP  <||@
  Comment 2042 1558 NOP  <||@
  Comment 2043 1560 MOV x: [r15|QWORD + 1156] y: -88603 size: DWORD  <||@
  Comment 2054 1562 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2065 1564 DEOPT info [bci:9, 9, 7]  <||@
  Comment 2065 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2070 [r8:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 9, duringCall: false, rethrow: false]
              |0            |1                  |2  |3  |4 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |- 
     stack:   |r11|DWORD    |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 2078 block B34 null  <||@
  Comment 2078 650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2078 652 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2083 654 NOP  <||@
  Comment 2084 656 NOP  <||@
  Comment 2085 658 NOP  <||@
  Comment 2086 660 NOP  <||@
  Comment 2087 662 NOP  <||@
  Comment 2088 664 NOP  <||@
  Comment 2089 666 NOP  <||@
  Comment 2090 668 MOV x: [r15|QWORD + 1156] y: -164115 size: DWORD  <||@
  Comment 2101 670 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2112 672 DEOPT info [bci:0]  <||@
  Comment 2112 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2117 [r8:0, stack:8]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0, duringCall: false, rethrow: false]
              |0            |1                  |2 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 2125 block B68 null  <||@
  Comment 2125 1308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2125 1310 r10|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2128 1312 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2131 1314 NOP  <||@
  Comment 2132 1316 NOP  <||@
  Comment 2133 1318 NOP  <||@
  Comment 2134 1320 NOP  <||@
  Comment 2135 1322 NOP  <||@
  Comment 2136 1324 NOP  <||@
  Comment 2137 1326 NOP  <||@
  Comment 2138 1328 MOV x: [r15|QWORD + 1156] y: -92699 size: DWORD  <||@
  Comment 2149 1330 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2160 1332 DEOPT info [bci:29, 9, 7]  <||@
  Comment 2160 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2165 [r8:0, stack:8]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29, duringCall: false, rethrow: false]
              |0            |1                  |2          |3  |4 
     locals:  |r8|QWORD[.]  |stack:56|QWORD[.]  |r10|DWORD  |-  |- 
     stack:   |int[0|0x0]   |                   |           |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |-   <||@
  Comment 2173 block B83 null  <||@
  Comment 2173 1584 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2173 1586 r8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2176 1588 NOP  <||@
  Comment 2177 1590 NOP  <||@
  Comment 2178 1592 NOP  <||@
  Comment 2179 1594 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2186 1596 r10|DWORD = MOVE input: int[-106011|0xfffffffffffe61e5]  <||@
  Comment 2192 1600 JUMP ~outgoingValues: [] destination: B83 -> B85  <||@
  Comment 2202 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2227 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2247 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2275 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2280 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:242) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2310 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2315 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2350 [rcx:0, rdx:0, rsi:0, r11:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |- 
     stack:   |rsi|QWORD[.]  |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2380 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2385 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287) [bci: 29, duringCall: false, rethrow: false]
              |0             |1             |2         |3  |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |-  |- 
     stack:   |int[0|0x0]    |              |          |   |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2415 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2420 [rax:0, rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 7, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2450 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2455 [rsi:0, r8:0]at org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244) [bci: 10, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r10|DWORD    |   |    <||@
  Comment 2463 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2463 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2469 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2469 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
