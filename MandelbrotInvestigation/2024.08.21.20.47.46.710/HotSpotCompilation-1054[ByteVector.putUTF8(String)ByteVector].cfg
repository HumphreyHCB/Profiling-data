begin_compilation
  name " HotSpotCompilation-1054[jdk.internal.org.objectweb.asm.ByteVector.putUTF8(String)]"
  method "HotSpotCompilation-1054[jdk.internal.org.objectweb.asm.ByteVector.putUTF8(String)]"
  date 1724269716444
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a628 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a628  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# jdk.internal.org.objectweb.asm.ByteVector
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v84 v645 v646 ?44 ?51 ?28 v501 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v642 v644 ?44 ?28 ?51 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 285
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v446 v641 a537 a628 i630 i632 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a628 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-44043|0xffffffffffff53f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: i629 
=== Usages ===
v653 v643 v651 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v642 lastLocationAccess: - #next: i629  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v644 
lastLocationAccess: - 
=== Succesors ===
next: i630 
=== Usages ===
i186 
=== Predecessor ===
a628 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v644 lastLocationAccess: - #next: i630  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a628 
=== Succesors ===
=== Usages ===
i630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i630 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-45579|0xffffffffffff4df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v643 
lastLocationAccess: - 
=== Succesors ===
next: a631 
=== Usages ===
i90 v340 v251 v639 
=== Predecessor ===
i629 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v643 lastLocationAccess: - #next: a631  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a631 v224 v499 v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a631 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteVector.data
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 32]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v646 
lastLocationAccess: - 
=== Succesors ===
next: i632 
=== Usages ===
a191 v647 
=== Predecessor ===
i630 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v646 lastLocationAccess: - #next: i632  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a631 
=== Succesors ===
=== Usages ===
i632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i632 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-49419|0xffffffffffff3ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v647 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
v310 v17 v97 i114 
=== Predecessor ===
a631 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v647 lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i629 
=== Succesors ===
=== Usages ===
i90 v124 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i629  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i630 
y: i186 
=== Succesors ===
=== Usages ===
i359 v52 v93 i14 i438 i357 ?28 i33 v344 i40 ?44 ?51 v163 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i630 y: i186  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536]
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i8 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
i632 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v397 #falseSuccessor: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:289) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i633 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i633  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i633 v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i633 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteVector.length
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:289) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
i13 v230 ?28 i31 j298 v97 i438 j590 i166 v202 v310 v311 
=== Predecessor ===
v397 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 27]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 i439 v340 v344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 28]
stamp: i32
=== Inputs ===
x: i633 
y: i12 
=== Succesors ===
=== Usages ===
i14 ?44 i160 j305 v261 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i633 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 30]
stamp: i32
=== Inputs ===
x: i13 
y: i90 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i13 y: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i632 
y: i14 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i632 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid a191 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 32]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a631 
=== Succesors ===
=== Usages ===
j584 a327 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a631  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v251 v124 v163 v202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 v467 j445 j445 j445 j474 j474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 55]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i80 i74 i114 i162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.15195618153364632
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i633 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i632 
y: i633 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i632 y: i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v423 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v422 #falseSuccessor: v423  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -107795
stableDimension: 0
stamp: i32 [-107795]
stampKind: i32
value: int[-107795|0xfffffffffffe5aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:399) [bci: 22]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j503 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j503 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j564 
=== Usages ===
v655 v656 
=== Predecessor ===
v582 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j564  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j503 
index: - 
=== Succesors ===
=== Usages ===
j564 v566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j503 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
=== Succesors ===
next: j565 
=== Usages ===
j509 v657 v658 v659 a536 v660 v664 v661 v662 v663 
=== Predecessor ===
j503 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - #next: j565  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j503 
index: - 
=== Succesors ===
=== Usages ===
j565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j503 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j565 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
lastLocationAccess: - 
=== Succesors ===
next: v513 
=== Usages ===
v510 
=== Predecessor ===
j564 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v656 lastLocationAccess: - #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i90 
y: i633 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i633  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i438 
y: i12 
=== Succesors ===
=== Usages ===
v100 i115 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i438 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:399) [bci: 28]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i632 
y: i30 
=== Succesors ===
=== Usages ===
v100 i115 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i632 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 39]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i114 
=== Succesors ===
=== Usages ===
i115 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i439 y: i114  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 39]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32
=== Inputs ===
condition: v100 
trueValue: i114 
falseValue: i439 
=== Succesors ===
=== Usages ===
v571 v311 j506 a537 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v100 trueValue: i114 falseValue: i439  <|@  <|@
f <@~|@floating>@ <|@
tid j506 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i115 
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i115  <|@  <|@
f <@~|@floating>@ <|@
tid j546 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j506 
y: j546 
=== Succesors ===
=== Usages ===
j508 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j506 y: j546  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j547 
y: j507 
=== Succesors ===
=== Usages ===
j509 v525 j549 v661 v662 v663 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j547 y: j507  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
x: j508 
y: j564 
=== Succesors ===
=== Usages ===
v510 v566 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j508 y: j564  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j565 
y: j509 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j565 y: j509  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v512 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
j565 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v512 #falseSuccessor: v511  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a537 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a537  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a537 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v502 i115 
=== Succesors ===
next: v641 
=== Usages ===
v641 a562 
=== Predecessor ===
v512 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v502 i115 #next: v641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-148081|0xfffffffffffdbd8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a537 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
a537 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a537 #next: v541  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
v641 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
value: j509 
stateAfter: - 
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - value: j509 stateAfter: - #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: j564 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: j564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v661 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v661 #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: j564 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: j564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v662 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v662 #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: j564 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: j564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v663 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v663 #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v657 
lastLocationAccess: - 
value: j514 
stateAfter: - 
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v657 lastLocationAccess: - value: j514 stateAfter: - #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v664 
lastLocationAccess: - 
value: v593 
stateAfter: - 
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v664 lastLocationAccess: - value: v593 stateAfter: - #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
lastLocationAccess: - 
value: i115 
stateAfter: - 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v658 lastLocationAccess: - value: i115 stateAfter: - #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j508 
y: j548 
=== Succesors ===
=== Usages ===
v517 v521 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j508 y: j548  <|@  <|@
f <@~|@floating>@ <|@
tid j551 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j549 
y: j551 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j549 y: j551  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v519 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v519 #falseSuccessor: v518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v523 
values: j183 j533 
=== Succesors ===
=== Usages ===
v525 v659 j533 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v523 values: j183 j533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v522 
=== Succesors ===
next: v531 
=== Usages ===
j524 v530 v534 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v522 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j524 
y: j508 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j524 y: j508  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v525 
=== Succesors ===
trueSuccessor: v526 
falseSuccessor: v530 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v525 #trueSuccessor: v526 #falseSuccessor: v530  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: j524 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
lastLocationAccess: - 
value: j443 
stateAfter: - 
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v659 lastLocationAccess: - value: j443 stateAfter: - #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid j533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
x: j524 
y: j550 
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j524 y: j550  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
loopBegin: v523 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v523  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v523 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v523 #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
length: j549 
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - length: j549 #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v521 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v527 v529 
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v527 v529 #next: v535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a536 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j564 
=== Succesors ===
next: v539 
=== Usages ===
a562 
=== Predecessor ===
v535 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j564 #next: v539  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
a536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v540 
values: a536 a537 
=== Succesors ===
=== Usages ===
a327 j588 a223 v501 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v540 values: a536 a537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v539 v541 
=== Succesors ===
next: v428 
=== Usages ===
a562 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v539 v541 #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i633 
y: i45 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i633 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v426 #falseSuccessor: v427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid i457 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -108825
stableDimension: 0
stamp: i32 [-108825]
stampKind: i32
value: int[-108825|0xfffffffffffe56e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i632 
y: i633 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i632 y: i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v430 #falseSuccessor: v431  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -109849
stableDimension: 0
stamp: i32 [-109849]
stampKind: i32
value: int[-109849|0xfffffffffffe52e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i633 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i115 y: i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v434 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v434 #falseSuccessor: v435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -110873
stableDimension: 0
stamp: i32 [-110873]
stampKind: i32
value: int[-110873|0xfffffffffffe4ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j584 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
object: a191 
=== Succesors ===
next: j588 
=== Usages ===
v665 
=== Predecessor ===
v435 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a191 #next: j588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
object: a562 
=== Succesors ===
next: v591 
=== Usages ===
v666 
=== Predecessor ===
j584 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a562 #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j584 
index: - 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j584 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j588 
index: - 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j588 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j590 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i633 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v665 v666 j590 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
j588 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v665 v666 j590 #next: v499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v646 
value: - 
stateBefore: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v646 value: - stateBefore: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid a223 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a562 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteVector.data
location: ByteVector.data
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v646 
lastLocationAccess: - 
value: a223 
stateAfter: - 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v646 lastLocationAccess: - value: a223 stateAfter: - #next: v501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
precise: false
stamp: void
=== Inputs ===
address: v646 
value: a562 
object: a1 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v646 value: a562 object: a1 #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v26 
values: a191 a562 
=== Succesors ===
=== Usages ===
v648 v654 v649 v652 ?44 ?51 v650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v26 values: a191 a562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v25 v27 
=== Succesors ===
next: i634 
=== Usages ===
a327 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v25 v27 #next: i634  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a327 
index: - 
=== Succesors ===
=== Usages ===
i634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a327 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i634 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v648 
lastLocationAccess: - 
=== Succesors ===
next: v375 
=== Usages ===
v230 v240 v261 v351 j347 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v648 lastLocationAccess: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i633 
y: i634 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i633 y: i634  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
i634 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v372 #falseSuccessor: v374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
v238 
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 55]
stamp: i32
=== Inputs ===
x: i633 
y: i30 
=== Succesors ===
=== Usages ===
v240 j299 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i633 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i634 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i31 y: i634  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v378 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v376 #falseSuccessor: v378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
v248 
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid j298 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i633 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i633  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a327 
index: j298 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a327 index: j298  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 59]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 61]
stamp: i32 [0 - 8388607] bits:0...0xxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i90 
y: i32 
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i90 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 62]
resultBits: 8
stamp: i8
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v372 
address: v649 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v372 address: v649 lastLocationAccess: - value: i34 stateAfter: - #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid j299 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i31 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a327 
index: j299 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a327 index: j299  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 71]
resultBits: 8
stamp: i8
=== Inputs ===
value: i90 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v376 
address: v650 
lastLocationAccess: - 
value: i40 
stateAfter: - 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v376 address: v650 lastLocationAccess: - value: i40 stateAfter: - #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i45 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i90 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
profileData: PROFILED designatedSuccessorProbability: 0.03649047261429861
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v137 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v137 #falseSuccessor: v138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
v137 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i12 
=== Succesors ===
=== Usages ===
v601 v617 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 2584
stableDimension: 0
stamp: i64 [2584]
stampKind: i64
value: long[2584|0xa18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j474 j474 j474 j474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v597 #falseSuccessor: v600  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
v597 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i90 
y: i358 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i358  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i359 
y: i630 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i359 y: i630  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -69148
stableDimension: 0
stamp: i32 [-69148]
stampKind: i32
value: int[-69148|0xfffffffffffef1e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v639 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v605 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v639 #trueSuccessor: v608 #falseSuccessor: v605  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i12 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i630 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v598 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v606 #falseSuccessor: v598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v595 v596 
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v595 v596 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
stamp: i32
=== Inputs ===
x: i633 
y: i165 
=== Succesors ===
=== Usages ===
v351 i161 j348 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i633 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v613 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i166 
=== Succesors ===
=== Usages ===
j349 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i166  <|@  <|@
f <@~|@floating>@ <|@
tid i356 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2 - 2147483645]
=== Inputs ===
x: i90 
y: i356 
=== Succesors ===
=== Usages ===
j638 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i356  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i357 
=== Succesors ===
=== Usages ===
j349 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i357  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j348 
y: j638 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j348 y: j638  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i634 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i634  <|@  <|@
f <@~|@floating>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j349 
y: j347 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j349 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -72475
stableDimension: 0
stamp: i32 [-72475]
stampKind: i32
value: int[-72475|0xfffffffffffee4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v350 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v621 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v350 #trueSuccessor: v624 #falseSuccessor: v621  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i166 
y: i634 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i166 y: i634  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v614 #falseSuccessor: v622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v611 v612 
=== Succesors ===
next: v391 
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v611 v612 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i45 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i630 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v251 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v251 #trueSuccessor: v390 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -63772
stableDimension: 0
stamp: i32 [-63772]
stampKind: i32
value: int[-63772|0xffffffffffff06e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i634 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i13 y: i634  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v392 #falseSuccessor: v394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
v269 
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i186 
y: i45 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i186 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v401 #falseSuccessor: v402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: i635 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i635  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a628 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i635 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v651 
lastLocationAccess: - 
=== Succesors ===
next: v407 
=== Usages ===
i259 v269 v304 
=== Predecessor ===
v401 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v651 lastLocationAccess: - #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i635 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i635  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 9]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 255
stableDimension: 0
stamp: i32 [255]
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 v131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
x: i259 
y: i129 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i259 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j474 j474 v496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v151 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
i635 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v151 #trueSuccessor: v405 #falseSuccessor: v406  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -103443
stableDimension: 0
stamp: i32 [-103443]
stampKind: i32
value: int[-103443|0xfffffffffffe6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
rawvalue: -128
stableDimension: 0
stamp: i8 [-128]
stampKind: i8
value: byte[-128|0xffffffffffffff80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 v308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i635 
y: i303 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i635 y: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v409 #falseSuccessor: v410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a327 
index: j305 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a327 index: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v392 
address: v652 
lastLocationAccess: - 
value: i635 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v392 address: v652 lastLocationAccess: - value: i635 stateAfter: - #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
v269 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v48 
values: i30 i80 
=== Succesors ===
=== Usages ===
?51 v52 i80 j306 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v48 values: i30 i80  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v48 
values: i166 i74 
=== Succesors ===
=== Usages ===
?51 i160 j309 i74 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v48 values: i166 i74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v47 
=== Succesors ===
next: v58 
=== Usages ===
i162 i161 v54 v81 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v47 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i162 
y: i90 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i162 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
profileData: INJECTED designatedSuccessorProbability: 0.9621275435508059
stamp: void
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v57 #falseSuccessor: v54  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i636 
=== Usages ===
v355 
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i636  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i162 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j306 
index: a628 
=== Succesors ===
=== Usages ===
i636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: a628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i636 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
i280 v290 v308 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i636 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i636  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
x: i280 
y: i129 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i280 y: i129  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
i636 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v413 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
rawvalue: -105491
stableDimension: 0
stamp: i32 [-105491]
stampKind: i32
value: int[-105491|0xfffffffffffe63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i636 
y: i303 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i636 y: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v417 #falseSuccessor: v418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
guards: v610 v57 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v610 v57  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i161 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i161  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a327 
index: j309 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a327 index: j309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v355 
address: v654 
lastLocationAccess: - 
value: i636 
stateAfter: - 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v355 address: v654 lastLocationAccess: - value: i636 stateAfter: - #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
stamp: i32
=== Inputs ===
x: i161 
y: i30 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i161 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 131]
stamp: i32
=== Inputs ===
x: i162 
y: i30 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i162 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v48 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v48 #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v155 
values: i161 i13 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v155 values: i161 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v156 v157 
=== Succesors ===
next: v292 
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v156 v157 #next: v292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteVector.length
location: ByteVector.length
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 139]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
value: i160 
stateAfter: - 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - value: i160 stateAfter: - #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:310) [bci: 143]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid i498 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
rawvalue: -106515
stableDimension: 0
stamp: i32 [-106515]
stampKind: i32
value: int[-106515|0xfffffffffffe5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: i32 [-106515 - -105491] bits:1...1001xxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v491 
values: i493 i498 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v491 values: i493 i498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v492 v497 
=== Succesors ===
next: v496 
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v492 v497 #next: v496  <|@  <|@
tid ?51 <|@
d <@d|@=== Debug Properties ===
bci: 76
bytecode: iload
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 300
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i161 a327 i162 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i161 a327 i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
stateBefore: ?51 
actionAndReason: i494 
speculation: j483 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?51 actionAndReason: i494 speculation: j483  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid i490 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -104467
stableDimension: 0
stamp: i32 [-104467]
stampKind: i32
value: int[-104467|0xfffffffffffe67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i487 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -102419
stableDimension: 0
stamp: i32 [-102419]
stampKind: i32
value: int[-102419|0xfffffffffffe6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -67099
stableDimension: 0
stamp: i32 [-67099]
stampKind: i32
value: int[-67099|0xfffffffffffef9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v621 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i32 [-104467 - -63772] bits:1...1xxxxxxxxx1110x10x
valueDescription: i32
=== Inputs ===
merge: v470 
values: i472 i477 i480 i482 i485 i487 i490 i477 i480 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v470 values: i472 i477 i480 i482 i485 i487 i490 i477 i480  <|@  <|@
f <@~|@floating>@ <|@
tid j474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i64 [0 - 2584] bits:0...0xxxxx00xxx00
valueDescription: i64
=== Inputs ===
merge: v470 
values: j443 j478 j478 j483 j443 j488 j483 j478 j478 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v470 values: j443 j478 j478 j483 j443 j488 j483 j478 j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v471 v476 v479 v481 v484 v486 v489 v626 v627 
=== Succesors ===
next: v475 
=== Usages ===
i473 j474 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v471 v476 v479 v481 v484 v486 v489 v626 v627 #next: v475  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
sourceFile: ByteVector.java
sourceLine: 300
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i13 a327 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i13 a327  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateBefore: ?44 
actionAndReason: i473 
speculation: j474 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?44 actionAndReason: i473 speculation: j474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
rawvalue: -61723
stableDimension: 0
stamp: i32 [-61723]
stampKind: i32
value: int[-61723|0xffffffffffff0ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
rawvalue: -59163
stableDimension: 0
stamp: i32 [-59163]
stampKind: i32
value: int[-59163|0xffffffffffff18e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: i32 [-61723 - -59163] bits:1...1000x1xx011100101
valueDescription: i32
=== Inputs ===
merge: v462 
values: i464 i469 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v462 values: i464 i469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v463 v468 
=== Succesors ===
next: v467 
=== Usages ===
i465 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v463 v468 #next: v467  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 293
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i633 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
stateBefore: ?28 
actionAndReason: i465 
speculation: j443 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?28 actionAndReason: i465 speculation: j443  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -101395
stableDimension: 0
stamp: i32 [-101395]
stampKind: i32
value: int[-101395|0xfffffffffffe73ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [-110873 - -101395] bits:1...1001xxxx1x1110x1x1
valueDescription: i32
=== Inputs ===
merge: v440 
values: i452 i455 i457 i459 i461 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v440 values: i452 i455 i457 i459 i461  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i64 [0 - 1300] bits:0...0x0x000x0x00
valueDescription: i64
=== Inputs ===
merge: v440 
values: j453 j173 j443 j443 j443 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v440 values: j453 j173 j443 j443 j443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v451 v454 v456 v458 v460 
=== Succesors ===
next: v446 
=== Usages ===
i444 j445 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v451 v454 v456 v458 v460 #next: v446  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i444 
speculation: j445 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i444 speculation: j445  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a628 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a628  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# jdk.internal.org.objectweb.asm.ByteVector
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v84 v645 v646 ?44 ?51 ?28 v501 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v642 v644 ?44 ?28 ?51 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 285
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v446 v641 a537 a628 i630 i632 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a628 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-44043|0xffffffffffff53f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: i629 
=== Usages ===
v653 v643 v651 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v642 lastLocationAccess: - #next: i629  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i629 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v644 
lastLocationAccess: - 
=== Succesors ===
next: i630 
=== Usages ===
i186 
=== Predecessor ===
a628 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v644 lastLocationAccess: - #next: i630  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a628 
=== Succesors ===
=== Usages ===
i630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i630 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-45579|0xffffffffffff4df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v643 
lastLocationAccess: - 
=== Succesors ===
next: a631 
=== Usages ===
i90 v340 v251 v639 
=== Predecessor ===
i629 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v643 lastLocationAccess: - #next: a631  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a631 v224 v499 v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a631 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteVector.data
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 32]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v646 
lastLocationAccess: - 
=== Succesors ===
next: i632 
=== Usages ===
a191 v647 
=== Predecessor ===
i630 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v646 lastLocationAccess: - #next: i632  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a631 
=== Succesors ===
=== Usages ===
i632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i632 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-49419|0xffffffffffff3ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v647 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
v310 v17 v97 i114 
=== Predecessor ===
a631 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v647 lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i629 
=== Succesors ===
=== Usages ===
i90 v124 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i629  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i630 
y: i186 
=== Succesors ===
=== Usages ===
i359 v52 v93 i14 i438 i357 ?28 i33 v344 i40 ?44 ?51 v163 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i630 y: i186  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[65536|0x10000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536]
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i8 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
i632 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v397 #falseSuccessor: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:289) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i633 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i633  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i633 v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i633 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteVector.length
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:289) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
i13 v230 ?28 i31 j298 v97 i438 j590 i166 v202 v310 v311 
=== Predecessor ===
v397 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 27]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 i439 v340 v344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 28]
stamp: i32
=== Inputs ===
x: i633 
y: i12 
=== Succesors ===
=== Usages ===
i14 ?44 i160 j305 v261 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i633 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 30]
stamp: i32
=== Inputs ===
x: i13 
y: i90 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i13 y: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i632 
y: i14 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i632 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid a191 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 32]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a631 
=== Succesors ===
=== Usages ===
j584 a327 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a631  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v251 v124 v163 v202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 v467 j445 j445 j445 j474 j474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 55]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i80 i74 i114 i162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:290) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.15195618153364632
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i633 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i632 
y: i633 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i632 y: i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v423 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v422 #falseSuccessor: v423  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:396) [bci: 9]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
result int[-107795|0xfffffffffffe5aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -107795
stableDimension: 0
stamp: i32 [-107795]
stampKind: i32
value: int[-107795|0xfffffffffffe5aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:399) [bci: 22]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j503 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j503 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j564 
=== Usages ===
v655 v656 
=== Predecessor ===
v582 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j564  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j503 
index: - 
=== Succesors ===
=== Usages ===
j564 v566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j503 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j564 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
=== Succesors ===
next: j565 
=== Usages ===
j509 v657 v658 v659 a536 v660 v664 v661 v662 v663 
=== Predecessor ===
j503 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - #next: j565  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j503 
index: - 
=== Succesors ===
=== Usages ===
j565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j503 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j565 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
lastLocationAccess: - 
=== Succesors ===
next: v513 
=== Usages ===
v510 
=== Predecessor ===
j564 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v656 lastLocationAccess: - #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i90 
y: i633 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i633  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i438 
y: i12 
=== Succesors ===
=== Usages ===
v100 i115 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i438 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:399) [bci: 28]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i632 
y: i30 
=== Succesors ===
=== Usages ===
v100 i115 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i632 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 39]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i114 
=== Succesors ===
=== Usages ===
i115 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i439 y: i114  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 39]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i32
=== Inputs ===
condition: v100 
trueValue: i114 
falseValue: i439 
=== Succesors ===
=== Usages ===
v571 v311 j506 a537 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v100 trueValue: i114 falseValue: i439  <|@  <|@
f <@~|@floating>@ <|@
tid j506 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i115 
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i115  <|@  <|@
f <@~|@floating>@ <|@
tid j546 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j547 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j506 
y: j546 
=== Succesors ===
=== Usages ===
j508 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j506 y: j546  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j508 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j547 
y: j507 
=== Succesors ===
=== Usages ===
j509 v525 j549 v661 v662 v663 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j547 y: j507  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
x: j508 
y: j564 
=== Succesors ===
=== Usages ===
v510 v566 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j508 y: j564  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j565 
y: j509 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j565 y: j509  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v512 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
j565 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v512 #falseSuccessor: v511  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a537 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a537  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a537 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v502 i115 
=== Succesors ===
next: v641 
=== Usages ===
v641 a562 
=== Predecessor ===
v512 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v502 i115 #next: v641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-148081|0xfffffffffffdbd8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a537 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
a537 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a537 #next: v541  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
v641 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
value: j509 
stateAfter: - 
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - value: j509 stateAfter: - #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
result [v19|QWORD + v12|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: j564 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: j564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v661 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v661 #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
result [v19|QWORD + v12|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: j564 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: j564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v662 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v662 #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
result [v19|QWORD + v12|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: j564 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: j564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
address: v663 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v663 #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
result [v12|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v657 
lastLocationAccess: - 
value: j514 
stateAfter: - 
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v657 lastLocationAccess: - value: j514 stateAfter: - #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
result [v12|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v664 
lastLocationAccess: - 
value: v593 
stateAfter: - 
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v664 lastLocationAccess: - value: v593 stateAfter: - #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
result [v12|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
lastLocationAccess: - 
value: i115 
stateAfter: - 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v658 lastLocationAccess: - value: i115 stateAfter: - #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j549 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j508 
y: j548 
=== Succesors ===
=== Usages ===
v517 v521 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j508 y: j548  <|@  <|@
f <@~|@floating>@ <|@
tid j551 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j549 
y: j551 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j549 y: j551  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v519 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v519 #falseSuccessor: v518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j524 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v523 
values: j183 j533 
=== Succesors ===
=== Usages ===
v525 v659 j533 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v523 values: j183 j533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v522 
=== Succesors ===
next: v531 
=== Usages ===
j524 v530 v534 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v522 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j524 
y: j508 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j524 y: j508  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v525 
=== Succesors ===
trueSuccessor: v526 
falseSuccessor: v530 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v525 #trueSuccessor: v526 #falseSuccessor: v530  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
result [v12|QWORD + v24|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: j524 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
lastLocationAccess: - 
value: j443 
stateAfter: - 
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v659 lastLocationAccess: - value: j443 stateAfter: - #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid j533 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
x: j524 
y: j550 
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j524 y: j550  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
loopBegin: v523 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v523  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v523 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v523 #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
result [v12|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
length: j549 
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - length: j549 #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v521 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v527 v529 
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v527 v529 #next: v535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a536 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a536 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j564 
=== Succesors ===
next: v539 
=== Usages ===
a562 
=== Predecessor ===
v535 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j564 #next: v539  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
a536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a562 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v540 
values: a536 a537 
=== Succesors ===
=== Usages ===
a327 j588 a223 v501 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v540 values: a536 a537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:401) [bci: 47]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v539 v541 
=== Succesors ===
next: v428 
=== Usages ===
a562 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v539 v541 #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i633 
y: i45 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i633 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v426 #falseSuccessor: v427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid i457 <|@
result int[-108825|0xfffffffffffe56e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -108825
stableDimension: 0
stamp: i32 [-108825]
stampKind: i32
value: int[-108825|0xfffffffffffe56e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i632 
y: i633 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i632 y: i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v430 #falseSuccessor: v431  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
result int[-109849|0xfffffffffffe52e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -109849
stableDimension: 0
stamp: i32 [-109849]
stampKind: i32
value: int[-109849|0xfffffffffffe52e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i633 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i115 y: i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v434 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v434 #falseSuccessor: v435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
result int[-110873|0xfffffffffffe4ee7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -110873
stableDimension: 0
stamp: i32 [-110873]
stampKind: i32
value: int[-110873|0xfffffffffffe4ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j584 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j584 <|@
result v29|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
object: a191 
=== Succesors ===
next: j588 
=== Usages ===
v665 
=== Predecessor ===
v435 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a191 #next: j588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j588 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: i64
=== Inputs ===
object: a562 
=== Succesors ===
next: v591 
=== Usages ===
v666 
=== Predecessor ===
j584 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a562 #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
result [v29|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j584 
index: - 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j584 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
result [v30|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j588 
index: - 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j588 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j590 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i633 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:402) [bci: 63]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v665 v666 j590 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
j588 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v665 v666 j590 #next: v499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v646 
value: - 
stateBefore: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v646 value: - stateBefore: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid a223 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a562 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteVector.data
location: ByteVector.data
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v646 
lastLocationAccess: - 
value: a223 
stateAfter: - 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v646 lastLocationAccess: - value: a223 stateAfter: - #next: v501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.enlarge(ByteVector.java:403) [bci: 69]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:291) [bci: 43]
precise: false
stamp: void
=== Inputs ===
address: v646 
value: a562 
object: a1 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v646 value: a562 object: a1 #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a327 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v26 
values: a191 a562 
=== Succesors ===
=== Usages ===
v648 v654 v649 v652 ?44 ?51 v650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v26 values: a191 a562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v25 v27 
=== Succesors ===
next: i634 
=== Usages ===
a327 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v25 v27 #next: i634  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
result [v37|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a327 
index: - 
=== Succesors ===
=== Usages ===
i634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a327 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i634 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v648 
lastLocationAccess: - 
=== Succesors ===
next: v375 
=== Usages ===
v230 v240 v261 v351 j347 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v648 lastLocationAccess: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i633 
y: i634 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i633 y: i634  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
i634 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v372 #falseSuccessor: v374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
v238 
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 55]
stamp: i32
=== Inputs ===
x: i633 
y: i30 
=== Succesors ===
=== Usages ===
v240 j299 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i633 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i634 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i31 y: i634  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v378 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v376 #falseSuccessor: v378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
v248 
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid j298 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i633 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i633  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
result [v37|QWORD[.] + v8|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a327 
index: j298 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a327 index: j298  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 59]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 61]
stamp: i32 [0 - 8388607] bits:0...0xxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i90 
y: i32 
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i90 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 62]
resultBits: 8
stamp: i8
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v372 
address: v649 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v372 address: v649 lastLocationAccess: - value: i34 stateAfter: - #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid j299 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i31 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
result [v37|QWORD[.] + v39|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a327 
index: j299 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a327 index: j299  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 71]
resultBits: 8
stamp: i8
=== Inputs ===
value: i90 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v376 
address: v650 
lastLocationAccess: - 
value: i40 
stateAfter: - 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v376 address: v650 lastLocationAccess: - value: i40 stateAfter: - #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i45 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i90 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
profileData: PROFILED designatedSuccessorProbability: 0.03649047261429861
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v137 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v137 #falseSuccessor: v138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
v137 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i12 
=== Succesors ===
=== Usages ===
v601 v617 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i90 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
result long[2584|0xa18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 2584
stableDimension: 0
stamp: i64 [2584]
stampKind: i64
value: long[2584|0xa18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j474 j474 j474 j474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v597 #falseSuccessor: v600  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
v597 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i90 
y: i358 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i358  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i359 
y: i630 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i359 y: i630  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
result int[-69148|0xfffffffffffef1e4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -69148
stableDimension: 0
stamp: i32 [-69148]
stampKind: i32
value: int[-69148|0xfffffffffffef1e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v639 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v605 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v639 #trueSuccessor: v608 #falseSuccessor: v605  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i12 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i630 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v598 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v606 #falseSuccessor: v598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v595 v596 
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v595 v596 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
stamp: i32
=== Inputs ===
x: i633 
y: i165 
=== Succesors ===
=== Usages ===
v351 i161 j348 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i633 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v613 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i166 
=== Succesors ===
=== Usages ===
j349 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i166  <|@  <|@
f <@~|@floating>@ <|@
tid i356 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2 - 2147483645]
=== Inputs ===
x: i90 
y: i356 
=== Succesors ===
=== Usages ===
j638 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i356  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i357 
=== Succesors ===
=== Usages ===
j349 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i357  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j348 
y: j638 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j348 y: j638  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i634 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i634  <|@  <|@
f <@~|@floating>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j349 
y: j347 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j349 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
result int[-72475|0xfffffffffffee4e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -72475
stableDimension: 0
stamp: i32 [-72475]
stampKind: i32
value: int[-72475|0xfffffffffffee4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v350 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v621 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v350 #trueSuccessor: v624 #falseSuccessor: v621  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i166 
y: i634 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i166 y: i634  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v614 #falseSuccessor: v622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v611 v612 
=== Succesors ===
next: v391 
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v611 v612 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i45 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i630 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v251 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v251 #trueSuccessor: v390 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
result int[-63772|0xffffffffffff06e4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -63772
stableDimension: 0
stamp: i32 [-63772]
stampKind: i32
value: int[-63772|0xffffffffffff06e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i634 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i13 y: i634  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v392 #falseSuccessor: v394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
v269 
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i186 
y: i45 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i186 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v401 #falseSuccessor: v402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: i635 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i635  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
result [v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a628 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i635 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v651 
lastLocationAccess: - 
=== Succesors ===
next: v407 
=== Usages ===
i259 v269 v304 
=== Predecessor ===
v401 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v651 lastLocationAccess: - #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i635 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i635  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result int[255|0xff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 9]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 255
stableDimension: 0
stamp: i32 [255]
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 v131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
x: i259 
y: i129 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i259 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j474 j474 v496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v151 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
i635 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v151 #trueSuccessor: v405 #falseSuccessor: v406  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result int[-103443|0xfffffffffffe6bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -103443
stableDimension: 0
stamp: i32 [-103443]
stampKind: i32
value: int[-103443|0xfffffffffffe6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
result byte[-128|0xffffffffffffff80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
rawvalue: -128
stableDimension: 0
stamp: i8 [-128]
stampKind: i8
value: byte[-128|0xffffffffffffff80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 v308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i635 
y: i303 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i635 y: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v409 #falseSuccessor: v410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
result [v37|QWORD[.] + v9|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a327 
index: j305 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a327 index: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v392 
address: v652 
lastLocationAccess: - 
value: i635 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v392 address: v652 lastLocationAccess: - value: i635 stateAfter: - #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
v269 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i162 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v48 
values: i30 i80 
=== Succesors ===
=== Usages ===
?51 v52 i80 j306 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v48 values: i30 i80  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v48 
values: i166 i74 
=== Succesors ===
=== Usages ===
?51 i160 j309 i74 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v48 values: i166 i74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v47 
=== Succesors ===
next: v58 
=== Usages ===
i162 i161 v54 v81 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v47 #next: v58  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i162 
y: i90 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i162 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 79]
profileData: INJECTED designatedSuccessorProbability: 0.9621275435508059
stamp: void
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v57 #falseSuccessor: v54  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i636 
=== Usages ===
v355 
=== Predecessor ===
v58 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i636  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i162 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
result [v50|DWORD + v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j306 
index: a628 
=== Succesors ===
=== Usages ===
i636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: a628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i636 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
=== Succesors ===
next: v415 
=== Usages ===
i280 v290 v308 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i636 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i636  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
x: i280 
y: i129 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i280 y: i129  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
i636 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v413 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
result int[-105491|0xfffffffffffe63ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
rawvalue: -105491
stableDimension: 0
stamp: i32 [-105491]
stampKind: i32
value: int[-105491|0xfffffffffffe63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 96]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i636 
y: i303 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i636 y: i303  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v417 #falseSuccessor: v418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
guards: v610 v57 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v610 v57  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i161 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i161  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
result [v37|QWORD[.] + v51|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a327 
index: j309 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a327 index: j309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v355 
address: v654 
lastLocationAccess: - 
value: i636 
stateAfter: - 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v355 address: v654 lastLocationAccess: - value: i636 stateAfter: - #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 106]
stamp: i32
=== Inputs ===
x: i161 
y: i30 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i161 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 131]
stamp: i32
=== Inputs ===
x: i162 
y: i30 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i162 y: i30  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v48 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v48 #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i160 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v155 
values: i161 i13 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v155 values: i161 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v156 v157 
=== Succesors ===
next: v292 
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v156 v157 #next: v292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteVector.length
location: ByteVector.length
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:309) [bci: 139]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
value: i160 
stateAfter: - 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - value: i160 stateAfter: - #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:310) [bci: 143]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid i498 <|@
result int[-106515|0xfffffffffffe5fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
rawvalue: -106515
stableDimension: 0
stamp: i32 [-106515]
stampKind: i32
value: int[-106515|0xfffffffffffe5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i494 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: i32 [-106515 - -105491] bits:1...1001xxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v491 
values: i493 i498 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v491 values: i493 i498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v492 v497 
=== Succesors ===
next: v496 
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v492 v497 #next: v496  <|@  <|@
tid ?51 <|@
d <@d|@=== Debug Properties ===
bci: 76
bytecode: iload
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 300
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i161 a327 i162 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i161 a327 i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 93]
stamp: void
=== Inputs ===
stateBefore: ?51 
actionAndReason: i494 
speculation: j483 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?51 actionAndReason: i494 speculation: j483  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:302) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid i490 <|@
result int[-104467|0xfffffffffffe67ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -104467
stableDimension: 0
stamp: i32 [-104467]
stampKind: i32
value: int[-104467|0xfffffffffffe67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i487 <|@
result int[-102419|0xfffffffffffe6fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -102419
stableDimension: 0
stamp: i32 [-102419]
stampKind: i32
value: int[-102419|0xfffffffffffe6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
result int[-67099|0xfffffffffffef9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
rawvalue: -67099
stableDimension: 0
stamp: i32 [-67099]
stampKind: i32
value: int[-67099|0xfffffffffffef9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:303) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v621 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i473 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i32 [-104467 - -63772] bits:1...1xxxxxxxxx1110x10x
valueDescription: i32
=== Inputs ===
merge: v470 
values: i472 i477 i480 i482 i485 i487 i490 i477 i480 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v470 values: i472 i477 i480 i482 i485 i487 i490 i477 i480  <|@  <|@
f <@~|@floating>@ <|@
tid j474 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: i64 [0 - 2584] bits:0...0xxxxx00xxx00
valueDescription: i64
=== Inputs ===
merge: v470 
values: j443 j478 j478 j483 j443 j488 j483 j478 j478 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v470 values: j443 j478 j478 j483 j443 j488 j483 j478 j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v471 v476 v479 v481 v484 v486 v489 v626 v627 
=== Succesors ===
next: v475 
=== Usages ===
i473 j474 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v471 v476 v479 v481 v484 v486 v489 v626 v627 #next: v475  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 73
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
sourceFile: ByteVector.java
sourceLine: 300
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i13 a327 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i13 a327  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:301) [bci: 85]
stamp: void
=== Inputs ===
stateBefore: ?44 
actionAndReason: i473 
speculation: j474 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?44 actionAndReason: i473 speculation: j474  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:299) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
result int[-61723|0xffffffffffff0ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
rawvalue: -61723
stableDimension: 0
stamp: i32 [-61723]
stampKind: i32
value: int[-61723|0xffffffffffff0ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
result int[-59163|0xffffffffffff18e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
rawvalue: -59163
stableDimension: 0
stamp: i32 [-59163]
stampKind: i32
value: int[-59163|0xffffffffffff18e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i465 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: i32 [-61723 - -59163] bits:1...1000x1xx011100101
valueDescription: i32
=== Inputs ===
merge: v462 
values: i464 i469 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v462 values: i464 i469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v463 v468 
=== Succesors ===
next: v467 
=== Usages ===
i465 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v463 v468 #next: v467  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ByteVector.putUTF8(String)>
localsSize: 7
locksSize: 0
sourceFile: ByteVector.java
sourceLine: 293
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i90 i633 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i90 i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:298) [bci: 63]
stamp: void
=== Inputs ===
stateBefore: ?28 
actionAndReason: i465 
speculation: j443 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?28 actionAndReason: i465 speculation: j443  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:286) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
result int[-101395|0xfffffffffffe73ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
rawvalue: -101395
stableDimension: 0
stamp: i32 [-101395]
stampKind: i32
value: int[-101395|0xfffffffffffe73ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i444 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i32 [-110873 - -101395] bits:1...1001xxxx1x1110x1x1
valueDescription: i32
=== Inputs ===
merge: v440 
values: i452 i455 i457 i459 i461 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v440 values: i452 i455 i457 i459 i461  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: i64 [0 - 1300] bits:0...0x0x000x0x00
valueDescription: i64
=== Inputs ===
merge: v440 
values: j453 j173 j443 j443 j443 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v440 values: j453 j173 j443 j443 j443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v451 v454 v456 v458 v460 
=== Succesors ===
next: v446 
=== Usages ===
i444 j445 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v451 v454 v456 v458 v460 #next: v446  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i444 
speculation: j445 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i444 speculation: j445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  152  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr  156  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr  168  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  230  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  260  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  288  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  478  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  482  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  486  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  536  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  538  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  540  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  568  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  648  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  650  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  742  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr  772  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  800  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  832  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  848  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  908  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  914  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1096  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1128  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1148  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1160  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1192  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  152  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr  156  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr  168  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  230  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  260  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  288  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  478  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  482  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  486  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  536  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  538  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  540  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  568  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  648  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  650  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  742  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr  772  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  800  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  832  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  848  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  908  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  914  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1096  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1128  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1148  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1160  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1192  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[474, 475[[870, 872[[912, 914[[942, 943[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v3|d [0, 1[[50, 53[[474, 475[[940, 943[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v31|q [0, 38[[472, 475[[910, 912[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 32[[474, 475[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v21|q [0, 36[[470, 475[[908, 912[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[468, 475[[942, 943[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [36, 870[[874, 1117[[1118, 1149[[1150, 1181[[1182, 1213[36 MustHaveRegister 46 MustHaveRegister 80 MustHaveRegister 476 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister 868 MustHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|d [38, 838[[884, 1117[[1118, 1149[[1150, 1181[[1182, 1213[38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [40, 838[[884, 946[40 MustHaveRegister 44 MustHaveRegister 740 MustHaveRegister 798 MustHaveRegister 837 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [42, 724[[884, 946[42 MustHaveRegister 50 ShouldHaveRegister 724 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [44, 700[[884, 946[44 MustHaveRegister 52 ShouldHaveRegister 568 MustHaveRegister 580 ShouldHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [46, 86[46 MustHaveRegister 48 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [48, 90[[100, 310[[884, 946[48 MustHaveRegister 88 ShouldHaveRegister 110 ShouldHaveRegister 156 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v4|d [52, 838[[884, 946[[956, 1026[[1036, 1046[[1056, 1076[[1086, 1117[[1118, 1149[[1150, 1181[52 MustHaveRegister 54 ShouldHaveRegister 84 ShouldHaveRegister 152 ShouldHaveRegister 534 MustHaveRegister 538 MustHaveRegister 540 MustHaveRegister 552 ShouldHaveRegister 566 ShouldHaveRegister 620 ShouldHaveRegister 648 MustHaveRegister 782 MustHaveRegister 837 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [80, 618[[884, 946[[1066, 1076[[1086, 1117[80 MustHaveRegister 82 MustHaveRegister 110 MustHaveRegister 152 ShouldHaveRegister 298 MustHaveRegister 310 MustHaveRegister 322 MustHaveRegister 466 ShouldHaveRegister 500 ShouldHaveRegister 514 ShouldHaveRegister 536 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [82, 768[[874, 883[[884, 946[[956, 1026[[1036, 1046[[1150, 1181[82 MustHaveRegister 84 ShouldHaveRegister 712 ShouldHaveRegister 768 MustHaveRegister 882 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v9|d [84, 88[84 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v5|d [86, 99[[100, 462[[884, 946[86 MustHaveRegister 98 ShouldHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [150, 284[[920, 946[150 MustHaveRegister 168 ShouldHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 212 MustHaveRegister 214 MustHaveRegister 258 MustHaveRegister 263 LiveAtLoopEnd 284 ShouldHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v7|d [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [154, 160[154 MustHaveRegister 158 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v6|d [156, 161[156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v14|d [160, 322[[884, 946[160 MustHaveRegister 162 ShouldHaveRegister 214 MustHaveRegister 322 ShouldHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|d [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v18|q [166, 264[166 MustHaveRegister 168 ShouldHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 216 MustHaveRegister 240 MustHaveRegister 263 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v19|q [168, 202[168 MustHaveRegister 170 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [906, 908[906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q rax|q [914, 919[914 MustHaveRegister 916 MustHaveRegister 918 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [216, 220[[920, 940[216 MustHaveRegister 218 ShouldHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v25|q [230, 260[240 ShouldHaveRegister 258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v24|q [260, 263[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v12|q [284, 287[284 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v27|q [288, 485[464 ShouldHaveRegister 478 MustHaveRegister 482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v11|q [462, 468[462 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v28|q [464, 470[464 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v8|d [466, 472[466 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [476, 477[476 MustHaveRegister  "NoDefinitionFound"
  v33|q QWORD "[v33|q]" v33|q -1 [476, 477[476 MustHaveRegister  "NoDefinitionFound"
  v34|d DWORD "[v34|d]" v34|d v28|q [478, 480[478 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q -1 [482, 483[482 MustHaveRegister  "NoDefinitionFound"
  v36|q QWORD "[v36|q]" v36|q -1 [482, 483[482 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[v37|q]" v37|q v11|q [486, 838[[956, 1026[[1036, 1046[[1056, 1066[[1118, 1149[[1150, 1181[498 MustHaveRegister 536 MustHaveRegister 538 MustHaveRegister 768 MustHaveRegister 830 MustHaveRegister 837 LiveAtLoopEnd  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [498, 712[498 MustHaveRegister 500 MustHaveRegister 516 MustHaveRegister 654 ShouldHaveRegister 668 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d v8|d [514, 538[514 MustHaveRegister 516 ShouldHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v7|d [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v7|d [566, 568[566 MustHaveRegister 568 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [618, 771[618 MustHaveRegister 646 ShouldHaveRegister 668 ShouldHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [646, 652[646 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [648, 650[648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v44|d [650, 652[650 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v43|q [652, 656[652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v38|d [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [740, 768[740 MustHaveRegister 742 ShouldHaveRegister 756 ShouldHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d v55|d [772, 834[[1056, 1066[[1118, 1149[782 ShouldHaveRegister 798 MustHaveRegister 834 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v54|d [772, 832[[838, 847[[1056, 1066[[1118, 1149[830 MustHaveRegister 832 ShouldHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [798, 830[798 MustHaveRegister 800 ShouldHaveRegister 814 ShouldHaveRegister 830 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d -1 [800, 802[800 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v51|d [832, 837[832 MustHaveRegister 836 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d v50|d [834, 837[834 MustHaveRegister 836 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v51|d [848, 868[868 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d -1 [1128, 1144[1144 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d -1 [1160, 1176[1176 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [1160, 1178[1178 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d -1 [1096, 1112[1112 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d -1 [1192, 1208[1208 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [1192, 1210[1210 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[474, 475[[870, 872[[912, 914[[942, 943[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v3|d [0, 1[[50, 53[[474, 475[[940, 943[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v31|q [0, 38[[472, 475[[910, 912[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 32[[474, 475[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v21|q [0, 36[[470, 475[[908, 912[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[468, 475[[942, 943[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [36, 324[36 MustHaveRegister 46 MustHaveRegister 80 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [38, 324[38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [40, 324[40 MustHaveRegister 44 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [42, 324[42 MustHaveRegister 50 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [44, 324[44 MustHaveRegister 52 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [46, 86[46 MustHaveRegister 48 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [48, 90[[100, 310[[884, 946[48 MustHaveRegister 88 ShouldHaveRegister 110 ShouldHaveRegister 156 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [52, 324[52 MustHaveRegister 54 ShouldHaveRegister 84 ShouldHaveRegister 152 ShouldHaveRegister  "OneSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [80, 473[80 MustHaveRegister 82 MustHaveRegister 110 MustHaveRegister 152 ShouldHaveRegister 298 MustHaveRegister 310 MustHaveRegister 322 MustHaveRegister 466 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [82, 324[82 MustHaveRegister 84 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rbp|d]" v10|d v9|d [84, 88[84 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r13|q]" v11|q v5|d [86, 99[[100, 112[86 MustHaveRegister 98 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[rbp|q]" v12|q -1 [150, 284[[920, 946[150 MustHaveRegister 168 ShouldHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 212 MustHaveRegister 214 MustHaveRegister 258 MustHaveRegister 263 LiveAtLoopEnd 284 ShouldHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d v7|d [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [154, 160[154 MustHaveRegister 158 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r14|d]" v15|d v6|d [156, 161[156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rdi|d]" v16|d v14|d [160, 322[[884, 920[160 MustHaveRegister 162 ShouldHaveRegister 214 MustHaveRegister 322 ShouldHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r14|q]" v17|q v16|d [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r14|q]" v18|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r14|q]" v19|q v18|q [166, 264[166 MustHaveRegister 168 ShouldHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 216 MustHaveRegister 240 MustHaveRegister 263 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[r13|q]" v20|q v19|q [168, 202[168 MustHaveRegister 170 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q -1 [906, 908[906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [914, 919[914 MustHaveRegister 916 MustHaveRegister 918 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r13|q]" v23|q -1 [216, 220[[920, 940[216 MustHaveRegister 218 ShouldHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r13|q]" v24|q v25|q [230, 260[240 ShouldHaveRegister 258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r13|q]" v25|q v24|q [260, 263[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbp|q]" v27|q v12|q [284, 287[284 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbp|q]" v28|q v27|q [288, 473[464 ShouldHaveRegister  "OneSpillStore"
  v29|q QWORD "[r13|q]" v29|q v11|q [462, 468[462 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v28|q [464, 470[464 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r14|q]" v31|q v8|d [466, 472[466 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q -1 [476, 477[476 MustHaveRegister  "NoDefinitionFound"
  v33|q QWORD "[rsi|q]" v33|q -1 [476, 477[476 MustHaveRegister  "NoDefinitionFound"
  v34|d DWORD "[rax|d]" v34|d v28|q [478, 480[478 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q -1 [482, 483[482 MustHaveRegister  "NoDefinitionFound"
  v36|q QWORD "[rsi|q]" v36|q -1 [482, 483[482 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[r13|q]" v37|q v11|q [486, 838[[956, 1026[[1036, 1046[[1056, 1066[[1118, 1149[[1150, 1181[498 MustHaveRegister 536 MustHaveRegister 538 MustHaveRegister 768 MustHaveRegister 830 MustHaveRegister 837 LiveAtLoopEnd  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [498, 712[498 MustHaveRegister 500 MustHaveRegister 516 MustHaveRegister 654 ShouldHaveRegister 668 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d v8|d [514, 538[514 MustHaveRegister 516 ShouldHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d v7|d [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d v7|d [566, 568[566 MustHaveRegister 568 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [618, 771[618 MustHaveRegister 646 ShouldHaveRegister 668 ShouldHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q -1 [646, 652[646 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rcx|d]" v44|d -1 [648, 650[648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rcx|q]" v45|q v44|d [650, 652[650 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v43|q [652, 656[652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q v38|d [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d -1 [740, 768[740 MustHaveRegister 742 ShouldHaveRegister 756 ShouldHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdx|d]" v49|d -1 [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v55|d [772, 834[[1056, 1066[[1118, 1149[782 ShouldHaveRegister 798 MustHaveRegister 834 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d v54|d [772, 832[[838, 847[[1056, 1066[[1118, 1149[830 MustHaveRegister 832 ShouldHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d -1 [798, 830[798 MustHaveRegister 800 ShouldHaveRegister 814 ShouldHaveRegister 830 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rsi|d]" v53|d -1 [800, 802[800 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r8|d]" v54|d v51|d [832, 837[832 MustHaveRegister 836 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r11|d]" v55|d v50|d [834, 837[834 MustHaveRegister 836 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d v51|d [848, 868[868 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[r9|d]" v57|d -1 [1128, 1144[1144 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d -1 [1160, 1176[1176 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q -1 [1160, 1178[1178 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[r8|d]" v60|d -1 [1096, 1112[1112 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [1192, 1208[1208 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r8|q]" v62|q -1 [1192, 1210[1210 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[vstack:2|q]" v0|q v0|q [324, 469[ "OneSpillStore"
  v64|q QWORD "[vstack:1|q]" v1|q v1|q [324, 471[ "OneSpillStore"
  v65|d DWORD "[vstack:10|d]" v2|d v2|d [324, 473[ "OneSpillStore"
  v66|d DWORD "[vstack:9|d]" v3|d v3|d [324, 473[ "OneSpillStore"
  v67|d DWORD "[vstack:7|d]" v4|d v4|d [324, 473[ "OneSpillStore"
  v68|d DWORD "[vstack:6|d]" v7|d v7|d [324, 473[ "OneSpillStore"
  v69|d DWORD "[vstack:5|d]" v8|d v8|d [473, 518[500 ShouldHaveRegister 514 ShouldHaveRegister  "OneSpillStore"
  v70|d DWORD "[vstack:8|d]" v9|d v9|d [324, 473[ "OneSpillStore"
  v71|d DWORD "[rdi|d]" v16|d v16|d [920, 941[ "NoSpillStore"
  v72|q QWORD "[vstack:0|q]" v11|q v11|q [112, 462[[884, 946[462 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[vstack:4|q]" v28|q v28|q [473, 477[ "OneSpillStore"
  v74|q QWORD "[vstack:2|q]" v0|q v0|q [469, 473[ "OneSpillStore"
  v75|d DWORD "[vstack:6|d]" v7|d v7|d [473, 518[ "OneSpillStore"
  v76|d DWORD "[vstack:7|d]" v4|d v4|d [473, 554[ "OneSpillStore"
  v77|d DWORD "[vstack:8|d]" v9|d v9|d [473, 758[712 ShouldHaveRegister  "OneSpillStore"
  v78|d DWORD "[vstack:9|d]" v3|d v3|d [473, 714[ "OneSpillStore"
  v79|d DWORD "[vstack:10|d]" v2|d v2|d [473, 726[ "OneSpillStore"
  v80|q QWORD "[vstack:1|q]" v1|q v1|q [471, 838[[884, 1117[[1118, 1149[[1150, 1181[[1182, 1192[ "OneSpillStore"
  v81|q QWORD "[vstack:2|q]" v0|q v0|q [473, 475[ "OneSpillStore"
  v82|q QWORD "[rdx|q]" v1|q v1|q [1192, 1213[ "OneSpillStore"
  v83|q QWORD "[r10|q]" v0|q v0|q [475, 870[[874, 1117[[1118, 1149[[1150, 1181[[1182, 1213[476 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister 868 MustHaveRegister 870 ShouldHaveRegister  "OneSpillStore"
  v84|q QWORD "[rbp|q]" v28|q v28|q [477, 485[478 MustHaveRegister 482 MustHaveRegister 484 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[r11|d]" v8|d v8|d [518, 618[[884, 946[[1066, 1076[[1086, 1117[536 MustHaveRegister 618 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rbx|d]" v7|d v7|d [518, 838[[884, 946[[956, 1026[[1036, 1046[[1056, 1076[[1086, 1117[[1118, 1149[[1150, 1181[534 MustHaveRegister 538 MustHaveRegister 540 MustHaveRegister 552 ShouldHaveRegister 566 ShouldHaveRegister 620 ShouldHaveRegister 648 MustHaveRegister 782 MustHaveRegister 837 LiveAtLoopEnd  "OneSpillStore"
  v87|d DWORD "[r8|d]" v4|d v4|d [554, 700[[884, 946[568 MustHaveRegister 580 ShouldHaveRegister 700 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[rbp|d]" v9|d v9|d [758, 768[[874, 883[[884, 920[768 MustHaveRegister 882 ShouldHaveRegister  "OneSpillStore"
  v89|d DWORD "[r14|d]" v3|d v3|d [714, 724[[884, 946[724 MustHaveRegister  "OneSpillStore"
  v90|d DWORD "[rcx|d]" v2|d v2|d [726, 838[[884, 920[740 MustHaveRegister 798 MustHaveRegister 837 LiveAtLoopEnd  "OneSpillStore"
  v91|d DWORD "[rsi|d]" v2|d v2|d [920, 946[ "OneSpillStore"
  v92|d DWORD "[rdx|d]" v9|d v9|d [920, 946[[956, 1026[[1036, 1046[[1150, 1181[ "OneSpillStore"
  v93|d DWORD "[r13|d]" v16|d v16|d [941, 946[ "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  152  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr  156  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr  168  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  230  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  260  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  288  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = STACKMOVE (input: v65|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  482  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  486  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  536  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  538  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  540  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  568  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  648  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  650  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  742  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr  772  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  800  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  832  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  848  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  908  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  914  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1096  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1128  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1148  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1160  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1192  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[474, 475[[870, 872[[912, 914[[942, 943[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v3|d [0, 1[[50, 53[[474, 475[[940, 943[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v31|q [0, 38[[472, 475[[910, 912[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 32[[474, 475[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v21|q [0, 36[[470, 475[[908, 912[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[468, 475[[942, 943[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [36, 324[36 MustHaveRegister 46 MustHaveRegister 80 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [38, 324[38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [40, 324[40 MustHaveRegister 44 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [42, 324[42 MustHaveRegister 50 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [44, 324[44 MustHaveRegister 52 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [46, 86[46 MustHaveRegister 48 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [48, 90[[100, 310[[884, 946[48 MustHaveRegister 88 ShouldHaveRegister 110 ShouldHaveRegister 156 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [52, 324[52 MustHaveRegister 54 ShouldHaveRegister 84 ShouldHaveRegister 152 ShouldHaveRegister  "OneSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [80, 473[80 MustHaveRegister 82 MustHaveRegister 110 MustHaveRegister 152 ShouldHaveRegister 298 MustHaveRegister 310 MustHaveRegister 322 MustHaveRegister 466 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [82, 324[82 MustHaveRegister 84 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rbp|d]" v10|d v9|d [84, 88[84 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r13|q]" v11|q v5|d [86, 99[[100, 112[86 MustHaveRegister 98 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[rbp|q]" v12|q -1 [150, 284[[920, 946[150 MustHaveRegister 168 ShouldHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 212 MustHaveRegister 214 MustHaveRegister 258 MustHaveRegister 263 LiveAtLoopEnd 284 ShouldHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d v7|d [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [154, 160[154 MustHaveRegister 158 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r14|d]" v15|d v6|d [156, 161[156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rdi|d]" v16|d v14|d [160, 322[[884, 920[160 MustHaveRegister 162 ShouldHaveRegister 214 MustHaveRegister 322 ShouldHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r14|q]" v17|q v16|d [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r14|q]" v18|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r14|q]" v19|q v18|q [166, 264[166 MustHaveRegister 168 ShouldHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 216 MustHaveRegister 240 MustHaveRegister 263 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[r13|q]" v20|q v19|q [168, 202[168 MustHaveRegister 170 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q -1 [906, 908[906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [914, 919[914 MustHaveRegister 916 MustHaveRegister 918 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r13|q]" v23|q -1 [216, 220[[920, 940[216 MustHaveRegister 218 ShouldHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r13|q]" v24|q v25|q [230, 260[240 ShouldHaveRegister 258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r13|q]" v25|q v24|q [260, 263[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbp|q]" v27|q v12|q [284, 287[284 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbp|q]" v28|q v27|q [288, 473[464 ShouldHaveRegister  "OneSpillStore"
  v29|q QWORD "[r13|q]" v29|q v11|q [462, 468[462 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v28|q [464, 470[464 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r14|q]" v31|q v8|d [466, 472[466 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q -1 [476, 477[476 MustHaveRegister  "NoDefinitionFound"
  v33|q QWORD "[rsi|q]" v33|q -1 [476, 477[476 MustHaveRegister  "NoDefinitionFound"
  v34|d DWORD "[rax|d]" v34|d v28|q [478, 480[478 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q -1 [482, 483[482 MustHaveRegister  "NoDefinitionFound"
  v36|q QWORD "[rsi|q]" v36|q -1 [482, 483[482 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[r13|q]" v37|q v11|q [486, 838[[956, 1026[[1036, 1046[[1056, 1066[[1118, 1149[[1150, 1181[498 MustHaveRegister 536 MustHaveRegister 538 MustHaveRegister 768 MustHaveRegister 830 MustHaveRegister 837 LiveAtLoopEnd  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [498, 712[498 MustHaveRegister 500 MustHaveRegister 516 MustHaveRegister 654 ShouldHaveRegister 668 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d v8|d [514, 538[514 MustHaveRegister 516 ShouldHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d v7|d [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d v7|d [566, 568[566 MustHaveRegister 568 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [618, 771[618 MustHaveRegister 646 ShouldHaveRegister 668 ShouldHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q -1 [646, 652[646 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rcx|d]" v44|d -1 [648, 650[648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rcx|q]" v45|q v44|d [650, 652[650 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v43|q [652, 656[652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q v38|d [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d -1 [740, 768[740 MustHaveRegister 742 ShouldHaveRegister 756 ShouldHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdx|d]" v49|d -1 [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v55|d [772, 834[[1056, 1066[[1118, 1149[782 ShouldHaveRegister 798 MustHaveRegister 834 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d v54|d [772, 832[[838, 847[[1056, 1066[[1118, 1149[830 MustHaveRegister 832 ShouldHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d -1 [798, 830[798 MustHaveRegister 800 ShouldHaveRegister 814 ShouldHaveRegister 830 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rsi|d]" v53|d -1 [800, 802[800 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r8|d]" v54|d v51|d [832, 837[832 MustHaveRegister 836 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r11|d]" v55|d v50|d [834, 837[834 MustHaveRegister 836 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d v51|d [848, 868[868 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[r9|d]" v57|d -1 [1128, 1144[1144 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d -1 [1160, 1176[1176 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q -1 [1160, 1178[1178 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[r8|d]" v60|d -1 [1096, 1112[1112 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [1192, 1208[1208 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r8|q]" v62|q -1 [1192, 1210[1210 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[vstack:2|q]" v0|q v0|q [324, 469[ "OneSpillStore"
  v64|q QWORD "[vstack:1|q]" v1|q v1|q [324, 471[ "OneSpillStore"
  v65|d DWORD "[vstack:10|d]" v2|d v2|d [324, 473[ "OneSpillStore"
  v66|d DWORD "[vstack:9|d]" v3|d v3|d [324, 473[ "OneSpillStore"
  v67|d DWORD "[vstack:7|d]" v4|d v4|d [324, 473[ "OneSpillStore"
  v68|d DWORD "[vstack:6|d]" v7|d v7|d [324, 473[ "OneSpillStore"
  v69|d DWORD "[vstack:5|d]" v8|d v8|d [473, 518[500 ShouldHaveRegister 514 ShouldHaveRegister  "OneSpillStore"
  v70|d DWORD "[vstack:8|d]" v9|d v9|d [324, 473[ "OneSpillStore"
  v71|d DWORD "[rdi|d]" v16|d v16|d [920, 941[ "NoSpillStore"
  v72|q QWORD "[vstack:0|q]" v11|q v11|q [112, 462[[884, 946[462 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[vstack:4|q]" v28|q v28|q [473, 477[ "OneSpillStore"
  v74|q QWORD "[vstack:2|q]" v0|q v0|q [469, 473[ "OneSpillStore"
  v75|d DWORD "[vstack:6|d]" v7|d v7|d [473, 518[ "OneSpillStore"
  v76|d DWORD "[vstack:7|d]" v4|d v4|d [473, 554[ "OneSpillStore"
  v77|d DWORD "[vstack:8|d]" v9|d v9|d [473, 758[712 ShouldHaveRegister  "OneSpillStore"
  v78|d DWORD "[vstack:9|d]" v3|d v3|d [473, 714[ "OneSpillStore"
  v79|d DWORD "[vstack:10|d]" v2|d v2|d [473, 726[ "OneSpillStore"
  v80|q QWORD "[vstack:1|q]" v1|q v1|q [471, 838[[884, 1117[[1118, 1149[[1150, 1181[[1182, 1192[ "OneSpillStore"
  v81|q QWORD "[vstack:2|q]" v0|q v0|q [473, 475[ "OneSpillStore"
  v82|q QWORD "[rdx|q]" v1|q v1|q [1192, 1213[ "OneSpillStore"
  v83|q QWORD "[r10|q]" v0|q v0|q [475, 870[[874, 1117[[1118, 1149[[1150, 1181[[1182, 1213[476 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister 868 MustHaveRegister 870 ShouldHaveRegister  "OneSpillStore"
  v84|q QWORD "[rbp|q]" v28|q v28|q [477, 485[478 MustHaveRegister 482 MustHaveRegister 484 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[r11|d]" v8|d v8|d [518, 618[[884, 946[[1066, 1076[[1086, 1117[536 MustHaveRegister 618 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rbx|d]" v7|d v7|d [518, 838[[884, 946[[956, 1026[[1036, 1046[[1056, 1076[[1086, 1117[[1118, 1149[[1150, 1181[534 MustHaveRegister 538 MustHaveRegister 540 MustHaveRegister 552 ShouldHaveRegister 566 ShouldHaveRegister 620 ShouldHaveRegister 648 MustHaveRegister 782 MustHaveRegister 837 LiveAtLoopEnd  "OneSpillStore"
  v87|d DWORD "[r8|d]" v4|d v4|d [554, 700[[884, 946[568 MustHaveRegister 580 ShouldHaveRegister 700 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[rbp|d]" v9|d v9|d [758, 768[[874, 883[[884, 920[768 MustHaveRegister 882 ShouldHaveRegister  "OneSpillStore"
  v89|d DWORD "[r14|d]" v3|d v3|d [714, 724[[884, 946[724 MustHaveRegister  "OneSpillStore"
  v90|d DWORD "[rcx|d]" v2|d v2|d [726, 838[[884, 920[740 MustHaveRegister 798 MustHaveRegister 837 LiveAtLoopEnd  "OneSpillStore"
  v91|d DWORD "[rsi|d]" v2|d v2|d [920, 946[ "OneSpillStore"
  v92|d DWORD "[rdx|d]" v9|d v9|d [920, 946[[956, 1026[[1036, 1046[[1150, 1181[ "OneSpillStore"
  v93|d DWORD "[r13|d]" v16|d v16|d [941, 946[ "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  152  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr  156  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr  168  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  230  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  260  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [v25|QWORD] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  288  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = STACKMOVE (input: v65|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  482  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  486  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  536  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  538  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  540  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  568  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  648  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  650  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  742  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v42|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr  772  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  800  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  832  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [v55|DWORD, v54|DWORD] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [v51|DWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  848  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  908  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  914  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [v22|QWORD[.]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [int[-110873|0xfffffffffffe4ee7], long[0|0x0]] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [int[-63772|0xffffffffffff06e4], long[0|0x0]] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [int[-104467|0xfffffffffffe67ed], long[660|0x294]] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [int[-103443|0xfffffffffffe6bed], long[660|0x294]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [int[-102419|0xfffffffffffe6fed], long[1940|0x794]] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [int[-72475|0xfffffffffffee4e5], long[2584|0xa18]] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction JUMP ~outgoingValues: [int[-67099|0xfffffffffffef9e5], long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [int[-109849|0xfffffffffffe52e7], long[0|0x0]] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [int[-108825|0xfffffffffffe56e7], long[0|0x0]] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [int[-105491|0xfffffffffffe63ed]] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [int[-61723|0xffffffffffff0ee5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [int[-101395|0xfffffffffffe73ed], long[20|0x14]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction JUMP ~outgoingValues: [int[-59163|0xffffffffffff18e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1096  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [int[-106515|0xfffffffffffe5fed]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1128  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1148  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [int[-69148|0xfffffffffffef1e4], long[2584|0xa18]] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1160  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [int[-107795|0xfffffffffffe5aed], long[1300|0x514]] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1192  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[474, 475[[870, 872[[912, 914[[942, 943[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v3|d [0, 1[[50, 53[[474, 475[[940, 943[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v31|q [0, 38[[472, 475[[910, 912[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 32[[474, 475[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v21|q [0, 36[[470, 475[[908, 912[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[468, 475[[942, 943[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[474, 475[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [36, 324[36 MustHaveRegister 46 MustHaveRegister 80 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [38, 324[38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [40, 324[40 MustHaveRegister 44 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [42, 324[42 MustHaveRegister 50 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [44, 324[44 MustHaveRegister 52 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [46, 86[46 MustHaveRegister 48 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [48, 90[[100, 310[[884, 946[48 MustHaveRegister 88 ShouldHaveRegister 110 ShouldHaveRegister 156 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [52, 324[52 MustHaveRegister 54 ShouldHaveRegister 84 ShouldHaveRegister 152 ShouldHaveRegister  "OneSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [80, 473[80 MustHaveRegister 82 MustHaveRegister 110 MustHaveRegister 152 ShouldHaveRegister 298 MustHaveRegister 310 MustHaveRegister 322 MustHaveRegister 466 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [82, 324[82 MustHaveRegister 84 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rbp|d]" v10|d v9|d [84, 88[84 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r13|q]" v11|q v5|d [86, 99[[100, 112[86 MustHaveRegister 98 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[rbp|q]" v12|q -1 [150, 284[[920, 946[150 MustHaveRegister 168 ShouldHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 212 MustHaveRegister 214 MustHaveRegister 258 MustHaveRegister 263 LiveAtLoopEnd 284 ShouldHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d v7|d [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [154, 160[154 MustHaveRegister 158 ShouldHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r14|d]" v15|d v6|d [156, 161[156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rdi|d]" v16|d v14|d [160, 322[[884, 920[160 MustHaveRegister 162 ShouldHaveRegister 214 MustHaveRegister 322 ShouldHaveRegister 910 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r14|q]" v17|q v16|d [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r14|q]" v18|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r14|q]" v19|q v18|q [166, 264[166 MustHaveRegister 168 ShouldHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 216 MustHaveRegister 240 MustHaveRegister 263 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[r13|q]" v20|q v19|q [168, 202[168 MustHaveRegister 170 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q -1 [906, 908[906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [914, 919[914 MustHaveRegister 916 MustHaveRegister 918 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r13|q]" v23|q -1 [216, 220[[920, 940[216 MustHaveRegister 218 ShouldHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r13|q]" v24|q v25|q [230, 260[240 ShouldHaveRegister 258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r13|q]" v25|q v24|q [260, 263[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbp|q]" v27|q v12|q [284, 287[284 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbp|q]" v28|q v27|q [288, 473[464 ShouldHaveRegister  "OneSpillStore"
  v29|q QWORD "[r13|q]" v29|q v11|q [462, 468[462 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v28|q [464, 470[464 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[r14|q]" v31|q v8|d [466, 472[466 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q -1 [476, 477[476 MustHaveRegister  "NoDefinitionFound"
  v33|q QWORD "[rsi|q]" v33|q -1 [476, 477[476 MustHaveRegister  "NoDefinitionFound"
  v34|d DWORD "[rax|d]" v34|d v28|q [478, 480[478 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q -1 [482, 483[482 MustHaveRegister  "NoDefinitionFound"
  v36|q QWORD "[rsi|q]" v36|q -1 [482, 483[482 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[r13|q]" v37|q v11|q [486, 838[[956, 1026[[1036, 1046[[1056, 1066[[1118, 1149[[1150, 1181[498 MustHaveRegister 536 MustHaveRegister 538 MustHaveRegister 768 MustHaveRegister 830 MustHaveRegister 837 LiveAtLoopEnd  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [498, 712[498 MustHaveRegister 500 MustHaveRegister 516 MustHaveRegister 654 ShouldHaveRegister 668 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d v8|d [514, 538[514 MustHaveRegister 516 ShouldHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d v7|d [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d v7|d [566, 568[566 MustHaveRegister 568 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [618, 771[618 MustHaveRegister 646 ShouldHaveRegister 668 ShouldHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q -1 [646, 652[646 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rcx|d]" v44|d -1 [648, 650[648 MustHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rcx|q]" v45|q v44|d [650, 652[650 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v43|q [652, 656[652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q v38|d [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d -1 [740, 768[740 MustHaveRegister 742 ShouldHaveRegister 756 ShouldHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdx|d]" v49|d -1 [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r11|d]" v50|d v55|d [772, 834[[1056, 1066[[1118, 1149[782 ShouldHaveRegister 798 MustHaveRegister 834 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r8|d]" v51|d v54|d [772, 832[[838, 847[[1056, 1066[[1118, 1149[830 MustHaveRegister 832 ShouldHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d -1 [798, 830[798 MustHaveRegister 800 ShouldHaveRegister 814 ShouldHaveRegister 830 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rsi|d]" v53|d -1 [800, 802[800 MustHaveRegister 802 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r8|d]" v54|d v51|d [832, 837[832 MustHaveRegister 836 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r11|d]" v55|d v50|d [834, 837[834 MustHaveRegister 836 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d v51|d [848, 868[868 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[r9|d]" v57|d -1 [1128, 1144[1144 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d -1 [1160, 1176[1176 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q -1 [1160, 1178[1178 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[r8|d]" v60|d -1 [1096, 1112[1112 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [1192, 1208[1208 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r8|q]" v62|q -1 [1192, 1210[1210 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[vstack:2|q]" v0|q v0|q [324, 469[ "OneSpillStore"
  v64|q QWORD "[vstack:1|q]" v1|q v1|q [324, 471[ "OneSpillStore"
  v65|d DWORD "[vstack:10|d]" v2|d v2|d [324, 473[ "OneSpillStore"
  v66|d DWORD "[vstack:9|d]" v3|d v3|d [324, 473[ "OneSpillStore"
  v67|d DWORD "[vstack:7|d]" v4|d v4|d [324, 473[ "OneSpillStore"
  v68|d DWORD "[vstack:6|d]" v7|d v7|d [324, 473[ "OneSpillStore"
  v69|d DWORD "[vstack:5|d]" v8|d v8|d [473, 518[500 ShouldHaveRegister 514 ShouldHaveRegister  "OneSpillStore"
  v70|d DWORD "[vstack:8|d]" v9|d v9|d [324, 473[ "OneSpillStore"
  v71|d DWORD "[rdi|d]" v16|d v16|d [920, 941[ "NoSpillStore"
  v72|q QWORD "[vstack:0|q]" v11|q v11|q [112, 462[[884, 946[462 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[vstack:4|q]" v28|q v28|q [473, 477[ "OneSpillStore"
  v74|q QWORD "[vstack:2|q]" v0|q v0|q [469, 473[ "OneSpillStore"
  v75|d DWORD "[vstack:6|d]" v7|d v7|d [473, 518[ "OneSpillStore"
  v76|d DWORD "[vstack:7|d]" v4|d v4|d [473, 554[ "OneSpillStore"
  v77|d DWORD "[vstack:8|d]" v9|d v9|d [473, 758[712 ShouldHaveRegister  "OneSpillStore"
  v78|d DWORD "[vstack:9|d]" v3|d v3|d [473, 714[ "OneSpillStore"
  v79|d DWORD "[vstack:10|d]" v2|d v2|d [473, 726[ "OneSpillStore"
  v80|q QWORD "[vstack:1|q]" v1|q v1|q [471, 838[[884, 1117[[1118, 1149[[1150, 1181[[1182, 1192[ "OneSpillStore"
  v81|q QWORD "[vstack:2|q]" v0|q v0|q [473, 475[ "OneSpillStore"
  v82|q QWORD "[rdx|q]" v1|q v1|q [1192, 1213[ "OneSpillStore"
  v83|q QWORD "[r10|q]" v0|q v0|q [475, 870[[874, 1117[[1118, 1149[[1150, 1181[[1182, 1213[476 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister 868 MustHaveRegister 870 ShouldHaveRegister  "OneSpillStore"
  v84|q QWORD "[rbp|q]" v28|q v28|q [477, 485[478 MustHaveRegister 482 MustHaveRegister 484 ShouldHaveRegister  "OneSpillStore"
  v85|d DWORD "[r11|d]" v8|d v8|d [518, 618[[884, 946[[1066, 1076[[1086, 1117[536 MustHaveRegister 618 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rbx|d]" v7|d v7|d [518, 838[[884, 946[[956, 1026[[1036, 1046[[1056, 1076[[1086, 1117[[1118, 1149[[1150, 1181[534 MustHaveRegister 538 MustHaveRegister 540 MustHaveRegister 552 ShouldHaveRegister 566 ShouldHaveRegister 620 ShouldHaveRegister 648 MustHaveRegister 782 MustHaveRegister 837 LiveAtLoopEnd  "OneSpillStore"
  v87|d DWORD "[r8|d]" v4|d v4|d [554, 700[[884, 946[568 MustHaveRegister 580 ShouldHaveRegister 700 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[rbp|d]" v9|d v9|d [758, 768[[874, 883[[884, 920[768 MustHaveRegister 882 ShouldHaveRegister  "OneSpillStore"
  v89|d DWORD "[r14|d]" v3|d v3|d [714, 724[[884, 946[724 MustHaveRegister  "OneSpillStore"
  v90|d DWORD "[rcx|d]" v2|d v2|d [726, 838[[884, 920[740 MustHaveRegister 798 MustHaveRegister 837 LiveAtLoopEnd  "OneSpillStore"
  v91|d DWORD "[rsi|d]" v2|d v2|d [920, 946[ "OneSpillStore"
  v92|d DWORD "[rdx|d]" v9|d v9|d [920, 946[[956, 1026[[1036, 1046[[1150, 1181[ "OneSpillStore"
  v93|d DWORD "[r13|d]" v16|d v16|d [941, 946[ "NoSpillStore"
  v94|q QWORD "[vstack:2|q]" v94|q -1 [1, 2[ "NoDefinitionFound"
  v95|d DWORD "[vstack:8|d]" v95|d -1 [1, 2[ "NoDefinitionFound"
  v96|q QWORD "[vstack:2|q]" v96|q -1 [1, 2[ "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  152  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr  156  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr  168  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  230  <|@ instruction [v24|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  260  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  288  <|@ instruction [v28|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = STACKMOVE (input: v65|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  482  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  486  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  536  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  538  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  540  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  568  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  648  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  650  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v78|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v79|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  742  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr  772  <|@ instruction [v50|DWORD, v51|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  800  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  832  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  848  <|@ instruction [v56|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v88|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  908  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  914  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOVE input: v90|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v88|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v95|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: v93|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v92|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOVE input: v91|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v96|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] // MoveResolver resolve mapping <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] // MoveResolver resolve mapping <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1096  <|@ instruction [v60|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1128  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1148  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1160  <|@ instruction [v58|DWORD, v59|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1192  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v7|DWORD = SHR (x: v4|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ instruction v9|DWORD = LEA address: [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   84  <|@ instruction v10|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v6|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  152  <|@ instruction v13|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction v14|DWORD = LEA address: [v13|DWORD + 2] size: DWORD <|@ <|@
      nr  156  <|@ instruction v15|DWORD = SHL value: v6|DWORD size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 23] size: QWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = AND x: v18|QWORD y: -8 size: QWORD <|@ <|@
      nr  168  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v20|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction MOV (x: [r15|QWORD + 440], y: v20|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~address: [v19|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV (x: [v12|QWORD + 12], y: v16|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction v23|QWORD = LEA address: [v19|QWORD - 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMPCONSTBRANCH x: v23|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v24|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [v12|QWORD + v24|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  260  <|@ instruction v25|QWORD = LEA address: [v24|QWORD + 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction v27|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v8|DWORD, y: v8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction v29|QWORD[*] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v30|QWORD[*] = MOVE input: v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v31|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v29|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v30|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v64|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = STACKMOVE (input: v65|DWORD[_], ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:11|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v32|QWORD, temp2: v33|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction v34|DWORD[_] = COMPRESSPOINTER (input: v28|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v34|DWORD[_]) size: DWORD <|@ <|@
      nr  482  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v28|QWORD[.]) {temp: v35|QWORD, temp2: v36|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v38|DWORD = MOV input: [v37|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v39|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction v40|DWORD = SHR x: v7|DWORD y: 8 size: DWORD <|@ <|@
      nr  536  <|@ instruction MOVB (x: [v37|QWORD[.] + v8|DWORD * 1 + 16], y: reinterpret: v40|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  538  <|@ instruction MOVB (x: [v37|QWORD[.] + v39|DWORD * 1 + 16], y: reinterpret: v7|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  540  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction v41|DWORD = DEC value: v7|DWORD size: DWORD <|@ <|@
      nr  568  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction v42|DWORD = LEA address: [v8|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v7|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  648  <|@ instruction v44|DWORD = LEA address: [v7|DWORD - 2] size: DWORD <|@ <|@
      nr  650  <|@ instruction v45|QWORD = MOVE input: v44|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction v46|QWORD = ADD (x: v43|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction v47|QWORD = MOVE input: v38|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: v47|QWORD, y: v46|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPBRANCH (x: v38|DWORD, y: v9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v78|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v79|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v48|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  742  <|@ instruction v49|DWORD = MOVSXB value: v48|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTCONSTBRANCH x: v49|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction CMPCONSTBRANCH x: v48|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOVB (x: [v37|QWORD[.] + v9|DWORD * 1 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v50|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v52|DWORD = MOVSXB input: [v50|DWORD + v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  800  <|@ instruction v53|DWORD = MOVSXB value: v52|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction TESTCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH x: v52|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction MOVB (x: [v37|QWORD[.] + v51|DWORD * 1 + 16], y: v52|DWORD) size: BYTE <|@ <|@
      nr  832  <|@ instruction v54|DWORD = INC value: v51|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction v55|DWORD = INC value: v50|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v56|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v88|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  908  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  914  <|@ instruction v22|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v22|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOVE input: v90|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v88|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v95|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction ZERO_MEMORY (pointer: [v12|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: v93|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v92|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOVE input: v91|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v96|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] // MoveResolver resolve mapping <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] // MoveResolver resolve mapping <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE input: v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v57|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1148  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v51|DWORD v37|QWORD[.] v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v58|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v59|QWORD) size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: v0|QWORD[.] v1|QWORD[.] v7|DWORD v9|DWORD v37|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  156  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  166  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  168  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  260  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction r13|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  482  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction rcx|DWORD = INC value: vstack:5|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  536  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  538  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  540  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  568  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  648  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD[_] = MOVE input: vstack:10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  742  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  800  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  832  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  910  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  916  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] // MoveResolver resolve mapping <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] // MoveResolver resolve mapping <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1148  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  152  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  156  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  166  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  168  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  206  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  208  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  210  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  260  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction r13|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  482  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction rcx|DWORD = INC value: vstack:5|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  536  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  538  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  540  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  568  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  648  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  654  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD[_] = MOVE input: vstack:10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  742  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  800  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr  802  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  832  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  910  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  916  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver break cycle <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] // MoveResolver resolve mapping <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] // MoveResolver resolve mapping <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1148  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction vstack:0|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction vstack:8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction vstack:6|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction vstack:9|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction vstack:10|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: vstack:5|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: vstack:10|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] vstack:1|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  508  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  476  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1426  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] vstack:1|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [120, 664[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [100, 1426[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [354, 682[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [678, 686[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [676, 1374[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [516, 1376[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [518, 824[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [232, 1320[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [520, 1008[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[vstack:10|d]" vstack:10|d -1 [522, 1022[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:64|q]" vstack:0|q -1 [120, 664[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:56|q]" vstack:1|q -1 [100, 1426[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:72|q]" vstack:2|q -1 [354, 682[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:64|q]" vstack:4|q -1 [678, 686[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:44|d]" vstack:5|d -1 [676, 1374[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:32|d]" vstack:6|d -1 [516, 1376[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:36|d]" vstack:7|d -1 [518, 824[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:28|d]" vstack:8|d -1 [232, 1320[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:40|d]" vstack:9|d -1 [520, 1008[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[stack:76|d]" vstack:10|d -1 [522, 1022[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  508  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  476  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  508  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  476  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:32, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, stack:32, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@reference-map: [r10:0, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B21" 
    xhandlers
    flags 
    probability 4605813719194954262
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr  754  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  782  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B58" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction rsi|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  838  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  896  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B57" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B56" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B55" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B54" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1040  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B53" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606853741842280751
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1084  <|@ instruction r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD <|@ <|@
      nr 1120  <|@ instruction TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4627582991710971095
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1162  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B48" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4627854195532752480
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B50" 
    xhandlers
    flags 
    probability 4606853741842280750
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B24" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602350142214910255
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD <|@ <|@
      nr  164  <|@ instruction r14|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  170  <|@ instruction r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD <|@ <|@
      nr  176  <|@ instruction r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B11" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  274  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  276  <|@ instruction AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  278  <|@ instruction MOV x: [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B8" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4624489917167840677
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  330  <|@ instruction r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4624573758573023326
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4594533870222224981
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4594588070726585482
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4594642818710788008
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  682  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  686  <|@ instruction rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8 <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585419652359580944
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 4564650564876865266
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:32, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, stack:32, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] stack:56|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4564580487457086032
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  384  <|@ instruction rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1320  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B37" "B58" "B57" "B41" "B55" "B54" "B53" "B29" "B56" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1354  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD rdx|DWORD r13|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed] <|@ <|@
      nr 1214  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" "B51" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1236  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r8|DWORD r13|QWORD[.] r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  506  <|@ instruction r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7] <|@ <|@
      nr  510  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B3" "B63" "B14" "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1450  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed] <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  854  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4] <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1266  <|@ instruction r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed] <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  112  <|@ instruction r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5] <|@ <|@
      nr 1284  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4] <|@ <|@
      nr  992  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  474  <|@ instruction r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1316  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7] <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5] <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1406  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@reference-map: [r10:0, stack:40]
live-base-pointers: []
jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46]
locals: r10|QWORD[.] stack:56|QWORD[.] rbx|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5] <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed] <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction r8|QWORD = MOVE input: long[2584|0xa18] <|@ <|@
      nr 1298  <|@ instruction r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5] <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr 1132  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B52 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #4          // java.lang.String.length:()int
     4: istore_2      
     5: iload_2       
     6: ldc           #26         // 65535
     8: if_icmple     21
    11: new           #27         // java.lang.IllegalArgumentException
    14: dup           
    15: ldc           #29         // "UTF8 string too large"
    17: invokespecial #5          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #2          // length:int
    25: istore_3      
    26: iload_3       
    27: iconst_2      
    28: iadd          
    29: iload_2       
    30: iadd          
    31: aload_0       
    32: getfield      #1          // data:byte[]
    35: arraylength   
    36: if_icmple     46
    39: aload_0       
    40: iconst_2      
    41: iload_2       
    42: iadd          
    43: invokevirtual #3          // enlarge:(int)void
    46: aload_0       
    47: getfield      #1          // data:byte[]
    50: astore        4
    52: aload         4
    54: iload_3       
    55: iinc          
    58: iload_2       
    59: bipush        8
    61: iushr         
    62: i2b           
    63: bastore       
    64: aload         4
    66: iload_3       
    67: iinc          
    70: iload_2       
    71: i2b           
    72: bastore       
    73: iconst_0      
    74: istore        5
    76: iload         5
    78: iload_2       
    79: if_icmpge     137
    82: aload_1       
    83: iload         5
    85: invokevirtual #6          // java.lang.String.charAt:(int)char
    88: istore        6
    90: iload         6
    92: iconst_1      
    93: if_icmplt     116
    96: iload         6
    98: bipush        127
   100: if_icmpgt     116
   103: aload         4
   105: iload_3       
   106: iinc          
   109: iload         6
   111: i2b           
   112: bastore       
   113: goto          131
   116: aload_0       
   117: iload_3       
   118: putfield      #2          // length:int
   121: aload_0       
   122: aload_1       
   123: iload         5
   125: ldc           #26         // 65535
   127: invokevirtual #7          // encodeUtf8:(java.lang.String, int, int)jdk.internal.org.objectweb.asm.ByteVector
   130: areturn       
   131: iinc          
   134: goto          76
   137: aload_0       
   138: iload_3       
   139: putfield      #2          // length:int
   142: aload_0       
   143: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec589041817f20000000000f85ac07000090909090909090909090909090909048896c2450448b5214440fbe5a10468b04d50c0000008b7e10448b0cfd0c000000418bcb418bd8d3eb81fb000001000f83ee05000090909090909090909090908b4e0c8d41028be803eb448bef49c1e503413be90f8f0102000090909089442444894c2434895c2440448944243c44895c2438448954241448895424284c8bd69090909090418b450c3b4424340f867e06000090909090908b4c2434ffc13bc10f86a3060000448b5c24348b5c2440909090909090908bf3c1ee084388741d1041885c0d1085db0f84e40300009090909083fb020f826c010000448b44243c90909090908bf3ffce443bc60f8678040000909090904183f8020f823e05000090909090909090909090418d730383fb020f823d01000090909090909090909090904863d68d4bfe4803d18bc8483bca0f86a6050000909090903bc60f8635060000909090909090904585c00f8454050000909090903b4424440f862d050000448b742438909090904585f60f85e50400008b4c24149090909090900fbe04cd100000000fbed0f7c2ff0000000f840d0400009090909080f8800f83be0500008b6c2444909090904188442d10448bc641bb01000000e9560000006666660f1f8400000000006666669066660f1f84000000000066666690909090909090410fbe44cb100fbef0f7c6ff0000000f849d0500009090909080f8800f83b6030000909090909090438844051041ffc041ffc390909090413bdb7fbe9090909090909090909090904589420c498bc2488b6c24504883c458493ba7500400000f876b050000c5f877c3448b44243c909090e9affeffff909090e9e9feffff90909090413bc90f8f070400004c896c2420909090909090909090909090909090909090498bafb80100008bfb03f98d7f02458bf141d1e6443bf7410f4ffe448bf74d8d76174983e6f84d8bee4c03ed4d3bafc80100000f870802000090909090909090909090909090904d89afb8010000410f18842e00010000410f18842e40010000410f18842e8001000048c7450001000000c74508addeadde897d0c4d8d6ef04981fd000800000f830e02000090909049c7c510000000e9310000006666660f1f8400000000006666669066660f1f84000000000066666690909090909090904ac7442d00000000004d8d6d08909090904d3bf577e3909090909090909090909085c90f8c8d03000090909090413bc90f874a030000909090903bcf0f876402000089442444895c2440448944243c44895c243844895424144889542428488974241890909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8b6c24204c8bcd448bf1498d7d10498d7110498bd6894c243448896c2420e8000000004c8b54241841807f40000f842e000000418b721048c1e6034885f60f841d000000498b47284883f8000f84890300004883e8084989472849034738488930488b6c2420488bc548c1e80341894210498bc24833c548c1e8160f8442000000498bc248c1e80948be00e0368d787f00004803c68038027429f083042400803800741fc60000498b77484885f60f84360300004883ee0849897748490377584889064c8bede9cffbffff8b6c2444909090448bc5e95cfdffff8be8458bf34889542428448bd9418bca4c8bd69090909090909090909048beaddeaddeaddeadde8bd7e8000000000f1f8400000000008500488b542428498bf2448bd1418bcb458bde896c2444488be88b442444e942feffff458bf348895424288bd0448bd94889742418418bf24c8b542418909090909090909090498bcd448bef488d7d104833c0f348aa418bfd8bc2418bcb458bde488b542428448bd6488b742418e9eefdffff8b54244490909049c7c0180a000041bbe4f1feff9090909090909045899f840400004d898790040000e8000000000f1f8400000000008b54244490909049c7c09402000041bbed6bfeffebc890909041b9ed5ffeff9090909090909045898f8404000049c7879004000094020000e8000000000f1f84000000000048895424284c8bd690909049c7c00000000041bbe74efeff488b5424289090909090909045899f840400004d898790040000e8000000000f1f84000000000048895424284c8bd690909049c7c01400000041bbed73feffebbf8b54244490909049c7c0180a000041bbe4f1feffe927ffffff8b54244490909049c7c09407000041bbed6ffeffe90effffff48895424284c8bd690909049c7c01405000041bbed5afeffe970ffffff8b54244490909049c7c00000000041bbe5f9feffe9d8feffff8b54244490909049c7c00000000041bbe406ffffe9bffeffff48895424284c8bd690909049c7c00000000041bbe752feffe921ffffff8b54244490909049c7c0180a000041bbe5e4feffe989feffff48895424284c8bd690909049c7c00000000041bbe756feffe9ebfeffff448b5c24348b5c244090909041b8e518ffff909090909090904589878404000049c7879004000000000000e8000000000f1f840000000000448b5c24348b5c244090909041b8e50effffebc68b54244490909049c7c09402000041bbed67feffe907feffff8b54244490909049c7c0180a000041bbe5e4feffe9eefdffff90909041b9ed63feffe921feffff48896c2450e800000000e945f8fffff4488d0d81faffff49898f68040000e9f7f7fffff448893424e800000000e978fcfffff448890424e800000000e9cbfcfffff441c78784040000f553ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f54dffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f53effff49c7879004000000000000e8000000000f1f84000000000041c787840400008fbdfdff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 78 34 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD  <||@
  Comment 78 36 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 78 [rdx:0, rsi:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 78 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 82 38 r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 87 40 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 87 [rdx:0, rsi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 42 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 98 44 r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 98 [rdx:0, rsi:0, rdi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 98 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 106 46 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 109 48 rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 114 50 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null  <||@
  Comment 126 block B1 null  <||@
  Comment 126 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 126 54 NOP  <||@
  Comment 127 56 NOP  <||@
  Comment 128 58 NOP  <||@
  Comment 129 60 NOP  <||@
  Comment 130 62 NOP  <||@
  Comment 131 64 NOP  <||@
  Comment 132 66 NOP  <||@
  Comment 133 68 NOP  <||@
  Comment 134 70 NOP  <||@
  Comment 135 72 NOP  <||@
  Comment 136 74 NOP  <||@
  Comment 137 76 rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 140 78 rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD  <||@
  Comment 143 80 rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 147 82 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3  <||@
  Comment 154 84 CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD  <||@
  Comment 163 block B20 null  <||@
  Comment 163 698 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 163 700 NOP  <||@
  Comment 164 702 NOP  <||@
  Comment 165 704 NOP  <||@
  Comment 166 706 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 170 708 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 174 710 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 178 712 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 183 714 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 188 716 stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 193 718 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 198 720 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 201 722 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 201 block B21 null  <||@
  Comment 201 724 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 201 726 NOP  <||@
  Comment 202 728 NOP  <||@
  Comment 203 730 NOP  <||@
  Comment 204 732 NOP  <||@
  Comment 205 734 NOP  <||@
  Comment 206 736 rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 210 738 CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD  <||@
  Comment 220 block B22 null  <||@
  Comment 220 740 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 220 742 NOP  <||@
  Comment 221 744 NOP  <||@
  Comment 222 746 NOP  <||@
  Comment 223 748 NOP  <||@
  Comment 224 750 NOP  <||@
  Comment 225 752 rcx|DWORD = INC value: stack:44|DWORD size: DWORD  <||@
  Comment 231 754 CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD  <||@
  Comment 239 block B23 null  <||@
  Comment 239 756 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 239 758 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 244 760 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 248 762 NOP  <||@
  Comment 249 764 NOP  <||@
  Comment 250 766 NOP  <||@
  Comment 251 768 NOP  <||@
  Comment 252 770 NOP  <||@
  Comment 253 772 NOP  <||@
  Comment 254 774 NOP  <||@
  Comment 255 776 rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD  <||@
  Comment 260 778 MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE  <||@
  Comment 265 780 MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE  <||@
  Comment 270 782 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 278 block B25 null  <||@
  Comment 278 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 278 800 NOP  <||@
  Comment 279 802 NOP  <||@
  Comment 280 804 NOP  <||@
  Comment 281 806 NOP  <||@
  Comment 282 808 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null  <||@
  Comment 291 block B27 null  <||@
  Comment 291 822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 291 824 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 296 826 NOP  <||@
  Comment 297 828 NOP  <||@
  Comment 298 830 NOP  <||@
  Comment 299 832 NOP  <||@
  Comment 300 834 NOP  <||@
  Comment 301 836 rsi|DWORD = DEC value: rbx|DWORD size: DWORD  <||@
  Comment 305 838 CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD  <||@
  Comment 314 block B28 null  <||@
  Comment 314 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 314 842 NOP  <||@
  Comment 315 844 NOP  <||@
  Comment 316 846 NOP  <||@
  Comment 317 848 NOP  <||@
  Comment 318 850 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null  <||@
  Comment 328 block B30 null  <||@
  Comment 328 868 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 328 870 NOP  <||@
  Comment 329 872 NOP  <||@
  Comment 330 874 NOP  <||@
  Comment 331 876 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 331 block B31 null  <||@
  Comment 331 878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 331 880 NOP  <||@
  Comment 332 882 NOP  <||@
  Comment 333 884 NOP  <||@
  Comment 334 886 NOP  <||@
  Comment 335 888 NOP  <||@
  Comment 336 890 NOP  <||@
  Comment 337 892 NOP  <||@
  Comment 338 894 rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD  <||@
  Comment 342 896 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null  <||@
  Comment 351 block B33 null  <||@
  Comment 351 908 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 910 NOP  <||@
  Comment 352 912 NOP  <||@
  Comment 353 914 NOP  <||@
  Comment 354 916 NOP  <||@
  Comment 355 918 NOP  <||@
  Comment 356 920 NOP  <||@
  Comment 357 922 NOP  <||@
  Comment 358 924 NOP  <||@
  Comment 359 926 NOP  <||@
  Comment 360 928 NOP  <||@
  Comment 361 930 NOP  <||@
  Comment 362 932 rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD  <||@
  Comment 365 934 rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD  <||@
  Comment 368 936 rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 368 938 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 371 940 rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 373 942 CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD  <||@
  Comment 382 block B34 null  <||@
  Comment 382 944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 382 946 NOP  <||@
  Comment 383 948 NOP  <||@
  Comment 384 950 NOP  <||@
  Comment 385 952 NOP  <||@
  Comment 386 954 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD  <||@
  Comment 394 block B35 null  <||@
  Comment 394 956 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 958 NOP  <||@
  Comment 395 960 NOP  <||@
  Comment 396 962 NOP  <||@
  Comment 397 964 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 397 block B36 null  <||@
  Comment 397 966 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 397 968 NOP  <||@
  Comment 398 970 NOP  <||@
  Comment 399 972 NOP  <||@
  Comment 400 974 NOP  <||@
  Comment 401 976 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 410 block B38 null  <||@
  Comment 410 994 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 410 996 NOP  <||@
  Comment 411 998 NOP  <||@
  Comment 412 1000 NOP  <||@
  Comment 413 1002 NOP  <||@
  Comment 414 1004 CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD  <||@
  Comment 424 block B39 null  <||@
  Comment 424 1006 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 1008 r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 429 1010 NOP  <||@
  Comment 430 1012 NOP  <||@
  Comment 431 1014 NOP  <||@
  Comment 432 1016 NOP  <||@
  Comment 433 1018 TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD  <||@
  Comment 442 block B40 null  <||@
  Comment 442 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 442 1022 rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 446 1024 NOP  <||@
  Comment 447 1026 NOP  <||@
  Comment 448 1028 NOP  <||@
  Comment 449 1030 NOP  <||@
  Comment 450 1032 NOP  <||@
  Comment 451 1034 NOP  <||@
  Comment 452 1036 rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 460 1038 rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD  <||@
  Comment 463 1040 TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD  <||@
  Comment 475 block B42 null  <||@
  Comment 475 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 475 1060 NOP  <||@
  Comment 476 1062 NOP  <||@
  Comment 477 1064 NOP  <||@
  Comment 478 1066 NOP  <||@
  Comment 479 1068 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null  <||@
  Comment 488 block B43 null  <||@
  Comment 488 1070 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 488 1072 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 492 1074 NOP  <||@
  Comment 493 1076 NOP  <||@
  Comment 494 1078 NOP  <||@
  Comment 495 1080 NOP  <||@
  Comment 496 1082 MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 501 1084 r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 504 1086 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 510 1088 JUMP ~outgoingValues: [] destination: B43 -> B44  <||@
  Comment 515 block B45 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 515 1102 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 1104 NOP  <||@
  Comment 545 1106 NOP  <||@
  Comment 546 1108 NOP  <||@
  Comment 547 1110 NOP  <||@
  Comment 548 1112 NOP  <||@
  Comment 549 1114 NOP  <||@
  Comment 550 1116 rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 556 1118 rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD  <||@
  Comment 559 1120 TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD  <||@
  Comment 571 block B47 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 571 1134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 571 1136 NOP  <||@
  Comment 572 1138 NOP  <||@
  Comment 573 1140 NOP  <||@
  Comment 574 1142 NOP  <||@
  Comment 575 1144 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null  <||@
  Comment 584 block B48 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 584 1146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 584 1148 NOP  <||@
  Comment 585 1150 NOP  <||@
  Comment 586 1152 NOP  <||@
  Comment 587 1154 NOP  <||@
  Comment 588 1156 NOP  <||@
  Comment 589 1158 NOP  <||@
  Comment 590 1160 MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 595 1162 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 598 1164 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 601 1166 JUMP ~outgoingValues: [] destination: B48 -> B44  <||@
  Comment 601 block B44 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 601 1090 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 601 1092 NOP  <||@
  Comment 602 1094 NOP  <||@
  Comment 603 1096 NOP  <||@
  Comment 604 1098 NOP  <||@
  Comment 605 1100 CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD  <||@
  Comment 610 block B49 null  <||@
  Comment 610 1168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 1170 NOP  <||@
  Comment 611 1172 NOP  <||@
  Comment 612 1174 NOP  <||@
  Comment 613 1176 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 613 block B50 null  <||@
  Comment 613 1178 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 613 1180 NOP  <||@
  Comment 614 1182 NOP  <||@
  Comment 615 1184 NOP  <||@
  Comment 616 1186 NOP  <||@
  Comment 617 1188 NOP  <||@
  Comment 618 1190 NOP  <||@
  Comment 619 1192 NOP  <||@
  Comment 620 1194 NOP  <||@
  Comment 621 1196 NOP  <||@
  Comment 622 1198 MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 626 1200 rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 629 1202 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 638 POLL_RETURN_FAR  <||@
  Comment 655 block B26 null  <||@
  Comment 655 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 655 812 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 660 814 NOP  <||@
  Comment 661 816 NOP  <||@
  Comment 662 818 NOP  <||@
  Comment 663 820 JUMP ~outgoingValues: [] destination: B26 -> B31  <||@
  Comment 668 block B32 null  <||@
  Comment 668 898 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 668 900 NOP  <||@
  Comment 669 902 NOP  <||@
  Comment 670 904 NOP  <||@
  Comment 671 906 JUMP ~outgoingValues: [] destination: B32 -> B36  <||@
  Comment 676 block B2 null  <||@
  Comment 676 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 676 88 NOP  <||@
  Comment 677 90 NOP  <||@
  Comment 678 92 NOP  <||@
  Comment 679 94 NOP  <||@
  Comment 680 96 CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 689 block B4 null  <||@
  Comment 689 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 689 120 stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 694 122 NOP  <||@
  Comment 695 124 NOP  <||@
  Comment 696 126 NOP  <||@
  Comment 697 128 NOP  <||@
  Comment 698 130 NOP  <||@
  Comment 699 132 NOP  <||@
  Comment 700 134 NOP  <||@
  Comment 701 136 NOP  <||@
  Comment 702 138 NOP  <||@
  Comment 703 140 NOP  <||@
  Comment 704 142 NOP  <||@
  Comment 705 144 NOP  <||@
  Comment 706 146 NOP  <||@
  Comment 707 148 NOP  <||@
  Comment 708 150 NOP  <||@
  Comment 709 152 NOP  <||@
  Comment 710 154 NOP  <||@
  Comment 711 156 NOP  <||@
  Comment 712 158 rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 719 160 rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 723 162 rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD  <||@
  Comment 726 164 r14|DWORD = SHL value: r9|DWORD size: DWORD  <||@
  Comment 732 166 CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 735 168 rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 739 170 r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 742 172 r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD  <||@
  Comment 746 174 r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD  <||@
  Comment 750 176 r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 756 178 CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 769 block B6 null  <||@
  Comment 769 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 769 242 NOP  <||@
  Comment 770 244 NOP  <||@
  Comment 771 246 NOP  <||@
  Comment 772 248 NOP  <||@
  Comment 773 250 NOP  <||@
  Comment 774 252 NOP  <||@
  Comment 775 254 NOP  <||@
  Comment 776 256 NOP  <||@
  Comment 777 258 NOP  <||@
  Comment 778 260 NOP  <||@
  Comment 779 262 NOP  <||@
  Comment 780 264 NOP  <||@
  Comment 781 266 NOP  <||@
  Comment 782 268 NOP  <||@
  Comment 783 270 MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD  <||@
  Comment 790 272 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0  <||@
  Comment 799 274 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0  <||@
  Comment 808 276 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0  <||@
  Comment 817 278 MOV x: [rbp|QWORD] y: 1 size: QWORD  <||@
  Comment 825 280 MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 825 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 832 282 MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 835 284 r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD  <||@
  Comment 839 286 CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 852 block B7 null  <||@
  Comment 852 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 852 290 NOP  <||@
  Comment 853 292 NOP  <||@
  Comment 854 294 NOP  <||@
  Comment 855 296 r13|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 862 298 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 867 block B9 loop 0 depth 1 header:523|LoopBegin  <||@
  Comment 867 312 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 896 314 NOP  <||@
  Comment 897 316 NOP  <||@
  Comment 898 318 NOP  <||@
  Comment 899 320 NOP  <||@
  Comment 900 322 NOP  <||@
  Comment 901 324 NOP  <||@
  Comment 902 326 NOP  <||@
  Comment 903 328 MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 912 330 r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD  <||@
  Comment 916 332 JUMP ~outgoingValues: [] destination: B9 -> B8  <||@
  Comment 916 block B8 loop 0 depth 1 header:523|LoopBegin  <||@
  Comment 916 300 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 916 302 NOP  <||@
  Comment 917 304 NOP  <||@
  Comment 918 306 NOP  <||@
  Comment 919 308 NOP  <||@
  Comment 920 310 CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD  <||@
  Comment 925 block B10 null  <||@
  Comment 925 334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 925 336 NOP  <||@
  Comment 926 338 NOP  <||@
  Comment 927 340 NOP  <||@
  Comment 928 342 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 928 block B12 null  <||@
  Comment 928 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 928 404 NOP  <||@
  Comment 929 406 NOP  <||@
  Comment 930 408 NOP  <||@
  Comment 931 410 NOP  <||@
  Comment 932 412 rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 932 414 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 932 block B13 null  <||@
  Comment 932 416 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 932 418 NOP  <||@
  Comment 933 420 NOP  <||@
  Comment 934 422 NOP  <||@
  Comment 935 424 NOP  <||@
  Comment 936 426 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 944 block B15 null  <||@
  Comment 944 448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 944 450 NOP  <||@
  Comment 945 452 NOP  <||@
  Comment 946 454 NOP  <||@
  Comment 947 456 NOP  <||@
  Comment 948 458 CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 957 block B17 null  <||@
  Comment 957 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 957 482 NOP  <||@
  Comment 958 484 NOP  <||@
  Comment 959 486 NOP  <||@
  Comment 960 488 NOP  <||@
  Comment 961 490 CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 969 block B19 null  <||@
  Comment 969 512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 969 514 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 973 516 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 977 518 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 982 520 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 987 522 stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 992 524 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 997 526 stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1002 528 NOP  <||@
  Comment 1003 530 NOP  <||@
  Comment 1004 532 NOP  <||@
  Comment 1005 534 NOP  <||@
  Comment 1006 536 NOP  <||@
  Comment 1007 538 NOP  <||@
  Comment 1008 540 NOP  <||@
  Comment 1009 542 NOP  <||@
  Comment 1010 544 NOP  <||@
  Comment 1011 546 NOP  <||@
  Comment 1012 548 NOP  <||@
  Comment 1013 550 NOP  <||@
  Comment 1014 552 NOP  <||@
  Comment 1015 554 NOP  <||@
  Comment 1016 556 NOP  <||@
  Comment 1017 558 NOP  <||@
  Comment 1018 560 NOP  <||@
  Comment 1019 562 NOP  <||@
  Comment 1020 564 NOP  <||@
  Comment 1021 566 NOP  <||@
  Comment 1022 568 NOP  <||@
  Comment 1023 570 NOP  <||@
  Comment 1024 572 NOP  <||@
  Comment 1025 574 NOP  <||@
  Comment 1026 576 NOP  <||@
  Comment 1027 578 NOP  <||@
  Comment 1028 580 NOP  <||@
  Comment 1029 582 NOP  <||@
  Comment 1030 584 NOP  <||@
  Comment 1031 586 NOP  <||@
  Comment 1032 588 NOP  <||@
  Comment 1033 590 NOP  <||@
  Comment 1034 592 NOP  <||@
  Comment 1035 594 NOP  <||@
  Comment 1036 596 NOP  <||@
  Comment 1037 598 NOP  <||@
  Comment 1038 600 NOP  <||@
  Comment 1039 602 NOP  <||@
  Comment 1040 604 NOP  <||@
  Comment 1041 606 NOP  <||@
  Comment 1042 608 NOP  <||@
  Comment 1043 610 NOP  <||@
  Comment 1044 612 NOP  <||@
  Comment 1045 614 NOP  <||@
  Comment 1046 616 NOP  <||@
  Comment 1047 618 NOP  <||@
  Comment 1048 620 NOP  <||@
  Comment 1049 622 NOP  <||@
  Comment 1050 624 NOP  <||@
  Comment 1051 626 NOP  <||@
  Comment 1052 628 NOP  <||@
  Comment 1053 630 NOP  <||@
  Comment 1054 632 NOP  <||@
  Comment 1055 634 NOP  <||@
  Comment 1056 636 NOP  <||@
  Comment 1057 638 NOP  <||@
  Comment 1058 640 NOP  <||@
  Comment 1059 642 NOP  <||@
  Comment 1060 644 NOP  <||@
  Comment 1061 646 NOP  <||@
  Comment 1062 648 NOP  <||@
  Comment 1063 650 NOP  <||@
  Comment 1064 652 NOP  <||@
  Comment 1065 654 NOP  <||@
  Comment 1066 656 NOP  <||@
  Comment 1067 658 NOP  <||@
  Comment 1068 660 NOP  <||@
  Comment 1069 662 NOP  <||@
  Comment 1070 664 r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1075 666 r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1078 668 r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1081 670 rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 1085 672 rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 1089 674 rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD  <||@
  Comment 1092 676 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1096 678 stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1101 680 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1101 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1106 682 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1111 684 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8  <||@
  Comment 1168 686 rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1173 688 rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3  <||@
  Comment 1180 690 MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 1184 692 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8  <||@
  Comment 1266 694 r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1269 696 JUMP ~outgoingValues: [] destination: B19 -> B21  <||@
  Comment 1274 block B24 null  <||@
  Comment 1274 784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1274 786 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1278 788 NOP  <||@
  Comment 1279 790 NOP  <||@
  Comment 1280 792 NOP  <||@
  Comment 1281 794 r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1284 796 JUMP ~outgoingValues: [] destination: B24 -> B50  <||@
  Comment 1289 block B5 null  <||@
  Comment 1289 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1289 182 rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1291 184 r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1294 186 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1299 188 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1302 190 rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 1305 192 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1308 194 NOP  <||@
  Comment 1309 196 NOP  <||@
  Comment 1310 198 NOP  <||@
  Comment 1311 200 NOP  <||@
  Comment 1312 202 NOP  <||@
  Comment 1313 204 NOP  <||@
  Comment 1314 206 NOP  <||@
  Comment 1315 208 NOP  <||@
  Comment 1316 210 NOP  <||@
  Comment 1317 212 NOP  <||@
  Comment 1318 214 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1318 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1328 216 rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1330 218 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1330 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1335 [rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1343 220 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1343 [rax:0, rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1343 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1345 222 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1350 224 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1353 226 r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD  <||@
  Comment 1356 228 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1359 230 r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1362 232 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1366 234 rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1369 236 rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1373 238 JUMP ~outgoingValues: [] destination: B5 -> B13  <||@
  Comment 1378 block B11 null  <||@
  Comment 1378 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1378 346 r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1381 348 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1386 350 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1388 352 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1391 354 stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1396 356 rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 1399 358 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1404 360 NOP  <||@
  Comment 1405 362 NOP  <||@
  Comment 1406 364 NOP  <||@
  Comment 1407 366 NOP  <||@
  Comment 1408 368 NOP  <||@
  Comment 1409 370 NOP  <||@
  Comment 1410 372 NOP  <||@
  Comment 1411 374 NOP  <||@
  Comment 1412 376 NOP  <||@
  Comment 1413 378 rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 1416 380 r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1419 382 ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1429 384 rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1432 386 rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1434 388 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1437 390 r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1440 392 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1445 396 r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD  <||@
  Comment 1448 398 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1453 400 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1458 block B58 null  <||@
  Comment 1458 1318 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1458 1320 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1462 1322 NOP  <||@
  Comment 1463 1324 NOP  <||@
  Comment 1464 1326 NOP  <||@
  Comment 1465 1328 r8|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 1472 1330 r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4]  <||@
  Comment 1478 1332 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 1478 block B59 null  <||@
  Comment 1478 1334 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1478 1336 NOP  <||@
  Comment 1479 1338 NOP  <||@
  Comment 1480 1340 NOP  <||@
  Comment 1481 1342 NOP  <||@
  Comment 1482 1344 NOP  <||@
  Comment 1483 1346 NOP  <||@
  Comment 1484 1348 NOP  <||@
  Comment 1485 1350 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1492 1352 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1499 1354 DEOPT info [bci:73]  <||@
  Comment 1499 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1504 [r10:0, r13:0, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73, duringCall: false, rethrow: false]
              |0             |1                  |2          |3          |4             |5  |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |rbx|DWORD  |rdx|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 1512 block B41 null  <||@
  Comment 1512 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1512 1044 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1516 1046 NOP  <||@
  Comment 1517 1048 NOP  <||@
  Comment 1518 1050 NOP  <||@
  Comment 1519 1052 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1526 1054 r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed]  <||@
  Comment 1532 1056 JUMP ~outgoingValues: [] destination: B41 -> B59  <||@
  Comment 1534 block B51 null  <||@
  Comment 1534 1204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1534 1206 NOP  <||@
  Comment 1535 1208 NOP  <||@
  Comment 1536 1210 NOP  <||@
  Comment 1537 1212 r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed]  <||@
  Comment 1543 1214 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 1543 block B52 null  <||@
  Comment 1543 1216 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1543 1218 NOP  <||@
  Comment 1544 1220 NOP  <||@
  Comment 1545 1222 NOP  <||@
  Comment 1546 1224 NOP  <||@
  Comment 1547 1226 NOP  <||@
  Comment 1548 1228 NOP  <||@
  Comment 1549 1230 NOP  <||@
  Comment 1550 1232 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 1557 1234 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1568 1236 DEOPT info [bci:76]  <||@
  Comment 1568 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1573 [r10:0, r13:0, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76, duringCall: false, rethrow: false]
              |0             |1                  |2          |3         |4             |5          |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |rbx|DWORD  |r8|DWORD  |r13|QWORD[.]  |r11|DWORD  |-   <||@
  Comment 1581 block B18 null  <||@
  Comment 1581 492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1581 494 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1586 496 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1589 498 NOP  <||@
  Comment 1590 500 NOP  <||@
  Comment 1591 502 NOP  <||@
  Comment 1592 504 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1599 506 r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7]  <||@
  Comment 1605 510 JUMP ~outgoingValues: [] destination: B18 -> B64  <||@
  Comment 1605 block B64 null  <||@
  Comment 1605 1430 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1605 114 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 1432 NOP  <||@
  Comment 1611 1434 NOP  <||@
  Comment 1612 1436 NOP  <||@
  Comment 1613 1438 NOP  <||@
  Comment 1614 1440 NOP  <||@
  Comment 1615 1442 NOP  <||@
  Comment 1616 1444 NOP  <||@
  Comment 1617 1446 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1624 1448 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1631 1450 DEOPT info [bci:0]  <||@
  Comment 1631 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1636 [rdx:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1644 block B63 null  <||@
  Comment 1644 1410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1644 1412 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1649 1414 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1652 1416 NOP  <||@
  Comment 1653 1418 NOP  <||@
  Comment 1654 1420 NOP  <||@
  Comment 1655 1422 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1662 1424 r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed]  <||@
  Comment 1668 1428 JUMP ~outgoingValues: [] destination: B63 -> B64  <||@
  Comment 1670 block B29 null  <||@
  Comment 1670 852 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1670 854 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1674 856 NOP  <||@
  Comment 1675 858 NOP  <||@
  Comment 1676 860 NOP  <||@
  Comment 1677 862 r8|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 1684 864 r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4]  <||@
  Comment 1690 866 JUMP ~outgoingValues: [] destination: B29 -> B59  <||@
  Comment 1695 block B54 null  <||@
  Comment 1695 1254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1695 1256 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1699 1258 NOP  <||@
  Comment 1700 1260 NOP  <||@
  Comment 1701 1262 NOP  <||@
  Comment 1702 1264 r8|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 1709 1266 r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed]  <||@
  Comment 1715 1268 JUMP ~outgoingValues: [] destination: B54 -> B59  <||@
  Comment 1720 block B3 null  <||@
  Comment 1720 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1720 100 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1725 102 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1728 104 NOP  <||@
  Comment 1729 106 NOP  <||@
  Comment 1730 108 NOP  <||@
  Comment 1731 110 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1738 112 r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed]  <||@
  Comment 1744 116 JUMP ~outgoingValues: [] destination: B3 -> B64  <||@
  Comment 1749 block B55 null  <||@
  Comment 1749 1270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1749 1272 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1753 1274 NOP  <||@
  Comment 1754 1276 NOP  <||@
  Comment 1755 1278 NOP  <||@
  Comment 1756 1280 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1763 1282 r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5]  <||@
  Comment 1769 1284 JUMP ~outgoingValues: [] destination: B55 -> B59  <||@
  Comment 1774 block B37 null  <||@
  Comment 1774 978 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1774 980 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1778 982 NOP  <||@
  Comment 1779 984 NOP  <||@
  Comment 1780 986 NOP  <||@
  Comment 1781 988 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1788 990 r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4]  <||@
  Comment 1794 992 JUMP ~outgoingValues: [] destination: B37 -> B59  <||@
  Comment 1799 block B16 null  <||@
  Comment 1799 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1799 462 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1804 464 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1807 466 NOP  <||@
  Comment 1808 468 NOP  <||@
  Comment 1809 470 NOP  <||@
  Comment 1810 472 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1817 474 r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7]  <||@
  Comment 1823 478 JUMP ~outgoingValues: [] destination: B16 -> B64  <||@
  Comment 1828 block B57 null  <||@
  Comment 1828 1302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1828 1304 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1832 1306 NOP  <||@
  Comment 1833 1308 NOP  <||@
  Comment 1834 1310 NOP  <||@
  Comment 1835 1312 r8|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 1842 1314 r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5]  <||@
  Comment 1848 1316 JUMP ~outgoingValues: [] destination: B57 -> B59  <||@
  Comment 1853 block B14 null  <||@
  Comment 1853 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1853 430 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1858 432 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1861 434 NOP  <||@
  Comment 1862 436 NOP  <||@
  Comment 1863 438 NOP  <||@
  Comment 1864 440 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1871 442 r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7]  <||@
  Comment 1877 446 JUMP ~outgoingValues: [] destination: B14 -> B64  <||@
  Comment 1882 block B61 null  <||@
  Comment 1882 1372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1882 1374 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1887 1376 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1891 1378 NOP  <||@
  Comment 1892 1380 NOP  <||@
  Comment 1893 1382 NOP  <||@
  Comment 1894 1384 r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5]  <||@
  Comment 1900 1386 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1900 block B62 null  <||@
  Comment 1900 1388 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1900 1390 NOP  <||@
  Comment 1901 1392 NOP  <||@
  Comment 1902 1394 NOP  <||@
  Comment 1903 1396 NOP  <||@
  Comment 1904 1398 NOP  <||@
  Comment 1905 1400 NOP  <||@
  Comment 1906 1402 NOP  <||@
  Comment 1907 1404 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 1914 1406 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1925 1408 DEOPT info [bci:46]  <||@
  Comment 1925 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1930 [r10:0, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46, duringCall: false, rethrow: false]
              |0             |1                  |2          |3          |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |rbx|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 1938 block B60 null  <||@
  Comment 1938 1356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1938 1358 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1943 1360 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1947 1362 NOP  <||@
  Comment 1948 1364 NOP  <||@
  Comment 1949 1366 NOP  <||@
  Comment 1950 1368 r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5]  <||@
  Comment 1956 1370 JUMP ~outgoingValues: [] destination: B60 -> B62  <||@
  Comment 1958 block B53 null  <||@
  Comment 1958 1238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1958 1240 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1962 1242 NOP  <||@
  Comment 1963 1244 NOP  <||@
  Comment 1964 1246 NOP  <||@
  Comment 1965 1248 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1972 1250 r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed]  <||@
  Comment 1978 1252 JUMP ~outgoingValues: [] destination: B53 -> B59  <||@
  Comment 1983 block B56 null  <||@
  Comment 1983 1286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1983 1288 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1987 1290 NOP  <||@
  Comment 1988 1292 NOP  <||@
  Comment 1989 1294 NOP  <||@
  Comment 1990 1296 r8|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 1997 1298 r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5]  <||@
  Comment 2003 1300 JUMP ~outgoingValues: [] destination: B56 -> B59  <||@
  Comment 2008 block B46 null  <||@
  Comment 2008 1122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2008 1124 NOP  <||@
  Comment 2009 1126 NOP  <||@
  Comment 2010 1128 NOP  <||@
  Comment 2011 1130 r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed]  <||@
  Comment 2017 1132 JUMP ~outgoingValues: [] destination: B46 -> B52  <||@
  Comment 2027 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2052 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2062 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2077 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2110 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2115 [rdx:0, rsi:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2145 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2150 [rdx:0, rsi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2180 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2185 [rdx:0, rsi:0, rdi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2220 [rax:0, rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2228 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2228 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2234 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2234 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1054[jdk.internal.org.objectweb.asm.ByteVector.putUTF8(String)]"
  method "HotSpotCompilation-1054[jdk.internal.org.objectweb.asm.ByteVector.putUTF8(String)]"
  date 1724269717520
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ab4a1a0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c3aec3fe66669089842400c0feff4883ec589041817f20000000000f85ac07000090909090909090909090909090909048896c2450448b5214440fbe5a10468b04d50c0000008b7e10448b0cfd0c000000418bcb418bd8d3eb81fb000001000f83ee05000090909090909090909090908b4e0c8d41028be803eb448bef49c1e503413be90f8f0102000090909089442444894c2434895c2440448944243c44895c2438448954241448895424284c8bd69090909090418b450c3b4424340f867e06000090909090908b4c2434ffc13bc10f86a3060000448b5c24348b5c2440909090909090908bf3c1ee084388741d1041885c0d1085db0f84e40300009090909083fb020f826c010000448b44243c90909090908bf3ffce443bc60f8678040000909090904183f8020f823e05000090909090909090909090418d730383fb020f823d01000090909090909090909090904863d68d4bfe4803d18bc8483bca0f86a6050000909090903bc60f8635060000909090909090904585c00f8454050000909090903b4424440f862d050000448b742438909090904585f60f85e50400008b4c24149090909090900fbe04cd100000000fbed0f7c2ff0000000f840d0400009090909080f8800f83be0500008b6c2444909090904188442d10448bc641bb01000000e9560000006666660f1f8400000000006666669066660f1f84000000000066666690909090909090410fbe44cb100fbef0f7c6ff0000000f849d0500009090909080f8800f83b6030000909090909090438844051041ffc041ffc390909090413bdb7fbe9090909090909090909090904589420c498bc2488b6c24504883c458493ba7500400000f876b050000c5f877c3448b44243c909090e9affeffff909090e9e9feffff90909090413bc90f8f070400004c896c2420909090909090909090909090909090909090498bafb80100008bfb03f98d7f02458bf141d1e6443bf7410f4ffe448bf74d8d76174983e6f84d8bee4c03ed4d3bafc80100000f870802000090909090909090909090909090904d89afb8010000410f18842e00010000410f18842e40010000410f18842e8001000048c7450001000000c74508c0220000897d0c4d8d6ef04981fd000800000f830e02000090909049c7c510000000e9310000006666660f1f8400000000006666669066660f1f84000000000066666690909090909090904ac7442d00000000004d8d6d08909090904d3bf577e3909090909090909090909085c90f8c8d03000090909090413bc90f874a030000909090903bcf0f876402000089442444895c2440448944243c44895c243844895424144889542428488974241890909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8b6c24204c8bcd448bf1498d7d10498d7110498bd6894c243448896c2420e84ef7c1fe4c8b54241841807f40000f842e000000418b721048c1e6034885f60f841d000000498b47284883f8000f84890300004883e8084989472849034738488930488b6c2420488bc548c1e80341894210498bc24833c548c1e8160f8442000000498bc248c1e80948be00e0368d787f00004803c68038027429f083042400803800741fc60000498b77484885f60f84360300004883ee0849897748490377584889064c8bede9cffbffff8b6c2444909090448bc5e95cfdffff8be8458bf34889542428448bd9418bca4c8bd69090909090909090909048bec022002b787f00008bd7e82945d8fe0f1f8400000000008500488b542428498bf2448bd1418bcb458bde896c2444488be88b442444e942feffff458bf348895424288bd0448bd94889742418418bf24c8b542418909090909090909090498bcd448bef488d7d104833c0f348aa418bfd8bc2418bcb458bde488b542428448bd6488b742418e9eefdffff8b54244490909049c7c0180a000041bbe4f1feff9090909090909045899f840400004d898790040000e8fa09c4fe0f1f8400000000008b54244490909049c7c09402000041bbed6bfeffebc890909041b9ed5ffeff9090909090909045898f8404000049c7879004000094020000e8b509c4fe0f1f84000000000048895424284c8bd690909049c7c00000000041bbe74efeff488b5424289090909090909045899f840400004d898790040000e87609c4fe0f1f84000000000048895424284c8bd690909049c7c01400000041bbed73feffebbf8b54244490909049c7c0180a000041bbe4f1feffe927ffffff8b54244490909049c7c09407000041bbed6ffeffe90effffff48895424284c8bd690909049c7c01405000041bbed5afeffe970ffffff8b54244490909049c7c00000000041bbe5f9feffe9d8feffff8b54244490909049c7c00000000041bbe406ffffe9bffeffff48895424284c8bd690909049c7c00000000041bbe752feffe921ffffff8b54244490909049c7c0180a000041bbe5e4feffe989feffff48895424284c8bd690909049c7c00000000041bbe756feffe9ebfeffff448b5c24348b5c244090909041b8e518ffff909090909090904589878404000049c7879004000000000000e85008c4fe0f1f840000000000448b5c24348b5c244090909041b8e50effffebc68b54244490909049c7c09402000041bbed67feffe907feffff8b54244490909049c7c0180a000041bbe5e4feffe9eefdffff90909041b9ed63feffe921feffff48896c2450e89008c2fee945f8fffff4488d0d81faffff49898f68040000e95716c4fef448893424e84dd8d7fee978fcfffff448890424e8bef9d7fee9cbfcfffff441c78784040000f553ffff49c7879004000000000000e89707c4fe0f1f84000000000041c78784040000f54dffff49c7879004000000000000e87407c4fe0f1f84000000000041c78784040000f53effff49c7879004000000000000e85107c4fe0f1f84000000000041c787840400008fbdfdff49c7879004000000000000e82e07c4fe0f1f840000000000e8a7a8d7fef4e8c104c4fef4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 78 34 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6e6ddd8e slotKind: QWORD  <||@
  Comment 78 36 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 78 [rdx:0, rsi:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 78 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 82 38 r11|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 87 40 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 87 [rdx:0, rsi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 42 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 98 44 r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 98 [rdx:0, rsi:0, rdi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 98 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 106 46 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 109 48 rbx|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 114 50 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B63 y: 65536 size: DWORD inlinedY: null  <||@
  Comment 126 block B1 null  <||@
  Comment 126 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 126 54 NOP  <||@
  Comment 127 56 NOP  <||@
  Comment 128 58 NOP  <||@
  Comment 129 60 NOP  <||@
  Comment 130 62 NOP  <||@
  Comment 131 64 NOP  <||@
  Comment 132 66 NOP  <||@
  Comment 133 68 NOP  <||@
  Comment 134 70 NOP  <||@
  Comment 135 72 NOP  <||@
  Comment 136 74 NOP  <||@
  Comment 137 76 rcx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 140 78 rax|DWORD = LEA address: [rcx|DWORD + 2] size: DWORD  <||@
  Comment 143 80 rbp|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 147 82 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3  <||@
  Comment 154 84 CMPBRANCH (x: rbp|DWORD, y: r9|DWORD) trueDestinationProbability: 0.15195618153364632 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B20 size: DWORD  <||@
  Comment 163 block B20 null  <||@
  Comment 163 698 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 163 700 NOP  <||@
  Comment 164 702 NOP  <||@
  Comment 165 704 NOP  <||@
  Comment 166 706 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 170 708 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 174 710 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 178 712 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 183 714 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 188 716 stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 193 718 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 198 720 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 201 722 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 201 block B21 null  <||@
  Comment 201 724 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 201 726 NOP  <||@
  Comment 202 728 NOP  <||@
  Comment 203 730 NOP  <||@
  Comment 204 732 NOP  <||@
  Comment 205 734 NOP  <||@
  Comment 206 736 rax|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 210 738 CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B61 size: DWORD  <||@
  Comment 220 block B22 null  <||@
  Comment 220 740 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 220 742 NOP  <||@
  Comment 221 744 NOP  <||@
  Comment 222 746 NOP  <||@
  Comment 223 748 NOP  <||@
  Comment 224 750 NOP  <||@
  Comment 225 752 rcx|DWORD = INC value: stack:44|DWORD size: DWORD  <||@
  Comment 231 754 CMPBRANCH (x: rax|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B60 size: DWORD  <||@
  Comment 239 block B23 null  <||@
  Comment 239 756 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 239 758 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 244 760 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 248 762 NOP  <||@
  Comment 249 764 NOP  <||@
  Comment 250 766 NOP  <||@
  Comment 251 768 NOP  <||@
  Comment 252 770 NOP  <||@
  Comment 253 772 NOP  <||@
  Comment 254 774 NOP  <||@
  Comment 255 776 rsi|DWORD = SHR x: rbx|DWORD y: 8 size: DWORD  <||@
  Comment 260 778 MOVB (x: [r13|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|BYTE(DWORD)) size: BYTE  <||@
  Comment 265 780 MOVB (x: [r13|QWORD[.] + rcx|DWORD * 1 + 16], y: rbx|BYTE(DWORD)) size: BYTE  <||@
  Comment 270 782 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.03649047261429861 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 278 block B25 null  <||@
  Comment 278 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 278 800 NOP  <||@
  Comment 279 802 NOP  <||@
  Comment 280 804 NOP  <||@
  Comment 281 806 NOP  <||@
  Comment 282 808 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 2 size: DWORD inlinedY: null  <||@
  Comment 291 block B27 null  <||@
  Comment 291 822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 291 824 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 296 826 NOP  <||@
  Comment 297 828 NOP  <||@
  Comment 298 830 NOP  <||@
  Comment 299 832 NOP  <||@
  Comment 300 834 NOP  <||@
  Comment 301 836 rsi|DWORD = DEC value: rbx|DWORD size: DWORD  <||@
  Comment 305 838 CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B58 size: DWORD  <||@
  Comment 314 block B28 null  <||@
  Comment 314 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 314 842 NOP  <||@
  Comment 315 844 NOP  <||@
  Comment 316 846 NOP  <||@
  Comment 317 848 NOP  <||@
  Comment 318 850 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 2 size: DWORD inlinedY: null  <||@
  Comment 328 block B30 null  <||@
  Comment 328 868 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 328 870 NOP  <||@
  Comment 329 872 NOP  <||@
  Comment 330 874 NOP  <||@
  Comment 331 876 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 331 block B31 null  <||@
  Comment 331 878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 331 880 NOP  <||@
  Comment 332 882 NOP  <||@
  Comment 333 884 NOP  <||@
  Comment 334 886 NOP  <||@
  Comment 335 888 NOP  <||@
  Comment 336 890 NOP  <||@
  Comment 337 892 NOP  <||@
  Comment 338 894 rsi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD  <||@
  Comment 342 896 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 2 size: DWORD inlinedY: null  <||@
  Comment 351 block B33 null  <||@
  Comment 351 908 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 910 NOP  <||@
  Comment 352 912 NOP  <||@
  Comment 353 914 NOP  <||@
  Comment 354 916 NOP  <||@
  Comment 355 918 NOP  <||@
  Comment 356 920 NOP  <||@
  Comment 357 922 NOP  <||@
  Comment 358 924 NOP  <||@
  Comment 359 926 NOP  <||@
  Comment 360 928 NOP  <||@
  Comment 361 930 NOP  <||@
  Comment 362 932 rdx|QWORD = MOVSXD value: rsi|DWORD size: QWORD  <||@
  Comment 365 934 rcx|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD  <||@
  Comment 368 936 rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 368 938 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 371 940 rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 373 942 CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B57 size: QWORD  <||@
  Comment 382 block B34 null  <||@
  Comment 382 944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 382 946 NOP  <||@
  Comment 383 948 NOP  <||@
  Comment 384 950 NOP  <||@
  Comment 385 952 NOP  <||@
  Comment 386 954 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B56 size: DWORD  <||@
  Comment 394 block B35 null  <||@
  Comment 394 956 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 958 NOP  <||@
  Comment 395 960 NOP  <||@
  Comment 396 962 NOP  <||@
  Comment 397 964 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 397 block B36 null  <||@
  Comment 397 966 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 397 968 NOP  <||@
  Comment 398 970 NOP  <||@
  Comment 399 972 NOP  <||@
  Comment 400 974 NOP  <||@
  Comment 401 976 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 410 block B38 null  <||@
  Comment 410 994 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 410 996 NOP  <||@
  Comment 411 998 NOP  <||@
  Comment 412 1000 NOP  <||@
  Comment 413 1002 NOP  <||@
  Comment 414 1004 CMPBRANCH (x: rax|DWORD, y: stack:28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B55 size: DWORD  <||@
  Comment 424 block B39 null  <||@
  Comment 424 1006 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 1008 r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 429 1010 NOP  <||@
  Comment 430 1012 NOP  <||@
  Comment 431 1014 NOP  <||@
  Comment 432 1016 NOP  <||@
  Comment 433 1018 TESTBRANCH (x: r14|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B54 size: DWORD  <||@
  Comment 442 block B40 null  <||@
  Comment 442 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 442 1022 rcx|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 446 1024 NOP  <||@
  Comment 447 1026 NOP  <||@
  Comment 448 1028 NOP  <||@
  Comment 449 1030 NOP  <||@
  Comment 450 1032 NOP  <||@
  Comment 451 1034 NOP  <||@
  Comment 452 1036 rax|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 460 1038 rdx|DWORD = MOVSXB value: rax|DWORD size: DWORD  <||@
  Comment 463 1040 TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 255 size: DWORD  <||@
  Comment 475 block B42 null  <||@
  Comment 475 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 475 1060 NOP  <||@
  Comment 476 1062 NOP  <||@
  Comment 477 1064 NOP  <||@
  Comment 478 1066 NOP  <||@
  Comment 479 1068 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B53 y: -128 size: BYTE inlinedY: null  <||@
  Comment 488 block B43 null  <||@
  Comment 488 1070 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 488 1072 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 492 1074 NOP  <||@
  Comment 493 1076 NOP  <||@
  Comment 494 1078 NOP  <||@
  Comment 495 1080 NOP  <||@
  Comment 496 1082 MOVB (x: [r13|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 501 1084 r8|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 504 1086 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 510 1088 JUMP ~outgoingValues: [] destination: B43 -> B44  <||@
  Comment 515 block B45 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 515 1102 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 1104 NOP  <||@
  Comment 545 1106 NOP  <||@
  Comment 546 1108 NOP  <||@
  Comment 547 1110 NOP  <||@
  Comment 548 1112 NOP  <||@
  Comment 549 1114 NOP  <||@
  Comment 550 1116 rax|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 556 1118 rsi|DWORD = MOVSXB value: rax|DWORD size: DWORD  <||@
  Comment 559 1120 TESTCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: 255 size: DWORD  <||@
  Comment 571 block B47 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 571 1134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 571 1136 NOP  <||@
  Comment 572 1138 NOP  <||@
  Comment 573 1140 NOP  <||@
  Comment 574 1142 NOP  <||@
  Comment 575 1144 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: -128 size: BYTE inlinedY: null  <||@
  Comment 584 block B48 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 584 1146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 584 1148 NOP  <||@
  Comment 585 1150 NOP  <||@
  Comment 586 1152 NOP  <||@
  Comment 587 1154 NOP  <||@
  Comment 588 1156 NOP  <||@
  Comment 589 1158 NOP  <||@
  Comment 590 1160 MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 595 1162 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 598 1164 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 601 1166 JUMP ~outgoingValues: [] destination: B48 -> B44  <||@
  Comment 601 block B44 loop 1 depth 1 header:48|LoopBegin  <||@
  Comment 601 1090 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 601 1092 NOP  <||@
  Comment 602 1094 NOP  <||@
  Comment 603 1096 NOP  <||@
  Comment 604 1098 NOP  <||@
  Comment 605 1100 CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9621275435508059 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 size: DWORD  <||@
  Comment 610 block B49 null  <||@
  Comment 610 1168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 1170 NOP  <||@
  Comment 611 1172 NOP  <||@
  Comment 612 1174 NOP  <||@
  Comment 613 1176 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 613 block B50 null  <||@
  Comment 613 1178 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 613 1180 NOP  <||@
  Comment 614 1182 NOP  <||@
  Comment 615 1184 NOP  <||@
  Comment 616 1186 NOP  <||@
  Comment 617 1188 NOP  <||@
  Comment 618 1190 NOP  <||@
  Comment 619 1192 NOP  <||@
  Comment 620 1194 NOP  <||@
  Comment 621 1196 NOP  <||@
  Comment 622 1198 MOV (x: [r10|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 626 1200 rax|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 629 1202 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 638 POLL_RETURN_FAR  <||@
  Comment 655 block B26 null  <||@
  Comment 655 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 655 812 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 660 814 NOP  <||@
  Comment 661 816 NOP  <||@
  Comment 662 818 NOP  <||@
  Comment 663 820 JUMP ~outgoingValues: [] destination: B26 -> B31  <||@
  Comment 668 block B32 null  <||@
  Comment 668 898 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 668 900 NOP  <||@
  Comment 669 902 NOP  <||@
  Comment 670 904 NOP  <||@
  Comment 671 906 JUMP ~outgoingValues: [] destination: B32 -> B36  <||@
  Comment 676 block B2 null  <||@
  Comment 676 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 676 88 NOP  <||@
  Comment 677 90 NOP  <||@
  Comment 678 92 NOP  <||@
  Comment 679 94 NOP  <||@
  Comment 680 96 CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 689 block B4 null  <||@
  Comment 689 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 689 120 stack:64|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 694 122 NOP  <||@
  Comment 695 124 NOP  <||@
  Comment 696 126 NOP  <||@
  Comment 697 128 NOP  <||@
  Comment 698 130 NOP  <||@
  Comment 699 132 NOP  <||@
  Comment 700 134 NOP  <||@
  Comment 701 136 NOP  <||@
  Comment 702 138 NOP  <||@
  Comment 703 140 NOP  <||@
  Comment 704 142 NOP  <||@
  Comment 705 144 NOP  <||@
  Comment 706 146 NOP  <||@
  Comment 707 148 NOP  <||@
  Comment 708 150 NOP  <||@
  Comment 709 152 NOP  <||@
  Comment 710 154 NOP  <||@
  Comment 711 156 NOP  <||@
  Comment 712 158 rbp|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 719 160 rdi|DWORD = ADD (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 723 162 rdi|DWORD = LEA address: [rdi|DWORD + 2] size: DWORD  <||@
  Comment 726 164 r14|DWORD = SHL value: r9|DWORD size: DWORD  <||@
  Comment 732 166 CMP (x: r14|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 735 168 rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 739 170 r14|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 742 172 r14|QWORD = LEA address: [r14|QWORD + 23] size: QWORD  <||@
  Comment 746 174 r14|QWORD = AND x: r14|QWORD y: -8 size: QWORD  <||@
  Comment 750 176 r13|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 756 178 CMPBRANCH (x: r13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 769 block B6 null  <||@
  Comment 769 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 769 242 NOP  <||@
  Comment 770 244 NOP  <||@
  Comment 771 246 NOP  <||@
  Comment 772 248 NOP  <||@
  Comment 773 250 NOP  <||@
  Comment 774 252 NOP  <||@
  Comment 775 254 NOP  <||@
  Comment 776 256 NOP  <||@
  Comment 777 258 NOP  <||@
  Comment 778 260 NOP  <||@
  Comment 779 262 NOP  <||@
  Comment 780 264 NOP  <||@
  Comment 781 266 NOP  <||@
  Comment 782 268 NOP  <||@
  Comment 783 270 MOV (x: [r15|QWORD + 440], y: r13|QWORD) size: QWORD  <||@
  Comment 790 272 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 256] instr: 0  <||@
  Comment 799 274 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 320] instr: 0  <||@
  Comment 808 276 AMD64PREFETCH ~address: [r14|QWORD + rbp|QWORD * 1 + 384] instr: 0  <||@
  Comment 817 278 MOV x: [rbp|QWORD] y: 1 size: QWORD  <||@
  Comment 825 280 MOV x: [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 825 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 832 282 MOV (x: [rbp|QWORD + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 835 284 r13|QWORD = LEA address: [r14|QWORD - 16] size: QWORD  <||@
  Comment 839 286 CMPCONSTBRANCH x: r13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B11 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 852 block B7 null  <||@
  Comment 852 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 852 290 NOP  <||@
  Comment 853 292 NOP  <||@
  Comment 854 294 NOP  <||@
  Comment 855 296 r13|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 862 298 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 867 block B9 loop 0 depth 1 header:523|LoopBegin  <||@
  Comment 867 312 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 896 314 NOP  <||@
  Comment 897 316 NOP  <||@
  Comment 898 318 NOP  <||@
  Comment 899 320 NOP  <||@
  Comment 900 322 NOP  <||@
  Comment 901 324 NOP  <||@
  Comment 902 326 NOP  <||@
  Comment 903 328 MOV x: [rbp|QWORD + r13|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 912 330 r13|QWORD = LEA address: [r13|QWORD + 8] size: QWORD  <||@
  Comment 916 332 JUMP ~outgoingValues: [] destination: B9 -> B8  <||@
  Comment 916 block B8 loop 0 depth 1 header:523|LoopBegin  <||@
  Comment 916 300 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 916 302 NOP  <||@
  Comment 917 304 NOP  <||@
  Comment 918 306 NOP  <||@
  Comment 919 308 NOP  <||@
  Comment 920 310 CMPBRANCH (x: r14|QWORD, y: r13|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD  <||@
  Comment 925 block B10 null  <||@
  Comment 925 334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 925 336 NOP  <||@
  Comment 926 338 NOP  <||@
  Comment 927 340 NOP  <||@
  Comment 928 342 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 928 block B12 null  <||@
  Comment 928 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 928 404 NOP  <||@
  Comment 929 406 NOP  <||@
  Comment 930 408 NOP  <||@
  Comment 931 410 NOP  <||@
  Comment 932 412 rbp|QWORD[.] = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 932 414 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 932 block B13 null  <||@
  Comment 932 416 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 932 418 NOP  <||@
  Comment 933 420 NOP  <||@
  Comment 934 422 NOP  <||@
  Comment 935 424 NOP  <||@
  Comment 936 426 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 944 block B15 null  <||@
  Comment 944 448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 944 450 NOP  <||@
  Comment 945 452 NOP  <||@
  Comment 946 454 NOP  <||@
  Comment 947 456 NOP  <||@
  Comment 948 458 CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 957 block B17 null  <||@
  Comment 957 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 957 482 NOP  <||@
  Comment 958 484 NOP  <||@
  Comment 959 486 NOP  <||@
  Comment 960 488 NOP  <||@
  Comment 961 490 CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 969 block B19 null  <||@
  Comment 969 512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 969 514 stack:28|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 973 516 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 977 518 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 982 520 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 987 522 stack:76|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 992 524 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 997 526 stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1002 528 NOP  <||@
  Comment 1003 530 NOP  <||@
  Comment 1004 532 NOP  <||@
  Comment 1005 534 NOP  <||@
  Comment 1006 536 NOP  <||@
  Comment 1007 538 NOP  <||@
  Comment 1008 540 NOP  <||@
  Comment 1009 542 NOP  <||@
  Comment 1010 544 NOP  <||@
  Comment 1011 546 NOP  <||@
  Comment 1012 548 NOP  <||@
  Comment 1013 550 NOP  <||@
  Comment 1014 552 NOP  <||@
  Comment 1015 554 NOP  <||@
  Comment 1016 556 NOP  <||@
  Comment 1017 558 NOP  <||@
  Comment 1018 560 NOP  <||@
  Comment 1019 562 NOP  <||@
  Comment 1020 564 NOP  <||@
  Comment 1021 566 NOP  <||@
  Comment 1022 568 NOP  <||@
  Comment 1023 570 NOP  <||@
  Comment 1024 572 NOP  <||@
  Comment 1025 574 NOP  <||@
  Comment 1026 576 NOP  <||@
  Comment 1027 578 NOP  <||@
  Comment 1028 580 NOP  <||@
  Comment 1029 582 NOP  <||@
  Comment 1030 584 NOP  <||@
  Comment 1031 586 NOP  <||@
  Comment 1032 588 NOP  <||@
  Comment 1033 590 NOP  <||@
  Comment 1034 592 NOP  <||@
  Comment 1035 594 NOP  <||@
  Comment 1036 596 NOP  <||@
  Comment 1037 598 NOP  <||@
  Comment 1038 600 NOP  <||@
  Comment 1039 602 NOP  <||@
  Comment 1040 604 NOP  <||@
  Comment 1041 606 NOP  <||@
  Comment 1042 608 NOP  <||@
  Comment 1043 610 NOP  <||@
  Comment 1044 612 NOP  <||@
  Comment 1045 614 NOP  <||@
  Comment 1046 616 NOP  <||@
  Comment 1047 618 NOP  <||@
  Comment 1048 620 NOP  <||@
  Comment 1049 622 NOP  <||@
  Comment 1050 624 NOP  <||@
  Comment 1051 626 NOP  <||@
  Comment 1052 628 NOP  <||@
  Comment 1053 630 NOP  <||@
  Comment 1054 632 NOP  <||@
  Comment 1055 634 NOP  <||@
  Comment 1056 636 NOP  <||@
  Comment 1057 638 NOP  <||@
  Comment 1058 640 NOP  <||@
  Comment 1059 642 NOP  <||@
  Comment 1060 644 NOP  <||@
  Comment 1061 646 NOP  <||@
  Comment 1062 648 NOP  <||@
  Comment 1063 650 NOP  <||@
  Comment 1064 652 NOP  <||@
  Comment 1065 654 NOP  <||@
  Comment 1066 656 NOP  <||@
  Comment 1067 658 NOP  <||@
  Comment 1068 660 NOP  <||@
  Comment 1069 662 NOP  <||@
  Comment 1070 664 r13|QWORD[*] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1075 666 r9|QWORD[*] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1078 668 r14|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1081 670 rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 1085 672 rsi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 1089 674 rdx|QWORD = MOVE input: r14|QWORD moveKind: QWORD  <||@
  Comment 1092 676 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1096 678 stack:64|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1101 680 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1101 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1106 682 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1111 684 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 16], ~expectedObject: -) {temp: rax|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8  <||@
  Comment 1168 686 rbp|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1173 688 rax|DWORD[_] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@55da8273 encoding: base: 0 shift: 3  <||@
  Comment 1180 690 MOV (x: [r10|QWORD[.] + 16], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 1184 692 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rbp|QWORD[.]) {temp: rax|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@54ab73d8  <||@
  Comment 1266 694 r13|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1269 696 JUMP ~outgoingValues: [] destination: B19 -> B21  <||@
  Comment 1274 block B24 null  <||@
  Comment 1274 784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1274 786 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1278 788 NOP  <||@
  Comment 1279 790 NOP  <||@
  Comment 1280 792 NOP  <||@
  Comment 1281 794 r8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1284 796 JUMP ~outgoingValues: [] destination: B24 -> B50  <||@
  Comment 1289 block B5 null  <||@
  Comment 1289 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1289 182 rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1291 184 r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1294 186 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1299 188 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1302 190 rcx|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 1305 192 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1308 194 NOP  <||@
  Comment 1309 196 NOP  <||@
  Comment 1310 198 NOP  <||@
  Comment 1311 200 NOP  <||@
  Comment 1312 202 NOP  <||@
  Comment 1313 204 NOP  <||@
  Comment 1314 206 NOP  <||@
  Comment 1315 208 NOP  <||@
  Comment 1316 210 NOP  <||@
  Comment 1317 212 NOP  <||@
  Comment 1318 214 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1318 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1328 216 rdx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1330 218 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1330 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1335 [rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1343 220 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1343 [rax:0, rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1343 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1345 222 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1350 224 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1353 226 r10|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD  <||@
  Comment 1356 228 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1359 230 r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1362 232 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1366 234 rbp|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1369 236 rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1373 238 JUMP ~outgoingValues: [] destination: B5 -> B13  <||@
  Comment 1378 block B11 null  <||@
  Comment 1378 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1378 346 r14|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1381 348 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1386 350 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1388 352 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1391 354 stack:72|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1396 356 rsi|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 1399 358 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1404 360 NOP  <||@
  Comment 1405 362 NOP  <||@
  Comment 1406 364 NOP  <||@
  Comment 1407 366 NOP  <||@
  Comment 1408 368 NOP  <||@
  Comment 1409 370 NOP  <||@
  Comment 1410 372 NOP  <||@
  Comment 1411 374 NOP  <||@
  Comment 1412 376 NOP  <||@
  Comment 1413 378 rcx|QWORD = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 1416 380 r13|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1419 382 ZERO_MEMORY (pointer: [rbp|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1429 384 rdi|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1432 386 rax|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1434 388 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1437 390 r11|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1440 392 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1445 396 r10|DWORD[_] = MOVE input: rsi|DWORD[_] moveKind: DWORD  <||@
  Comment 1448 398 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1453 400 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1458 block B58 null  <||@
  Comment 1458 1318 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1458 1320 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1462 1322 NOP  <||@
  Comment 1463 1324 NOP  <||@
  Comment 1464 1326 NOP  <||@
  Comment 1465 1328 r8|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 1472 1330 r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4]  <||@
  Comment 1478 1332 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 1478 block B59 null  <||@
  Comment 1478 1334 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1478 1336 NOP  <||@
  Comment 1479 1338 NOP  <||@
  Comment 1480 1340 NOP  <||@
  Comment 1481 1342 NOP  <||@
  Comment 1482 1344 NOP  <||@
  Comment 1483 1346 NOP  <||@
  Comment 1484 1348 NOP  <||@
  Comment 1485 1350 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1492 1352 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1499 1354 DEOPT info [bci:73]  <||@
  Comment 1499 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1504 [r10:0, r13:0, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 73, duringCall: false, rethrow: false]
              |0             |1                  |2          |3          |4             |5  |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |rbx|DWORD  |rdx|DWORD  |r13|QWORD[.]  |-  |-   <||@
  Comment 1512 block B41 null  <||@
  Comment 1512 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1512 1044 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1516 1046 NOP  <||@
  Comment 1517 1048 NOP  <||@
  Comment 1518 1050 NOP  <||@
  Comment 1519 1052 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1526 1054 r11|DWORD = MOVE input: int[-103443|0xfffffffffffe6bed]  <||@
  Comment 1532 1056 JUMP ~outgoingValues: [] destination: B41 -> B59  <||@
  Comment 1534 block B51 null  <||@
  Comment 1534 1204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1534 1206 NOP  <||@
  Comment 1535 1208 NOP  <||@
  Comment 1536 1210 NOP  <||@
  Comment 1537 1212 r9|DWORD = MOVE input: int[-106515|0xfffffffffffe5fed]  <||@
  Comment 1543 1214 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 1543 block B52 null  <||@
  Comment 1543 1216 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1543 1218 NOP  <||@
  Comment 1544 1220 NOP  <||@
  Comment 1545 1222 NOP  <||@
  Comment 1546 1224 NOP  <||@
  Comment 1547 1226 NOP  <||@
  Comment 1548 1228 NOP  <||@
  Comment 1549 1230 NOP  <||@
  Comment 1550 1232 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 1557 1234 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1568 1236 DEOPT info [bci:76]  <||@
  Comment 1568 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1573 [r10:0, r13:0, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:300) [bci: 76, duringCall: false, rethrow: false]
              |0             |1                  |2          |3         |4             |5          |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |rbx|DWORD  |r8|DWORD  |r13|QWORD[.]  |r11|DWORD  |-   <||@
  Comment 1581 block B18 null  <||@
  Comment 1581 492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1581 494 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1586 496 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1589 498 NOP  <||@
  Comment 1590 500 NOP  <||@
  Comment 1591 502 NOP  <||@
  Comment 1592 504 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1599 506 r11|DWORD = MOVE input: int[-110873|0xfffffffffffe4ee7]  <||@
  Comment 1605 510 JUMP ~outgoingValues: [] destination: B18 -> B64  <||@
  Comment 1605 block B64 null  <||@
  Comment 1605 1430 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1605 114 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 1432 NOP  <||@
  Comment 1611 1434 NOP  <||@
  Comment 1612 1436 NOP  <||@
  Comment 1613 1438 NOP  <||@
  Comment 1614 1440 NOP  <||@
  Comment 1615 1442 NOP  <||@
  Comment 1616 1444 NOP  <||@
  Comment 1617 1446 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1624 1448 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1631 1450 DEOPT info [bci:0]  <||@
  Comment 1631 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1636 [rdx:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1644 block B63 null  <||@
  Comment 1644 1410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1644 1412 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1649 1414 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1652 1416 NOP  <||@
  Comment 1653 1418 NOP  <||@
  Comment 1654 1420 NOP  <||@
  Comment 1655 1422 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1662 1424 r11|DWORD = MOVE input: int[-101395|0xfffffffffffe73ed]  <||@
  Comment 1668 1428 JUMP ~outgoingValues: [] destination: B63 -> B64  <||@
  Comment 1670 block B29 null  <||@
  Comment 1670 852 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1670 854 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1674 856 NOP  <||@
  Comment 1675 858 NOP  <||@
  Comment 1676 860 NOP  <||@
  Comment 1677 862 r8|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 1684 864 r11|DWORD = MOVE input: int[-69148|0xfffffffffffef1e4]  <||@
  Comment 1690 866 JUMP ~outgoingValues: [] destination: B29 -> B59  <||@
  Comment 1695 block B54 null  <||@
  Comment 1695 1254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1695 1256 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1699 1258 NOP  <||@
  Comment 1700 1260 NOP  <||@
  Comment 1701 1262 NOP  <||@
  Comment 1702 1264 r8|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 1709 1266 r11|DWORD = MOVE input: int[-102419|0xfffffffffffe6fed]  <||@
  Comment 1715 1268 JUMP ~outgoingValues: [] destination: B54 -> B59  <||@
  Comment 1720 block B3 null  <||@
  Comment 1720 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1720 100 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1725 102 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1728 104 NOP  <||@
  Comment 1729 106 NOP  <||@
  Comment 1730 108 NOP  <||@
  Comment 1731 110 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1738 112 r11|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed]  <||@
  Comment 1744 116 JUMP ~outgoingValues: [] destination: B3 -> B64  <||@
  Comment 1749 block B55 null  <||@
  Comment 1749 1270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1749 1272 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1753 1274 NOP  <||@
  Comment 1754 1276 NOP  <||@
  Comment 1755 1278 NOP  <||@
  Comment 1756 1280 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1763 1282 r11|DWORD = MOVE input: int[-67099|0xfffffffffffef9e5]  <||@
  Comment 1769 1284 JUMP ~outgoingValues: [] destination: B55 -> B59  <||@
  Comment 1774 block B37 null  <||@
  Comment 1774 978 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1774 980 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1778 982 NOP  <||@
  Comment 1779 984 NOP  <||@
  Comment 1780 986 NOP  <||@
  Comment 1781 988 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1788 990 r11|DWORD = MOVE input: int[-63772|0xffffffffffff06e4]  <||@
  Comment 1794 992 JUMP ~outgoingValues: [] destination: B37 -> B59  <||@
  Comment 1799 block B16 null  <||@
  Comment 1799 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1799 462 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1804 464 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1807 466 NOP  <||@
  Comment 1808 468 NOP  <||@
  Comment 1809 470 NOP  <||@
  Comment 1810 472 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1817 474 r11|DWORD = MOVE input: int[-109849|0xfffffffffffe52e7]  <||@
  Comment 1823 478 JUMP ~outgoingValues: [] destination: B16 -> B64  <||@
  Comment 1828 block B57 null  <||@
  Comment 1828 1302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1828 1304 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1832 1306 NOP  <||@
  Comment 1833 1308 NOP  <||@
  Comment 1834 1310 NOP  <||@
  Comment 1835 1312 r8|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 1842 1314 r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5]  <||@
  Comment 1848 1316 JUMP ~outgoingValues: [] destination: B57 -> B59  <||@
  Comment 1853 block B14 null  <||@
  Comment 1853 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1853 430 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1858 432 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1861 434 NOP  <||@
  Comment 1862 436 NOP  <||@
  Comment 1863 438 NOP  <||@
  Comment 1864 440 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1871 442 r11|DWORD = MOVE input: int[-108825|0xfffffffffffe56e7]  <||@
  Comment 1877 446 JUMP ~outgoingValues: [] destination: B14 -> B64  <||@
  Comment 1882 block B61 null  <||@
  Comment 1882 1372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1882 1374 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1887 1376 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1891 1378 NOP  <||@
  Comment 1892 1380 NOP  <||@
  Comment 1893 1382 NOP  <||@
  Comment 1894 1384 r8|DWORD = MOVE input: int[-59163|0xffffffffffff18e5]  <||@
  Comment 1900 1386 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1900 block B62 null  <||@
  Comment 1900 1388 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1900 1390 NOP  <||@
  Comment 1901 1392 NOP  <||@
  Comment 1902 1394 NOP  <||@
  Comment 1903 1396 NOP  <||@
  Comment 1904 1398 NOP  <||@
  Comment 1905 1400 NOP  <||@
  Comment 1906 1402 NOP  <||@
  Comment 1907 1404 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 1914 1406 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1925 1408 DEOPT info [bci:46]  <||@
  Comment 1925 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1930 [r10:0, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:293) [bci: 46, duringCall: false, rethrow: false]
              |0             |1                  |2          |3          |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |rbx|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 1938 block B60 null  <||@
  Comment 1938 1356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1938 1358 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1943 1360 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1947 1362 NOP  <||@
  Comment 1948 1364 NOP  <||@
  Comment 1949 1366 NOP  <||@
  Comment 1950 1368 r8|DWORD = MOVE input: int[-61723|0xffffffffffff0ee5]  <||@
  Comment 1956 1370 JUMP ~outgoingValues: [] destination: B60 -> B62  <||@
  Comment 1958 block B53 null  <||@
  Comment 1958 1238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1958 1240 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1962 1242 NOP  <||@
  Comment 1963 1244 NOP  <||@
  Comment 1964 1246 NOP  <||@
  Comment 1965 1248 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1972 1250 r11|DWORD = MOVE input: int[-104467|0xfffffffffffe67ed]  <||@
  Comment 1978 1252 JUMP ~outgoingValues: [] destination: B53 -> B59  <||@
  Comment 1983 block B56 null  <||@
  Comment 1983 1286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1983 1288 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1987 1290 NOP  <||@
  Comment 1988 1292 NOP  <||@
  Comment 1989 1294 NOP  <||@
  Comment 1990 1296 r8|QWORD = MOVE input: long[2584|0xa18]  <||@
  Comment 1997 1298 r11|DWORD = MOVE input: int[-72475|0xfffffffffffee4e5]  <||@
  Comment 2003 1300 JUMP ~outgoingValues: [] destination: B56 -> B59  <||@
  Comment 2008 block B46 null  <||@
  Comment 2008 1122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2008 1124 NOP  <||@
  Comment 2009 1126 NOP  <||@
  Comment 2010 1128 NOP  <||@
  Comment 2011 1130 r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed]  <||@
  Comment 2017 1132 JUMP ~outgoingValues: [] destination: B46 -> B52  <||@
  Comment 2027 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2052 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2062 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2077 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2110 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2115 [rdx:0, rsi:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2145 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2150 [rdx:0, rsi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2180 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2185 [rdx:0, rsi:0, rdi:0, r10:0]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2220 [rax:0, rcx:0, r10:0, stack:32, stack:40]at jdk.internal.org.objectweb.asm.ByteVector.putUTF8(ByteVector.java:285) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6 
     locals:  |r10|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2228 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2228 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2234 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2234 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
